var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","StructChunked","__clone_box","_apply_fields","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitor","bitor","bitor","bitxor","bitxor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","extend","field_by_name","fields_as_series","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_series","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_row_encoded","get_row_encoded_array","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_nulls","head","init","init","init_rand","inner_dtype","inner_dtype","interior_mut_metadata","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_reduce","max_reduce","max_reduce","max_reduce","mean","mean","median","median","median","median_reduce","median_reduce","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","min_reduce","min_reduce","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_chunks","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","slice","sort","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","sort_with","split_at","split_at","std","std_reduce","std_reduce","std_reduce","struct_fields","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_fields","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unique","unique","unique","unique","unnest","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_outer_validity","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","init","init","init","into","into","into","into_iter","into_iter","into_iter","new","new","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","experimental_enabled","extend","extend","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_flags","get_flags","get_max_value","get_min_value","get_mut","get_sorted_flag","init","init","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value","max_value","max_value_opt","merge","min_value","min_value","min_value","min_value_opt","new","not","not","read","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructOwned","StructType","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast_leaf","cast_time_unit","cast_time_unit","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_shape","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_scalar","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_str","last","leaf_dtype","len","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_logical","newest","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","oldest","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","precision","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","round","round","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","tot_eq","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","update","uses_lexical_ordering","value","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","zero","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clear","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks","iter_chunks_physical","lazy","len","max_horizontal","mean_horizontal","min_horizontal","n_chunks","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice","slice_par","sort","sort_in_place","split_at","split_at","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","unpivot","unpivot2","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","UnpivotArgs","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","index","init","into","on","streamable","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","Cache","Cast","CastTimeUnit","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","Combine","CommentPrefix","CompatLevel","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","Count","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","DataType","Date","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeType","Day","Decimal","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","Earliest","EndsWith","Enum","Enum","Eq","EqValidity","Err","Exclude","Excluded","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","Field","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","Find","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Head","HexEncode","Higher","Hour","IDX_DTYPE","INTEGER_RE","IO","IR","IS_ARROW","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexColumn","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsObject","IsStruct","IsoYear","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","Left","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","Linear","List","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","Microsecond","Microsecond","Microseconds","Midpoint","Millennium","Millisecond","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","OrdinalDay","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","PrefixFields","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","RevMapping","Reverse","Reverse","Right","Right","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Round","Round","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SQLInterface","SQLSyntax","Saturday","Scalar","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","SmartString","Snappy","Some","Some","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","StructType","SubPlan","SuffixFields","Sum","Sum","SumHorizontal","Sunday","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UnpivotArgs","UpperBound","Uppercase","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_full_join_from_series","_join_suffix_name","_split_at_unchecked","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","args","arity","arr","arr_from_iter","arr_from_iter","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","arr_from_iter_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched","batched_borrowed","binary","binary","binary_expr","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","buffer","builder","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cat","cat","cause","cbrt","ceil","ceil","center","century","check_bound","check_schema","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","compare","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_page_size","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diagonal","diff","diff","diff","display","distinct_count","distinct_count","div","div","divide","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_no_validate","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype_col","dtype_cols","dtype_overwrite","duration","eager","eager","empty","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","every","exact","exclude","exclude_dtype","execute","expand_paths","expand_paths_hive","expanded_from_single_directory","explain","explode","explode","explode","explode_and_offsets","expr","extend_constant","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","field_by_names","fields","fields","file_caching","file_caching","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_par_iter","from_par_iter","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full","full_join","full_join","full_null","full_null","full_null","fun","function_expr","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_glob_start_idx","get_metadata","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_names_and_dtypes","get_names_and_dtypes","get_names_and_dtypes","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_nulls","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_file_paths","include_file_paths","include_header","include_header","increment_strong_count","increment_strong_count_in","index","index_cols","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","interpolate","interpolate_by","interpolate_by","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","into_series","into_thrift","into_vec","into_vec","into_vec","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","join","join","join","join","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_reduce","max_reduce","max_value","max_value","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_reduce","median_reduce","memory_map","memory_map","memory_mapped","merge","merge_dtypes","merge_from_ref","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_max","min_periods","min_periods","min_periods","min_reduce","min_reduce","min_value","min_value","minute","minute","minute","minute","minutes","minutes","missing_is_null","mode","mode","month","month","month","month","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_streaming","new_streaming","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not_equal","not_equal_missing","nth","null","null","null","null","null_count","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","output_schema","over","over_with_options","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parse_options","parsed_int","partial_cmp","partial_cmp","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","predicate_pushdown","predicate_pushdown","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","projection_pushdown","projection_pushdown","propagate_nulls","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","replace_strict","replace_time_zone","reserve","reshape","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_max_by","rolling_max_by","rolling_mean","rolling_mean","rolling_mean_by","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min","rolling_min_by","rolling_min_by","rolling_quantile","rolling_quantile","rolling_quantile_by","rolling_quantile_by","rolling_std","rolling_std","rolling_std_by","rolling_std_by","rolling_sum","rolling_sum","rolling_sum_by","rolling_sum_by","rolling_var","rolling_var","rolling_var_by","rolling_var_by","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_estimate","row_estimate","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_inference","schema_overwrite","schema_with_arenas","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set_cached_arena","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","should_coalesce","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice","slice_pushdown","slice_pushdown","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_reduce","std_reduce","store","str","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","streaming","streaming","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_reduce","sum_reduce","super_type","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","to_dummies","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","to_writer","to_writer","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_arr_from_iter_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_project","try_serialize","try_unwrap","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","udf","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unpivot","unwrap","unwrap_or_clone","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value_counts","value_counts","value_name","value_unchecked","values","values_iter","values_iter","var","var","var","var","var","var","var_reduce","var_reduce","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","when","when","when","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_cloud_options","with_cluster_with_columns","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compat_level","with_compat_level","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtype_overwrite","with_encoding","with_encoding","with_eol_char","with_eol_char","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","with_has_header","with_hive_partition_columns","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_include_file_path","with_include_file_path","with_include_file_paths","with_infer_schema_length","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_low_memory","with_low_memory","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_new_streaming","with_null_value","with_null_values","with_null_values","with_optimizations","with_parse_options","with_path","with_path","with_paths","with_paths","with_paths","with_predicate","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_raise_if_empty","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_sample_size","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","with_truncate_ragged_lines","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_df_to_file","write_df_to_file","write_partitioned_dataset","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","hive_parts","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","right_on","scan_type","schema","slice","sort_options","version","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dtype","from","from","from","from","init","init","init","init","init_buffers","into","into","into","into","into_series","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","buf","time_unit","time_zone","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","day","days","fn_params","hour","hour","hours","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","second","seconds","string","week","week","weekday","weekday","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_max_retries","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","max_retries","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructOwned","StructType","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","ignore_nulls","decimals","digits","has_max","has_min","limit","limit","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","BitRepr","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","amortized_iter","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","init","into","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","iter_chunks","len","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_array","reshape_list","reverse","reverse","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","slice","sort","sort_with","split_at","split_at","std","std_reduce","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_mul_owned","try_set_metadata","try_sub_owned","type_id","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[850,"polars::chunked_array::arithmetic"],[878,"polars::chunked_array::builder"],[1139,"polars::chunked_array::builder::list"],[1156,"polars::chunked_array::cast"],[1186,"polars::chunked_array::collect"],[1200,"polars::chunked_array::float"],[1202,"polars::chunked_array::from_iterator_par"],[1206,"polars::chunked_array::iterator"],[1261,"polars::chunked_array::iterator::par"],[1263,"polars::chunked_array::metadata"],[1551,"polars::chunked_array::object"],[1628,"polars::chunked_array::object::builder"],[1651,"polars::chunked_array::object::registry"],[1679,"polars::chunked_array::ops"],[1886,"polars::chunked_array::ops::arity"],[1921,"polars::chunked_array::ops::float_sorted_arg_max"],[1923,"polars::chunked_array::ops::gather"],[1926,"polars::chunked_array::ops::search_sorted"],[1957,"polars::chunked_array::ops::sort"],[1964,"polars::chunked_array::ops::sort::arg_bottom_k"],[1965,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1973,"polars::chunked_array::ops::sort::options"],[1986,"polars::chunked_array::temporal"],[1994,"polars::chunked_array::temporal::conversion"],[1997,"polars::datatypes"],[3426,"polars::datatypes::categorical"],[3443,"polars::datatypes::categorical::revmap"],[3449,"polars::datatypes::categorical::string_cache"],[3468,"polars::docs"],[3470,"polars::error"],[3558,"polars::error::PolarsError"],[3562,"polars::error::constants"],[3565,"polars::frame"],[3828,"polars::frame::explode"],[3858,"polars::frame::group_by"],[4098,"polars::frame::group_by::GroupByMethod"],[4099,"polars::frame::group_by::GroupsProxy"],[4101,"polars::frame::group_by::aggregations"],[4114,"polars::frame::group_by::expr"],[4117,"polars::frame::row"],[4227,"polars::functions"],[4229,"polars::prelude"],[9438,"polars::prelude::AggExpr"],[9445,"polars::prelude::BooleanFunction"],[9448,"polars::prelude::DslPlan"],[9502,"polars::prelude::Expr"],[9537,"polars::prelude::FunctionExpr"],[9559,"polars::prelude::GroupByMethod"],[9560,"polars::prelude::GroupsProxy"],[9562,"polars::prelude::LiteralValue"],[9565,"polars::prelude::PolarsError"],[9569,"polars::prelude::StringFunction"],[9583,"polars::prelude::TemporalFunction"],[9585,"polars::prelude::aggregations"],[9598,"polars::prelude::arity"],[9633,"polars::prelude::array"],[9652,"polars::prelude::binary"],[9668,"polars::prelude::buffer"],[9742,"polars::prelude::buffer::Buffer"],[9745,"polars::prelude::cat"],[9746,"polars::prelude::chunkedarray"],[9813,"polars::prelude::chunkedarray::string"],[9853,"polars::prelude::chunkedarray::string::infer"],[9884,"polars::prelude::cloud"],[9933,"polars::prelude::cloud::options"],[9941,"polars::prelude::datatypes"],[10214,"polars::prelude::datatypes::categorical"],[10231,"polars::prelude::datatypes::categorical::revmap"],[10237,"polars::prelude::datatypes::categorical::string_cache"],[10241,"polars::prelude::datetime"],[10244,"polars::prelude::default_arrays"],[10250,"polars::prelude::dt"],[10302,"polars::prelude::expr"],[10305,"polars::prelude::fixed_size_list"],[10325,"polars::prelude::float_sorted_arg_max"],[10327,"polars::prelude::function_expr"],[10500,"polars::prelude::function_expr::BooleanFunction"],[10503,"polars::prelude::function_expr::FunctionExpr"],[10525,"polars::prelude::function_expr::StringFunction"],[10539,"polars::prelude::function_expr::TemporalFunction"],[10541,"polars::prelude::function_expr::cat"],[10543,"polars::prelude::function_expr::pow"],[10547,"polars::prelude::function_expr::rolling"],[10577,"polars::prelude::function_expr::rolling_by"],[10607,"polars::prelude::gather"],[10610,"polars::prelude::interpolate"],[10614,"polars::prelude::interpolate_by"],[10615,"polars::prelude::mode"],[10616,"polars::prelude::nan_propagating_aggregate"],[10620,"polars::prelude::null"],[10651,"polars::prelude::schema_inference"],[10678,"polars::prelude::search_sorted"],[10684,"polars::prelude::series"],[10706,"polars::prelude::slice"],[10709,"polars::prelude::sort"],[10716,"polars::prelude::sort::arg_bottom_k"],[10717,"polars::prelude::sort::arg_sort_multiple"],[10725,"polars::prelude::sort::options"],[10738,"polars::prelude::strings"],[10792,"polars::prelude::udf"],[10798,"polars::prelude::utf8"],[10802,"polars::series"],[11236,"polars::series::amortized_iter"],[11260,"polars::series::arithmetic"],[11281,"polars::series::arithmetic::checked"],[11287,"polars::series::ops"],[11315,"dyn_clone::sealed"],[11316,"polars_core::datatypes"],[11317,"polars_core::chunked_array"],[11318,"polars_error"],[11319,"core::result"],[11320,"polars_core::series"],[11321,"core::ops::function"],[11322,"num_traits"],[11323,"num_traits::cast"],[11324,"polars_core::series::arithmetic::borrowed"],[11325,"polars_core::frame::group_by::proxy"],[11326,"polars_core::chunked_array::object"],[11327,"core::option"],[11328,"polars_arrow::array"],[11329,"alloc::boxed"],[11330,"core::iter::traits::iterator"],[11331,"polars_core::chunked_array::list::iterator"],[11332,"core::marker"],[11333,"alloc::borrow"],[11334,"polars_core::series::amortized_iter"],[11335,"polars_core::datatypes::dtype"],[11336,"alloc::string"],[11337,"polars_core::chunked_array::ops::sort::options"],[11338,"polars_core::chunked_array::cast"],[11339,"polars_core::series::arithmetic::borrowed::checked"],[11340,"core::slice::iter"],[11341,"core::iter::adapters::map"],[11342,"alloc::vec"],[11343,"polars_core::chunked_array::metadata"],[11344,"core::iter::traits::double_ended"],[11345,"polars_arrow::offset"],[11346,"core::fmt"],[11347,"core::iter::traits::collect"],[11348,"polars_utils::iter::fallible"],[11349,"polars_core::chunked_array::from_iterator"],[11350,"polars_arrow::bitmap::immutable"],[11351,"core::borrow"],[11352,"core::convert"],[11353,"rayon::iter"],[11354,"polars_arrow::pushable"],[11355,"polars_arrow::trusted_len"],[11356,"polars_core::datatypes::any_value"],[11357,"polars_arrow::array::binary"],[11358,"std::sync::rwlock"],[11359,"polars_core::chunked_array::logical"],[11360,"polars_core::datatypes::time_unit"],[11361,"core::iter::traits::exact_size"],[11362,"polars_core::series::series_trait"],[11363,"polars_core::chunked_array::iterator"],[11364,"polars_core::chunked_array::metadata::guard"],[11365,"polars_core::chunked_array::metadata::interior_mutable"],[11366,"alloc::sync"],[11367,"polars_core::chunked_array::metadata::md_trait"],[11368,"core::ops::range"],[11369,"polars_core::datatypes::field"],[11370,"polars_arrow::legacy::kernels::rolling::no_nulls"],[11371,"polars_core::chunked_array::ops::rolling_window"],[11372,"polars_ops::chunked_array::scatter"],[11373,"polars_utils::index"],[11374,"ahash::random_state"],[11375,"polars_utils::hashing"],[11376,"ndarray::data_repr"],[11377,"ndarray::dimension::dim"],[11378,"ndarray"],[11379,"either"],[11380,"core::any"],[11381,"polars_core::frame"],[11382,"polars_core::chunked_array::arithmetic::numeric"],[11383,"polars_core::chunked_array::builder::list::anonymous"],[11384,"polars_core::chunked_array::builder::list::boolean"],[11385,"polars_core::chunked_array::builder::list::primitive"],[11386,"polars_core::chunked_array::builder::list"],[11387,"polars_core::chunked_array::builder"],[11388,"polars_core::chunked_array::builder::list::binary"],[11389,"polars_core::chunked_array::builder::list::null"],[11390,"polars_core::chunked_array::builder::string"],[11391,"polars_arrow::array::binview"],[11392,"polars_core::chunked_array::builder::boolean"],[11393,"polars_core::chunked_array::builder::null"],[11394,"polars_core::chunked_array::builder::primitive"],[11395,"core::clone"],[11396,"polars_core::series::implementations::null"],[11397,"core::hash"],[11398,"polars_core::chunked_array::collect"],[11399,"polars_core::chunked_array::float"],[11400,"polars_core::chunked_array::from_iterator_par"],[11401,"polars_arrow::array::boolean"],[11402,"polars_arrow::array::fixed_size_list"],[11403,"polars_core::chunked_array::metadata::env"],[11404,"polars_core::chunked_array::metadata::collect"],[11405,"bitflags::iter"],[11406,"std::fs"],[11407,"std::sync::mutex"],[11408,"polars_arrow::datatypes"],[11409,"polars_arrow::bitmap::utils::iterator"],[11410,"polars_arrow::bitmap::utils::zip_validity"],[11411,"polars_core::chunked_array::object::builder"],[11412,"polars_core::chunked_array::object::registry"],[11413,"polars_core::chunked_array::ops"],[11414,"polars_arrow::legacy::array::slice"],[11415,"polars_core::chunked_array::ops::arity"],[11416,"polars_arrow::array::static_array"],[11417,"core::error"],[11418,"polars_arrow::array::primitive"],[11419,"polars_core::chunked_array::ops::search_sorted"],[11420,"polars_core::utils"],[11421,"polars_row::row"],[11422,"chrono::naive::datetime"],[11423,"chrono_tz::timezones"],[11424,"chrono::naive::time"],[11425,"polars_core::chunked_array::logical::categorical"],[11426,"polars_core::chunked_array::logical::categorical::builder"],[11427,"polars_arrow::array::static_array_collect"],[11428,"bytemuck::zeroable"],[11429,"polars_core::chunked_array::logical::categorical::revmap"],[11430,"polars_core::chunked_array::logical::categorical::merge"],[11431,"polars_arrow::datatypes::physical_type"],[11432,"polars_arrow::types"],[11433,"chrono::time_delta"],[11434,"chrono::naive::date"],[11435,"smartstring::config"],[11436,"smartstring"],[11437,"polars_core::datatypes::into_scalar"],[11438,"core::cmp"],[11439,"polars_core::chunked_array::logical::categorical::string_cache"],[11440,"polars_error::warning"],[11441,"polars_parquet::parquet::error"],[11442,"std::io::error"],[11443,"simdutf8::basic"],[11444,"planus::errors"],[11445,"alloc::collections"],[11446,"regex::error"],[11447,"polars_core::schema"],[11448,"polars_core::series::from"],[11449,"hashbrown::set"],[11450,"polars_arrow::datatypes::schema"],[11451,"polars_core::frame::row"],[11452,"polars_core::frame::group_by"],[11453,"polars_time::group_by::dynamic"],[11454,"polars_lazy::frame"],[11455,"polars_core::chunked_array::ndarray"],[11456,"polars_arrow::record_batch"],[11457,"polars_arrow::array::struct_"],[11458,"polars_core::frame::explode"],[11459,"polars_time::windows::duration"],[11460,"polars_utils::idx_vec"],[11461,"rayon::iter::plumbing"],[11462,"polars_plan::plans::aexpr"],[11463,"polars_core::frame::group_by::into_groups"],[11464,"core::iter::adapters::copied"],[11465,"core::iter::adapters::zip"],[11466,"polars_utils::float"],[11467,"polars_arrow::types::native"],[11468,"polars_core::frame::group_by::aggregations::agg_list"],[11469,"polars_core::frame::group_by::aggregations"],[11470,"polars_core::frame::group_by::expr"],[11471,"polars_core::frame::row::av_buffer"],[11472,"polars_utils::arena"],[11473,"polars_plan::plans::ir"],[11474,"polars_ops::frame::join::hash_join"],[11475,"polars_ops::frame::join::args"],[11476,"polars_ops::chunked_array::gather::chunked"],[11477,"polars_ops::frame"],[11478,"polars_io::csv::read::reader"],[11479,"polars_io::predicates"],[11480,"polars_io::mmap"],[11481,"polars_plan::dsl::expr"],[11482,"core::alloc"],[11483,"polars_plan::plans::anonymous_scan"],[11484,"polars_lazy::scan::anonymous_scan"],[11485,"polars_plan::dsl::expr_dyn_fn"],[11486,"polars_plan::plans::visitor"],[11487,"polars_plan::dsl::function_expr"],[11488,"polars_ops::series::ops::arg_min_max"],[11489,"polars_plan::dsl::array"],[11490,"polars_plan::dsl::list"],[11491,"polars_plan::dsl::function_expr::schema"],[11492,"polars_io::ipc::ipc_stream"],[11493,"std::io"],[11494,"polars_ops::chunked_array::binary"],[11495,"polars_time::chunkedarray::string"],[11496,"std::os::fd::owned"],[11497,"polars_ops::chunked_array::list"],[11498,"std::os::fd::raw"],[11499,"polars_ops::series::ops"],[11500,"polars_ops::chunked_array::strings"],[11501,"core::mem::maybe_uninit"],[11502,"polars_ops::chunked_array::strings::namespace"],[11503,"polars_io::csv::read::read_impl::batched"],[11504,"polars_io::csv::write::writer"],[11505,"polars_io::ipc::write"],[11506,"polars_io::parquet::read::reader"],[11507,"polars_io::parquet::read::read_impl"],[11508,"polars_io::parquet::write::writer"],[11509,"polars_io::parquet::write::batched_writer"],[11510,"polars_plan::dsl::binary"],[11511,"polars_plan::dsl::udf"],[11512,"polars_lazy::frame::exitable"],[11513,"hashbrown::map"],[11514,"polars_plan::dsl::cat"],[11515,"polars_ops::series::ops::round"],[11516,"polars_time::series"],[11517,"polars_lazy::scan::csv"],[11518,"polars_lazy::scan::ipc"],[11519,"polars_lazy::scan::ndjson"],[11520,"polars_lazy::scan::parquet"],[11521,"polars_time::chunkedarray::rolling_window"],[11522,"polars_time::windows::bounds"],[11523,"polars_time::windows::group_by"],[11524,"polars_time::windows::window"],[11525,"polars_io::csv::read::options"],[11526,"polars_io::csv::write::options"],[11527,"polars_io::ipc::ipc_file"],[11528,"polars_io::json"],[11529,"polars_ops::frame::join::asof"],[11530,"polars_io::parquet::read::options"],[11531,"polars_ops::series::ops::interpolation::interpolate"],[11532,"polars_ops::series::ops::is_between"],[11533,"polars_ops::series::ops::rank"],[11534,"polars_io::parquet::write::options"],[11535,"polars_plan::plans"],[11536,"polars_plan::dsl::arity"],[11537,"polars_plan::dsl::function_expr::boolean"],[11538,"polars_plan::dsl::function_expr::cat"],[11539,"polars_plan::dsl::function_expr::datetime"],[11540,"polars_plan::dsl::function_expr::pow"],[11541,"polars_plan::dsl::function_expr::strings"],[11542,"polars_plan::dsl::function_expr::struct_"],[11543,"polars_plan::dsl::functions::temporal"],[11544,"polars_plan::dsl::options"],[11545,"polars_plan::frame::opt_state"],[11546,"polars_plan::plans::lit"],[11547,"polars_plan::plans::options"],[11548,"polars_parquet::arrow::write"],[11549,"polars_parquet::parquet::metadata::file_metadata"],[11550,"polars_arrow::legacy::kernels::rolling"],[11551,"polars_arrow::legacy::kernels::time"],[11552,"polars_lazy::scan::file_list_reader"],[11553,"polars_io::cloud::options"],[11554,"polars_parquet::parquet::metadata::column_order"],[11555,"polars_ops::chunked_array::binary::namespace"],[11556,"polars_io::ndjson::core"],[11557,"std::path"],[11558,"polars_ops::frame::join::cross_join"],[11559,"polars_lazy::dsl::eval"],[11560,"polars_time::chunkedarray::date"],[11561,"polars_time::chunkedarray::datetime"],[11562,"polars_time::chunkedarray::duration"],[11563,"core::ffi::c_str"],[11564,"core::default"],[11565,"polars_parquet::parquet::metadata::row_metadata"],[11566,"polars_core::series::ops"],[11567,"polars_plan::dsl::dt"],[11568,"polars_ops::series::ops::various"],[11569,"polars_arrow::scalar"],[11570,"polars_lazy::dsl::list"],[11571,"crossterm::command"],[11572,"polars_plan::dsl::struct_"],[11573,"polars_io::shared"],[11574,"polars_plan::plans::apply"],[11575,"polars_plan::dsl::function_expr::list"],[11576,"polars_plan::dsl::function_expr::array"],[11577,"polars_plan::dsl::function_expr::binary"],[11578,"polars_plan::dsl::function_expr::range"],[11579,"std::ffi::os_str"],[11580,"alloc::ffi::c_str"],[11581,"polars_parquet::arrow::read::statistics"],[11582,"polars_arrow::array::struct_::mutable"],[11583,"polars_arrow::array::growable::structure"],[11584,"polars_arrow::legacy::array::default_arrays"],[11585,"polars_arrow::buffer::immutable"],[11586,"polars_arrow::array::list"],[11587,"polars_core::named_from"],[11588,"polars_ops::frame::join"],[11589,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[11590,"polars_time::chunkedarray::time"],[11591,"core::num::nonzero"],[11592,"parquet_format_safe::parquet_format"],[11593,"polars_arrow::array::struct_::iterator"],[11594,"polars_ops::frame::join::asof::groups"],[11595,"polars_ops::chunked_array::list::namespace"],[11596,"polars_plan::dsl::name"],[11597,"polars_io::options"],[11598,"polars_core::chunked_array::ops::aggregate"],[11599,"polars_core::chunked_array::ops::aggregate::quantile"],[11600,"polars_arrow::legacy::index"],[11601,"polars_ops::chunked_array::strings::split"],[11602,"core::pin"],[11603,"core::io::borrowed_buf"],[11604,"parquet_format_safe::thrift::varint::decode"],[11605,"polars_time::chunkedarray::rolling_window::dispatch"],[11606,"polars_time::round"],[11607,"polars_parquet::parquet::metadata::schema_descriptor"],[11608,"polars_core::chunked_array::ops::aggregate::var"],[11609,"polars_plan::dsl::string"],[11610,"polars_ops::series::ops::to_dummies"],[11611,"polars_time::truncate"],[11612,"polars_io::csv::read::schema_inference"],[11613,"polars_time::upsample"],[11614,"polars_core::hashing::vector_hasher"],[11615,"alloc::collections::btree::map"],[11616,"polars_ops::chunked_array::array::namespace"],[11617,"polars_ops::chunked_array::array"],[11618,"polars_io::csv::read::buffer"],[11619,"polars_time::chunkedarray::string::patterns"],[11620,"polars_time::chunkedarray::string::infer"],[11621,"polars_arrow::legacy::array::fixed_size_list"],[11622,"polars_plan::dsl::function_expr::rolling"],[11623,"polars_plan::dsl::function_expr::rolling_by"],[11624,"polars_arrow::legacy::array::null"],[11625,"polars_arrow::bitmap::mutable"],[11626,"polars_arrow::array::utf8"],[11627,"polars_core::series::iterator"],[11628,"alloc::rc"],[11629,"polars_core"],[11630,"polars_core::chunked_array::struct_"],[11631,"polars_core::chunked_array::iterator::par"],[11632,"polars_core::chunked_array::object::extension"],[11633,"polars_core::chunked_array::ops::float_sorted_arg_max"],[11634,"polars_core::chunked_array::ops::gather"],[11635,"polars_core::chunked_array::ops::sort"],[11636,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[11637,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[11638,"polars_core::chunked_array::temporal"],[11639,"polars_core::chunked_array::temporal::conversion"],[11640,"polars_core::chunked_array::temporal::time"],[11641,"polars_core::chunked_array::logical::date"],[11642,"polars_core::chunked_array::logical::datetime"],[11643,"polars_core::chunked_array::logical::decimal"],[11644,"polars_core::chunked_array::logical::duration"],[11645,"polars_core::datatypes::aliases"],[11646,"polars_utils::aliases"],[11647,"polars_core::chunked_array::logical::time"],[11648,"polars_error::constants"],[11649,"polars_core::functions"],[11650,"polars_io::utils::other"],[11651,"polars_io::parquet::metadata"],[11652,"polars_arrow::legacy::prelude"],[11653,"polars_arrow::legacy::array"],[11654,"polars_io::path_utils"],[11655,"polars_ops::series::ops::rolling"],[11656,"polars_parquet::parquet::write"],[11657,"polars_ops::frame::join::general"],[11658,"polars_ops::series::ops::abs"],[11659,"polars_plan::dsl::functions::selectors"],[11660,"polars_plan::dsl::functions::horizontal"],[11661,"polars_plan::dsl::functions::arity"],[11662,"polars_plan::dsl"],[11663,"polars_plan::dsl::functions::range"],[11664,"polars_plan::dsl::functions::index"],[11665,"polars_ops::chunked_array"],[11666,"polars_plan::dsl::functions::coerce"],[11667,"polars_plan::dsl::functions::syntactic_sugar"],[11668,"polars_time::base_utc_offset"],[11669,"polars_io::csv::read"],[11670,"polars_time"],[11671,"polars_ops::series::ops::clip"],[11672,"polars_io"],[11673,"polars_ops::series::ops::horizontal"],[11674,"polars_lazy::dsl::functions"],[11675,"polars_plan::dsl::functions::concat"],[11676,"polars_ops::series::ops::index"],[11677,"polars_io::csv::read::parser"],[11678,"polars_ops::series::ops::cum_agg"],[11679,"polars_ops::series::ops::diff"],[11680,"polars_time::dst_offset"],[11681,"polars_ops::series::ops::floor_divide"],[11682,"polars_ops::chunked_array::strings::concat"],[11683,"polars_ops::chunked_array::datetime::replace_time_zone"],[11684,"polars_time::date_range"],[11685,"polars_ops::series::ops::interpolation"],[11686,"polars_ops::series::ops::interpolation::interpolate_by"],[11687,"polars_io::csv::read::utils"],[11688,"polars_ops::series::ops::is_first_distinct"],[11689,"polars_ops::series::ops::is_in"],[11690,"polars_ops::series::ops::is_last_distinct"],[11691,"polars_io::parquet::read::utils"],[11692,"polars_ops::series::ops::negate"],[11693,"polars_ops::series::ops::not"],[11694,"polars_ops::series::ops::int_range"],[11695,"polars_plan::dsl::functions::repeat"],[11696,"polars_ops::chunked_array::repeat_by"],[11697,"polars_ops::series::ops::replace"],[11698,"polars_ops::chunked_array::strings::strip"],[11699,"polars_io::partition"],[11700,"polars_time::chunkedarray"],[11701,"polars_io::cloud"],[11702,"polars_ops::chunked_array::mode"],[11703,"polars_ops::chunked_array::nan_propagating_aggregate"],[11704,"polars_arrow::legacy::array::utf8"]],"if":"``````{{}b}`````````{{}d}````````{{{f{c}}h}b{}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}}d}{{{f{{l{c}}}}{f{{l{c}}}}}{}Aj}{{{f{{l{Al}}}}{f{{l{Al}}}}}}{{{f{{l{An}}}}{f{{Bb{B`}}}}}}{{{l{c}}{l{c}}}{}Aj}{{{f{{l{c}}}}e}{}Aj{BdBf}}{{{l{Al}}{l{Al}}}}{{{l{An}}{l{An}}}}{{{l{c}}e}{}Aj{BdBf}}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}}{{{l{Bh}}{l{Bh}}}}{{{f{{l{Bh}}}}{f{Bj}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{{l{j}}}}{f{Bn}}}Ab}{{{f{{l{Ah}}}}{f{Bn}}}Ab}{{{f{{l{Bh}}}}{f{Bn}}}Ab}{{{f{{l{C`}}}}{f{Bn}}}Ab}{{{f{{l{{Cb{c}}}}}}{f{Bn}}}AbCd}{{{f{{l{Al}}}}{f{Bn}}}Ab}{{{f{{l{c}}}}{f{Bn}}}AbAj}{{{f{{l{An}}}}{f{Bn}}}Ab}{{{f{{l{Al}}}}}d}{{{f{{l{Al}}}}}{{Cf{d}}}}{{{f{{l{C`}}}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}{{{f{{l{Ah}}}}{f{Bj}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}{{{f{{l{C`}}}}{f{Bj}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}54{{{f{Db{l{c}}}}{f{{l{c}}}}}b{{Dh{}{{Dd{Df}}}}}}{{{f{{l{{Cb{c}}}}}}e}{{l{{Cb{c}}}}}Cd{{Dj{{Cf{{f{c}}}}}{{Ad{{Cf{c}}}}}}Dl}}{{{f{{l{Al}}}}c}{{l{Al}}}{{Dj{{Cf{d}}}{{Ad{{Cf{d}}}}}}Dl}}{{{f{{l{An}}}}c}{{l{An}}}{{Dj{{Cf{{f{{Bb{B`}}}}}}}{{Ad{{Cf{{Dn{{Bb{B`}}}}}}}}}}Dl}}{{{f{{l{c}}}}e}{{l{c}}}Aj{{Dj{Cf}{{Ad{Cf}}}}Dl}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dj{{Cf{Ab}}}{{Ad{{Cf{Ab}}}}}}Dl}}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{Dj{{Cf{{f{Bj}}}}}{{Ad{{Cf{{Dn{Bj}}}}}}}}Dl}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Af{E`}{{Ad{Ab}}}}}}{{{f{{l{C`}}}}e}{{l{g}}}{}{{Af{{Cf{E`}}}{{Ad{{Cf{c}}}}}}Dl}Dh}{{{f{{l{Ah}}}}e}{{l{g}}}{}{{Af{{Cf{E`}}}{{Ad{{Cf{c}}}}}}Dl}Dh}{{{f{{l{C`}}}}c}{{l{C`}}}{{Af{E`}{{Ad{Ab}}}}}}{{{f{{l{Eb}}}}c}Ab{{Dj{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ed}}}}c}Ab{{Dj{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dh{}{{Af{Cf}{{Ad{{Cf{e}}}}}}}Dh}{{{l{c}}e}{{l{c}}}Aj{{Dj{}{{Ad{}}}}Dl}}{{{f{{l{Bh}}}}{f{Dj}}}{{l{Bh}}}}{{{f{{l{Al}}}}{f{Dj}}}{{l{Al}}}}{{{f{{l{An}}}}{f{Dj}}}{{l{An}}}}{{{f{{l{c}}}}{f{Dj}}}{{l{c}}}Aj}{{{f{{l{Bh}}}}{f{Dj}}}{{l{c}}}Dh}{{{f{{l{Al}}}}{f{Dj}}}{{l{c}}}Dh}{{{f{{l{An}}}}{f{Dj}}}{{l{c}}}Dh}{{{f{{l{c}}}}{f{Dj}}}{{l{e}}}AjDh}{{{f{Db{l{c}}}}e}bAj{{Dj{}{{Ad{}}}}Dl}}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{Af{{f{Bj}}}{{Ad{{f{Bj}}}}}}}}{{{f{{l{An}}}}c}{{l{An}}}{{Af{{f{{Bb{B`}}}}}{{Ad{{f{{Bb{B`}}}}}}}}}}{{{f{{l{c}}}}Efg}{{l{i}}}Dh{}{{Af{}{{Ad{e}}}}}Dh}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{Af{{f{Bj}}{f{DbEh}}}}}}{{{f{{l{Ah}}}}{f{Dj}}}{{A`{{l{Ah}}n}}}}{{{f{{l{C`}}}}{f{Dj}}}{{A`{{l{C`}}n}}}}{{{f{{l{c}}}}g{f{Db{Bb{e}}}}}bAj{}{{Dj{Cf{f{e}}}{{Ad{e}}}}}}{{{f{{l{Al}}}}e{f{Db{Bb{c}}}}}b{}{{Dj{{Cf{d}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{{Cb{c}}}}}}g{f{Db{Bb{e}}}}}bCd{}{{Dj{{Cf{{f{c}}}}{f{e}}}{{Ad{e}}}}}}{{{f{{l{An}}}}e{f{Db{Bb{c}}}}}b{}{{Dj{{Cf{{f{{Bb{B`}}}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bh}}}}e{f{Db{Bb{c}}}}}b{}{{Dj{{Cf{{f{Bj}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Ah}}}}e{f{Db{Bb{c}}}}}b{}{{Dj{{Cf{Ab}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dj{Ab}{{Ad{Ab}}}}Dl}}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{Dj{{f{Bj}}}{{Ad{{Dn{Bj}}}}}}Dl}}{{{f{{l{Al}}}}c}{{l{Al}}}{{Dj{d}{{Ad{d}}}}Dl}}{{{f{{l{c}}}}e}{{l{c}}}Aj{{Dj{}{{Ad{}}}}Dl}}{{{f{{l{An}}}}c}{{l{An}}}{{Dj{{f{{Bb{B`}}}}}{{Ad{{Dn{{Bb{B`}}}}}}}}Dl}}{{{f{{l{{Cb{c}}}}}}e}{{l{{Cb{c}}}}}Cd{{Dj{{f{c}}}{{Ad{c}}}}Dl}}{{{f{{l{c}}}}g}{{l{i}}}Dh{}{{Af{}{{Ad{e}}}}}Dh}{{{f{{l{j}}}}Ej}{{l{El}}}}{{{f{{l{An}}}}Ej}{{l{El}}}}{{{f{{l{En}}}}Ej}{{l{El}}}}{{{f{{l{Al}}}}Ej}{{l{El}}}}{{{f{{l{Bh}}}}Ej}{{l{El}}}}{{{f{{l{c}}}}Ej}{{l{El}}}Aj}{{{f{{l{Al}}}}{f{{Bb{Ab}}}}{f{F`}}}{{A`{{l{El}}n}}}}{{{f{{l{En}}}}{f{{Bb{Ab}}}}{f{F`}}}{{A`{{l{El}}n}}}}{{{f{{l{An}}}}{f{{Bb{Ab}}}}{f{F`}}}{{A`{{l{El}}n}}}}{{{f{{l{c}}}}{f{{Bb{Ab}}}}{f{F`}}}{{A`{{l{El}}n}}}Aj}{{{f{{l{Bh}}}}{f{{Bb{Ab}}}}{f{F`}}}{{A`{{l{El}}n}}}}{{{f{{l{An}}}}}{{A`{{l{El}}n}}}}{{{f{{l{{Cb{c}}}}}}}{{A`{{l{El}}n}}}Cd}{{{f{{l{c}}}}}{{A`{{l{El}}n}}}Aj}{{{f{{l{Bh}}}}}{{A`{{l{El}}n}}}}{{{f{{l{Al}}}}}{{A`{{l{El}}n}}}}`{{{f{{l{C`}}}}}{{f{{l{C`}}}}}}{{{f{{l{Bh}}}}}{{l{An}}}}{{{f{{l{An}}}}}{{f{{l{An}}}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dh}{{{f{{l{c}}}}}{{f{Ef}}}Dh}{{{f{{l{Bh}}}}}{{f{{l{Bh}}}}}}0{{{f{{l{Ah}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{Ah}}}DhDh{{Af{{Cf{E`}}CfCf}{{Ad{{Cf{Ab}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fb}{{{f{{l{Al}}}}{f{{l{Al}}}}}}{{{l{Al}}{l{Al}}}}021021{{{f{c}}}{{f{e}}}{}{}}0{{{f{Dbc}}}{{f{Dbe}}}{}{}}0``{{{f{{l{j}}}}{f{Ef}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}{{l{g}}}Aj{{Dj{}{{Ad{}}}}Dl}Aj}{{{f{{l{En}}}}{f{Ef}}}{{A`{Abn}}}}{{{f{{l{An}}}}{f{Ef}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ef}}}{{A`{Abn}}}Aj}{{{f{{l{Ah}}}}{f{Ef}}}{{A`{Abn}}}}{{{f{{l{C`}}}}{f{Ef}}}{{A`{Abn}}}}{{{f{{l{Al}}}}{f{Ef}}}{{A`{Abn}}}}{{{f{{l{Bh}}}}{f{Ef}}}{{A`{Abn}}}}{{{f{{l{C`}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{l{Bh}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{l{An}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ef}}Fd}{{A`{Abn}}}Aj}{{{f{{l{Al}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{l{En}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{l{j}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Ff}{{{f{{l{c}}}}e}{{A`{Abn}}}FfBf}{{{f{{l{c}}}}}{{Fn{{Fh{{Cl{Cj}}}}{Fl{{f{{Cl{Cj}}}}}{{Ad{Fj}}}}}}}Dh}{{{f{{l{c}}}}}{{`{{Cn{}{{Ch{Fj}}}}}}}Dh}{{{f{{l{c}}}}}{{f{{G`{{Cl{Cj}}}}}}}Dh}{{{f{Db{l{c}}}}}{{f{Db{G`{{Cl{Cj}}}}}}}Dh}{{{f{{l{c}}}}}{{l{c}}}Dh}0{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}`{{{f{Db{l{c}}}}}b{DhAj}}`{{{f{{l{c}}}}}{{A`{{f{Bb}}n}}}Aj}{{{f{Db{l{c}}}}{f{{l{c}}}}Gb}bDh}{{{f{Db{l{c}}}}{f{{l{e}}}}Gb}bDhDh}{{{f{{l{c}}}}}{{`{Gd}}}Aj}{{}{{l{c}}}Dh}{Fj{{f{c}}}{}}0{Fj{{f{Dbc}}}{}}0{{{f{{l{c}}}}e}{}Aj{BdBf}}{{{l{c}}{l{c}}}{}Aj}{{{l{c}}e}{}Aj{BdBf}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Aj}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{Db{l{c}}}}}bDh}{Fjb}0{{{f{{l{c}}}}}{{l{c}}}Dh}{{{f{{l{c}}}}}{{f{Ef}}}Dh}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Al}}}}{{{f{{l{Bh}}}}{f{Bj}}}{{l{Al}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Al}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Al}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Al}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}}{{l{Al}}}}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{Al}}}}{{{f{{l{An}}}}{f{{Bb{B`}}}}}{{l{Al}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Al}}}Aj}{{{f{{l{c}}}}e}{{l{Al}}}AjBf}9750148263{{{f{{l{Ah}}}}}{{A`{{Gj{Ab{Gh{Gf}}}}n}}}}{{{f{{l{C`}}}}}{{A`{{Gj{Ab{Gh{Gf}}}}n}}}}{{{f{Db{l{c}}}}{f{{l{c}}}}}bAj}{{{f{{l{j}}}}{f{Bj}}}{{A`{Abn}}}}{{{f{{l{j}}}}}{{G`{Ab}}}}{{{f{{l{Al}}}}d}{{A`{{l{Al}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Aj}{{{f{{l{An}}}}{f{{Bb{B`}}}}}{{A`{{l{An}}n}}}}{{{f{{l{An}}}}{f{{l{Al}}}}}{{A`{{l{An}}n}}}}{{{f{{l{c}}}}{f{{l{Al}}}}}{{A`{{l{c}}n}}}{{Dh{}{{Gl{Df}}{Gn{Df}}}}}}{{{f{{l{Bh}}}}{f{{l{Al}}}}}{{A`{{l{Bh}}n}}}}{{{f{{l{{Cb{c}}}}}}{f{{l{Al}}}}}{{A`{{l{{Cb{c}}}}n}}}Cd}{{{f{{l{c}}}}}{{Cf{Fj}}}Dh}`{{{f{{l{c}}}}{f{DbH`}}}{{A`{bHb}}}Aj}{{{f{{l{C`}}}}{f{DbH`}}}{{A`{bHb}}}}{{{f{{l{An}}}}{f{DbH`}}}{{A`{bHb}}}}{{{f{{l{Ah}}}}{f{DbH`}}}{{A`{bHb}}}}{{{f{{l{{Cb{c}}}}}}{f{DbH`}}}{{A`{bHb}}}Cd}{{{f{{l{Al}}}}{f{DbH`}}}{{A`{bHb}}}}{{{f{{l{Bh}}}}{f{DbH`}}}{{A`{bHb}}}}{{{f{{l{c}}}}e}bDh{{Af{Cf}}}}{{{f{{l{Ah}}}}c}b{{Af{{Cf{E`}}}}}}{{{f{{l{C`}}}}c}b{{Af{{Cf{E`}}}}}}{c{{l{e}}}Cj{{Dh{}{{Hd{c}}}}}}{cc{}}0{{{f{Bj}}c}{{l{e}}}Hf{{Dh{}{{Hd{}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}{{Dh{}{{Hd{}}}}Dh}Hf}{{{f{Bj}}{G`{{Cl{Cj}}}}}{{l{c}}}Dh}{{{f{Bj}}{G`{{Cl{Cj}}}}Ef}{{l{c}}}Dh}{g{{A`{ic}}}{}{}{{Hh{c}{{Ch{e}}}}}{}}{c{{l{Al}}}{{Hf{}{{Ch{{Cf{d}}}}}}}}{e{{l{Bh}}}{{Hj{Bj}}}{{Hf{}{{Ch{c}}}}}}{c{{l{e}}}{{Hf{}{{Ch{Cf}}}}}Aj}{c{{l{e}}}{{Hf{}{{Ch{{Gj{G`{Cf{Hl}}}}}}}}}Aj}{e{{l{An}}}{{Hj{{Bb{B`}}}}}{{Hf{}{{Ch{c}}}}}}{e{{l{Ah}}}{{Hn{Ab}}}{{Hf{}{{Ch{c}}}}}}{e{{l{An}}}{{I`{{Bb{B`}}}}}{{Hf{}{{Ch{{Cf{c}}}}}}}}{c{{l{Ah}}}{{Hf{}{{Ch{{Cf{Ab}}}}}}}}{c{{l{Ah}}}{{Hf{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}{e{{l{Bh}}}{{I`{Bj}}}{{Hf{}{{Ch{{Cf{c}}}}}}}}{e{{l{{Cb{c}}}}}Cd{{Hf{}{{Ch{{Cf{c}}}}}}}}{c{{l{Al}}}{{Hf{}{{Ch{d}}}}}}{{{f{Bj}}e}{{l{Bh}}}{{I`{Bj}}}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{{f{Bj}}e}{{l{An}}}{{I`{{Bb{B`}}}}}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{{f{Bj}}c}{{l{e}}}{{Cn{}{{Ch{Cf}}}}}Aj}{{{f{Bj}}c}{{l{Al}}}{{Cn{}{{Ch{{Cf{d}}}}}}}}{{{f{Bj}}e}{{l{{Cb{c}}}}}Cd{{Cn{}{{Ch{{Cf{c}}}}}}}}?56{e{{l{En}}}{{Hj{{Bb{B`}}}}}{{Hf{}{{Ch{c}}}}}}?;=<8{e{{l{En}}}{{I`{{Bb{B`}}}}}{{Hf{}{{Ch{{Cf{c}}}}}}}};{c{{l{Al}}}{{Hf{}{{Ch{{Cf{d}}}}}}}}{{{f{Bj}}e}{{l{Bh}}}{{I`{Bj}}}{{Cn{}{{Ch{c}}}}}}{{{f{Bj}}c}{{l{Al}}}{{Cn{}{{Ch{d}}}}}}{{{f{Bj}}e}{{l{{Cb{c}}}}}Cd{{Cn{}{{Ch{c}}}}}}{{{f{Bj}}c}{{l{e}}}{{Cn{}{{Ch{}}}}}Aj}{{{f{Bj}}e}{{l{An}}}{{I`{{Bb{B`}}}}}{{Cn{}{{Ch{c}}}}}}`{c{{l{Al}}}{{Ib{}{{Ch{d}}}}}}{c{{l{Al}}}{{Ib{}{{Ch{{Cf{d}}}}}}}}{e{{l{An}}}{{Hj{{Bb{B`}}}}IdIfIh}{{Ib{}{{Ch{c}}}}}}{e{{l{Bh}}}{{I`{Bj}}IdIf}{{Ib{}{{Ch{{Cf{c}}}}}}}}{c{{l{e}}}{{Ib{}{{Ch{Cf}}}}}Aj}{c{{l{Ah}}}{{Ib{}{{Ch{{Cf{Ab}}}}}}}}{e{{l{Bh}}}{{Hj{Bj}}IdIfIh}{{Ib{}{{Ch{c}}}}}}{e{{l{An}}}{{I`{{Bb{B`}}}}IdIf}{{Ib{}{{Ch{{Cf{c}}}}}}}}{{c{f{Bj}}Ef}{{l{Ah}}}{{Ib{}{{Ch{{Cf{Ab}}}}}}}}{{{f{Bj}}{f{{Bb{Ab}}}}}{{A`{{l{j}}n}}}}{{{f{Bj}}{f{Bb}}}{{l{c}}}Aj}{{{f{Bj}}{f{{Bb{c}}}}}{{l{Bh}}}{{I`{Bj}}}}{{{f{Bj}}{f{{Bb{c}}}}}{{l{An}}}{{I`{{Bb{B`}}}}}}{{{f{Bj}}{f{{Bb{c}}}}}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}{f{{Bb{d}}}}}{{l{Al}}}}{{{f{Bj}}{f{{Bb{{Cf{d}}}}}}}{{l{Al}}}}{{{f{Bj}}{f{{Bb{Cf}}}}}{{l{c}}}Aj}{{{f{Bj}}{f{{Bb{{Cf{c}}}}}}}{{l{An}}}{{I`{{Bb{B`}}}}}}{{{f{Bj}}{f{{Bb{{Cf{c}}}}}}}{{l{Bh}}}{{I`{Bj}}}}{{{f{Bj}}{f{{Bb{{Cf{c}}}}}}}{{l{{Cb{c}}}}}Cd}{c{{l{Al}}}{{Ij{}{{Ch{{Cf{d}}}}}}}}{c{{l{e}}}{{Ij{}{{Ch{Cf}}}}}Aj}{{{f{Bj}}G`}{{l{c}}}Aj}{{{f{Bj}}G`{Cf{Hl}}}{{l{c}}}Aj}{{{f{Bj}}dFj}{{l{Al}}}}{{{f{Bj}}{f{Ab}}Fj}{{l{Ah}}}}{{{f{Bj}}{f{Bj}}Fj}{{l{Bh}}}}{{{f{Bj}}{f{{Bb{B`}}}}Fj}{{l{En}}}}{{{f{Bj}}cFj}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}Fj}{{l{c}}}Aj}{{{f{Bj}}{f{{Bb{B`}}}}Fj}{{l{An}}}}{{{f{Bj}}{f{Ab}}Fj}{{l{C`}}}}{{{f{Bj}}Fj}{{l{En}}}}{{{f{Bj}}Fj}{{l{Bh}}}}{{{f{Bj}}Fj}{{l{C`}}}}{{{f{Bj}}Fj}{{l{Ah}}}}{{{f{Bj}}Fj}{{l{An}}}}{{{f{Bj}}Fj}{{l{j}}}}{{{f{Bj}}Fj}{{l{{Cb{c}}}}}Cd}9{{{f{Bj}}Fj}{{l{Al}}}}{{{f{{l{c}}}}Fj}{{l{c}}}Dh}{{{f{Bj}}Fj{f{Ef}}}{{l{Ah}}}}{{{f{Bj}}Fj{f{Ef}}Fj}{{l{C`}}}}{{{f{{l{c}}}}Fj}CfDh}{{{f{{l{{Cb{c}}}}}}Fj}{{A`{Iln}}}Cd}{{{f{{l{Bh}}}}Fj}{{A`{Iln}}}}{{{f{{l{Ah}}}}Fj}{{A`{Iln}}}}{{{f{{l{En}}}}Fj}{{A`{Iln}}}}{{{f{{l{C`}}}}Fj}{{A`{Iln}}}}{{{f{{l{Al}}}}Fj}{{A`{Iln}}}}{{{f{{l{c}}}}Fj}{{A`{Iln}}}Aj}{{{f{{l{j}}}}Fj}{{A`{Iln}}}}{{{f{{l{An}}}}Fj}{{A`{Iln}}}}{{{f{{l{{Cb{c}}}}}}Fj}IlCd}{{{f{{l{An}}}}Fj}Il}{{{f{{l{c}}}}Fj}IlAj}{{{f{{l{j}}}}Fj}Il}{{{f{{l{C`}}}}Fj}Il}{{{f{{l{En}}}}Fj}Il}{{{f{{l{Ah}}}}Fj}Il}{{{f{{l{Bh}}}}Fj}Il}{{{f{{l{Al}}}}Fj}Il}{{{f{{l{C`}}}}Fj}{{Cf{Ab}}}}{{{f{{l{Ah}}}}Fj}{{Cf{Ab}}}}{{{f{{l{c}}}}}{{Cf{In}}}Dh}{{{f{{l{c}}}}}dDh}{{{f{{l{c}}}}}J`Dh}{{{f{{l{C`}}}}}Ab}{{{f{{l{Ah}}}}}Ab}{{{f{{l{c}}}}}CfDh}0{{{f{{l{{Cb{c}}}}}}Fj}{{Cf{{f{Jb}}}}}Cd}0{{{f{{l{j}}}}Ej}{{A`{{l{En}}n}}}}{{{f{{l{j}}}}Ej}{{A`{{Jd{Gf}}n}}}}{{{f{{l{c}}}}Fj}CfDh}{{{f{{l{C`}}}}}Fj}{{{f{{l{Bh}}}}}Fj}{{{f{{l{En}}}}}Fj}{{{f{{l{Ah}}}}}Fj}{{{f{{l{En}}}}dd}{{A`{Bnn}}}}{{{f{{l{C`}}}}dd}{{A`{Bnn}}}}{{{f{{l{An}}}}dd}{{A`{Bnn}}}}{{{f{{l{c}}}}dd}{{A`{Bnn}}}Aj}{{{f{{l{Ah}}}}dd}{{A`{Bnn}}}}{{{f{{l{Bh}}}}dd}{{A`{Bnn}}}}{{{f{{l{Al}}}}dd}{{A`{Bnn}}}}{{{f{{l{{Cb{c}}}}}}dd}{{A`{Bnn}}}Cd}{{{f{{l{c}}}}FjdFj}BnFb}{{{f{{l{c}}}}e}{{l{Al}}}AjBf}{{{f{{l{An}}}}{f{{Bb{B`}}}}}{{l{Al}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Al}}}Aj}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Al}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Al}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Al}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}}{{l{Al}}}}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{Al}}}}{{{f{{l{Bh}}}}{f{Bj}}}{{l{Al}}}}628731054{{{f{{l{c}}}}}dDh}{{{f{{l{c}}}}{Cf{Fj}}}{{l{c}}}Dh}{{}Fj}0{{FjJf{Cf{Jh}}}{{l{c}}}Aj}{{{f{{l{C`}}}}}{{f{Ef}}}}{{{f{{l{Ah}}}}}{{f{Ef}}}}{{{f{{l{c}}}}}{{Jl{{Jj{c}}}}}Dh}{ce{}{}}0{{{l{Jn}}}{{Kb{K`Jn}}}}{{{l{Kd}}Kf{Cf{Eh}}}{{Kb{KhKd}}}}{{{l{Kj}}{Cf{Fj}}Fj}{{A`{{Kb{KlKj}}n}}}}{{{l{Kj}}{Cf{Fj}}Fj}{{Kb{KlKj}}}}{{{l{Kd}}Kf}{{Kb{KnKd}}}}{{{f{{l{An}}}}}}{{{f{{l{C`}}}}}}{{{f{{l{Bh}}}}}}{{{f{{l{c}}}}}{}Aj}{{{f{{l{Ah}}}}}}{{{f{{l{En}}}}}}{{{f{{l{Al}}}}}}{{{f{{l{{Cb{c}}}}}}}{}Cd}{{{f{{l{c}}}}}{{`{IdIfL`GdIj}}}Aj}{{{l{Kj}}}Ab}{{{l{c}}}AbDh}{{{l{Kd}}}{{Kb{LbKd}}}}{{{f{{l{c}}}}}dDh}{{{f{{l{c}}}}}{{l{Al}}}Ld}000{{{f{{l{c}}}}}{{l{Al}}}Dh}02{{{f{{l{c}}}}}LfDh}{{{f{{l{c}}}}}{{`{Lh}}}Dh}{{{f{{l{c}}}}}{{`{{Cn{}{{Ch{{l{c}}}}}}}}}Dh}{{{f{{l{Ah}}}}}{{`{{Cn{}{{Ch{Gf}}}}}}}}{{{f{{l{c}}}}}{{Fn{{Fh{{Cl{Cj}}}}{Fl{{f{{Cl{Cj}}}}}{{Ad{{Cf{{f{Hl}}}}}}}}}}}Dh}`{{{f{{l{c}}}}}CfDh}{{{f{{l{c}}}}}{{Cf{Fj}}}Dh}{{{f{{l{c}}}}}{{Lj{c}}}Dh}{{{f{{l{c}}}}{f{{l{c}}}}}{}Aj}{{{l{c}}{l{c}}}{}Aj}{{{f{{l{c}}}}}{}Aj}{{{l{c}}}{}Aj}01{{{f{{l{c}}}}}FjDh}0{{{f{{l{c}}}}e}{{l{c}}}Aj{BdLl}}00{{{f{{l{c}}}}Fj}{{l{c}}}Dh}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Al}}}Aj}{{{f{{l{Bh}}}}{f{Bj}}}{{l{Al}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Al}}}}{{{f{{l{An}}}}{f{{Bb{B`}}}}}{{l{Al}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}}{{l{Al}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Al}}}}{{{f{{l{c}}}}e}{{l{Al}}}AjBf}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Al}}}}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{Al}}}}243865071{{{f{{l{c}}}}}CfAj}{{{f{{l{Al}}}}}{{Cf{d}}}}{{{f{{l{Al}}}}}Ln}{{{f{{l{Bh}}}}}Ln}{{{f{{l{c}}}}}LnAj}{{{f{{l{An}}}}}Ln}{{{f{{l{c}}}}}{{Cf{M`}}}Aj}{{{f{{l{Al}}}}}{{Cf{M`}}}}{{{f{{l{Eb}}}}}{{Cf{M`}}}}{{{f{{l{c}}}}}{{Cf{M`}}}Fb}{{{f{{l{Ed}}}}}{{Cf{Jf}}}}{{{f{{l{Ed}}}}}Ln}{{{f{{l{c}}}}}LnFb}{{{f{{l{Eb}}}}}Ln}{{{f{Db{l{c}}}}{Jj{c}}}bDh}`{{{f{{l{c}}}}}{{Mb{c}}}Dh}{{{f{{l{c}}}}}{{f{{Mf{{Md{c}}}}}}}Dh}{{{f{{l{c}}}}}{{Cf{{Mj{Mh}}}}}Dh}{{{f{Db{l{c}}}}}{{f{Db{Mf{{Md{c}}}}}}}Dh}{{{f{{l{c}}}}}{{Mf{{Md{c}}}}}Dh}{{{f{{l{Al}}}}}{{Cf{d}}}}{{{f{{l{c}}}}}CfAj}{{{f{{l{c}}}}}{{Cf{Gj}}}Aj}{{{f{{l{Al}}}}}Ln}{{{f{{l{Bh}}}}}Ln}{{{f{{l{An}}}}}Ln}{{{f{{l{c}}}}}LnAj}{{{f{Bj}}{f{{Bb{B`}}}}FjFj}{{l{Al}}}}{{{f{Bj}}{f{Bb}}}{{l{c}}}Aj}{{{f{{l{c}}}}e}{}Aj{BdBf}}{{{l{c}}e}{}Aj{BdBf}}{{{l{c}}{l{c}}}{}Aj}{{{f{{l{c}}}}{f{{l{c}}}}}{}Aj}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{{l{c}}}}}FjDh}{{{f{{l{c}}}}}{{A`{Fjn}}}Aj}{{{f{{l{Bh}}}}}{{A`{Fjn}}}}{{{f{{l{An}}}}}{{A`{Fjn}}}}{{{f{{l{c}}}}}{{f{Bj}}}Dh}{{{f{Bj}}c}{{l{Ml}}}{{I`{{Bb{{Cf{Mn}}}}}}}}{{{f{Bj}}c}{{l{Kj}}}{{I`{{Bb{{Cf{N`}}}}}}}}{{{f{Bj}}{Nb{Gf}}}{{l{Kd}}}}{{{f{Bj}}{f{{Bb{c}}}}}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}c}{{l{Ml}}}{{I`{{Bb{Mn}}}}}}{{{f{Bj}}c}{{l{Al}}}{{I`{{Bb{d}}}}}}{{{f{Bj}}c}{{l{Bh}}}{{I`{{Bb{{Cf{{f{Bj}}}}}}}}}}{{{f{Bj}}c}{{l{Nd}}}{{I`{{Bb{Nf}}}}}}{{{f{Bj}}{Nb{In}}}{{l{El}}}}{{{f{Bj}}c}{{l{Eb}}}{{I`{{Bb{{Cf{M`}}}}}}}}{{{f{Bj}}c}{{l{An}}}{{I`{{Bb{{Cf{{f{{Bb{B`}}}}}}}}}}}}{{{f{Bj}}c}{{l{El}}}{{I`{{Bb{{Cf{In}}}}}}}}{{{f{Bj}}c}{{l{El}}}{{I`{{Bb{In}}}}}}{{{f{Bj}}c}{{l{An}}}{{I`{{Bb{{G`{B`}}}}}}}}{{{f{Bj}}c}{{l{Nh}}}{{I`{{Bb{Nj}}}}}}{{{f{Bj}}c}{{l{Al}}}{{I`{{Bb{{Cf{d}}}}}}}}{{{f{Bj}}c}{{l{Nh}}}{{I`{{Bb{{Cf{Nj}}}}}}}}{{{f{Bj}}c}{{l{Kd}}}{{I`{{Bb{{Cf{Gf}}}}}}}}{{{f{Bj}}c}{{l{Kd}}}{{I`{{Bb{Gf}}}}}}{{{f{Bj}}c}{{l{Nl}}}{{I`{{Bb{{Cf{Jh}}}}}}}}{{{f{Bj}}c}{{l{An}}}{{I`{{Bb{{Cf{{G`{B`}}}}}}}}}}{{{f{Bj}}c}{{l{An}}}{{I`{{Bb{{Dn{{Bb{B`}}}}}}}}}}{{{f{Bj}}c}{{l{Eb}}}{{I`{{Bb{M`}}}}}}{{{f{Bj}}c}{{l{Bh}}}{{I`{{Bb{{Dn{Bj}}}}}}}}{{{f{Bj}}{Nb{Jh}}}{{l{Nl}}}}{{{f{Bj}}c}{{l{Bh}}}{{I`{{Bb{{Cf{{Dn{Bj}}}}}}}}}}{{{f{Bj}}c}{{l{Ed}}}{{I`{{Bb{{Cf{Jf}}}}}}}}{{{f{Bj}}c}{{l{Bh}}}{{I`{{Bb{{f{Bj}}}}}}}}{{{f{Bj}}c}{{l{An}}}{{I`{{Bb{{f{{Bb{B`}}}}}}}}}}{{{f{Bj}}c}{{l{Nd}}}{{I`{{Bb{{Cf{Nf}}}}}}}}{{{f{Bj}}c}{{l{Jn}}}{{I`{{Bb{{Cf{Nn}}}}}}}}{{{f{Bj}}c}{{l{Nl}}}{{I`{{Bb{Jh}}}}}}{{{f{Bj}}c}{{l{An}}}{{I`{{Bb{{Cf{{Dn{{Bb{B`}}}}}}}}}}}}{{{f{Bj}}c}{{l{O`}}}{{I`{{Bb{B`}}}}}}{{{f{Bj}}c}{{l{Kj}}}{{I`{{Bb{N`}}}}}}{{{f{Bj}}c}{{l{Ed}}}{{I`{{Bb{Jf}}}}}}{{{f{Bj}}c}{{l{Bh}}}{{I`{{Bb{{Cf{Eh}}}}}}}}{{{f{Bj}}c}{{l{Jn}}}{{I`{{Bb{Nn}}}}}}{{{f{Bj}}c}{{l{Bh}}}{{I`{{Bb{Eh}}}}}}{{{f{Bj}}{Nb{Nn}}}{{l{Jn}}}}{{{f{Bj}}c}{{l{O`}}}{{I`{{Bb{{Cf{B`}}}}}}}}{{{f{Bj}}e}{{l{{Cb{c}}}}}Cd{{I`{{Bb{{Cf{c}}}}}}}}{{{f{Bj}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{c}}}}FjFj}{{l{c}}}Aj}{{{f{{l{C`}}}}FjFj}{{l{C`}}}}{{{f{{l{Bh}}}}FjFj}{{l{Bh}}}}{{{f{{l{An}}}}FjFj}{{l{An}}}}{{{f{{l{Ah}}}}FjFj}{{l{Ah}}}}{{{f{{l{Al}}}}FjFj}{{l{Al}}}}{{{f{{l{j}}}}FjFj}{{l{j}}}}{{{f{{l{En}}}}FjFj}{{l{En}}}}{{{f{{l{{Cb{c}}}}}}FjFj}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}{G`{c}}}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}{G`{c}}Hl}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}G`}{{l{c}}}Aj}{{{Mf{Ob}}{G`{{Cl{Cj}}}}InIn}{{l{c}}}Dh}{{{f{{l{c}}}}}{{l{c}}}Ld}{{{f{{l{Al}}}}}}{{{l{Al}}}}{{{f{{l{c}}}}e}{{l{Al}}}AjBf}{{{f{{l{An}}}}{f{{Bb{B`}}}}}{{l{Al}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Al}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Al}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Al}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}}{{l{Al}}}}{{{f{{l{Bh}}}}{f{Bj}}}{{l{Al}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Al}}}Aj}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Al}}}}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{Al}}}}96{{{f{{l{C`}}}}{f{{l{C`}}}}}}6583924{{{f{{l{c}}}}}FjDh}`{{{f{{l{Ah}}}}}{{A`{{Gh{Gf}}n}}}}{{{f{{l{C`}}}}}{{A`{{Gh{Gf}}n}}}}`{{{f{{l{Bh}}}}}{{`{{Od{}{{Ch{{Cf{{f{Bj}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{`{{Od{}{{Ch{{Cf{Ab}}}}}}}}}}{{{f{{l{Bh}}}}}{{`{Of}}}}{{{f{Db{l{Ah}}}}}{{`{Of}}}}{{{f{{l{c}}}}}LnAj}{{{f{Db{l{c}}}}}bDh}{{{f{{l{Eb}}}}M`Oh}{{A`{{Cf{M`}}n}}}}{{{f{{l{c}}}}M`Oh}{{A`{{Cf{M`}}n}}}Fb}{{{f{{l{Ed}}}}M`Oh}{{A`{{Cf{Jf}}n}}}}{{{f{{l{Eb}}}}M`Oh}{{A`{Lnn}}}}{{{f{{l{Ed}}}}M`Oh}{{A`{Lnn}}}}{{{f{{l{c}}}}M`Oh}{{A`{Lnn}}}Fb}{{{f{Bj}}FjM`}{{A`{{l{Al}}n}}}}{{{f{Bj}}FjM`M`}{{A`{{l{c}}n}}}Aj}{{{f{Bj}}Fj}{{l{c}}}Aj}{{{f{Bj}}FjM`M`}{{l{c}}}Aj}{{{f{{l{c}}}}}{{l{c}}}Dh}{{{f{{l{c}}}}}{{f{Ob}}}Dh}{{{f{{l{Nl}}}}}Ab}{{{f{{l{Jn}}}}}Ab}{{{f{{l{Ml}}}}}Ab}{{{f{{l{Ed}}}}}Ab}{{{f{{l{Kd}}}}}Ab}{{{f{{l{El}}}}}Ab}{{{f{{l{Nd}}}}}Ab}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Nh}}}}}Ab}{{{f{{l{O`}}}}}Ab}{{{f{{l{Eb}}}}}Ab}9:742065138{{{f{{l{c}}}}e}{}Aj{BdBf}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Aj}{{{l{c}}{l{c}}}{}Aj}{{{l{c}}e}{}Aj{BdBf}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{Db{l{c}}}}{f{Bj}}}bDh}{{{f{{l{Al}}}}}{{l{Al}}}}{{{f{{l{An}}}}}{{l{An}}}}{{{f{{l{C`}}}}}{{l{C`}}}}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{En}}}}}{{l{En}}}}{{{f{{l{Bh}}}}}{{l{Bh}}}}{{{f{{l{c}}}}}{{l{c}}}Aj}{{{f{{l{{Cb{c}}}}}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{c}}}}{f{Dj}}Oj}{{A`{Abn}}}Aj}{{{f{{l{c}}}}Fje}{{A`{{l{c}}n}}}Ld{{Af{{f{Db{l{c}}}}}{{Ad{Cf}}}}}}{{{f{{l{c}}}}M`dd{Cf{Jh}}}{{A`{{l{c}}n}}}Dh}{{{f{{l{c}}}}Fjdd{Cf{Jh}}}{{A`{{l{c}}n}}}Dh}{{{f{Db{l{c}}}}{f{{Bb{In}}}}e}{{A`{Abn}}}Ol{{Hf{}{{Ch{Cf}}}}}}{{{f{{l{Al}}}}{f{{Bb{In}}}}c}{{A`{Abn}}}{{Hf{}{{Ch{{Cf{d}}}}}}}}{{{f{{l{Bh}}}}{f{{Bb{In}}}}c}{{A`{Abn}}}{{Hf{}{{Ch{{Cf{{f{Bj}}}}}}}}}}{{{f{{l{Al}}}}c{Cf{d}}}{{A`{{l{Al}}n}}}{{Hf{}{{Ch{In}}}}}}{{{f{{l{An}}}}c{Cf{{f{{Bb{B`}}}}}}}{{A`{{l{An}}n}}}{{Hf{}{{Ch{In}}}}}}{{{f{{l{c}}}}eCf}{{A`{{l{c}}n}}}Aj{{Hf{}{{Ch{In}}}}}}{{{f{{l{Bh}}}}c{Cf{{f{Bj}}}}}{{A`{{l{Bh}}n}}}{{Hf{}{{Ch{In}}}}}}{{{f{{l{c}}}}eg}{{A`{{l{c}}n}}}Aj{{Hf{}{{Ch{In}}}}}{{Dj{Cf}{{Ad{Cf}}}}}}{{{f{{l{Bh}}}}ce}{{A`{{l{Bh}}n}}}{{Hf{}{{Ch{In}}}}}{{Dj{{Cf{{f{Bj}}}}}{{Ad{{Cf{Eh}}}}}}}}{{{f{{l{An}}}}ce}{{A`{{l{An}}n}}}{{Hf{}{{Ch{In}}}}}{{Dj{{Cf{{f{{Bb{B`}}}}}}}{{Ad{{Cf{{G`{B`}}}}}}}}}}{{{f{{l{Al}}}}ce}{{A`{{l{Al}}n}}}{{Hf{}{{Ch{In}}}}}{{Dj{{Cf{d}}}{{Ad{{Cf{d}}}}}}}}{{{f{{l{c}}}}{f{{l{Al}}}}Cf}{{A`{{l{c}}n}}}Aj}{{{f{{l{An}}}}{f{{l{Al}}}}{Cf{{f{{Bb{B`}}}}}}}{{A`{{l{An}}n}}}}{{{f{{l{Bh}}}}{f{{l{Al}}}}{Cf{{f{Bj}}}}}{{A`{{l{Bh}}n}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}{Cf{d}}}{{A`{{l{Al}}n}}}}{{{f{Db{l{Ah}}}}}b}{{{f{Db{l{c}}}}d}bDh}{{{f{Db{l{Ah}}}}Ef}b}{{{f{Db{l{c}}}}In}bDh}{{{f{Db{l{c}}}}Lf}bDh}{{{f{{l{Ah}}}}Gf}{{l{Ah}}}}{{{f{{l{Al}}}}Gf}{{l{Al}}}}{{{f{{l{En}}}}Gf}{{l{En}}}}{{{f{{l{{Cb{c}}}}}}Gf}{{l{{Cb{c}}}}}Cd}{{{f{{l{Bh}}}}Gf}{{l{Bh}}}}{{{f{{l{An}}}}Gf}{{l{An}}}}{{{f{{l{c}}}}Gf}{{l{c}}}Aj}{{{f{{l{C`}}}}Gf}{{l{C`}}}}{{{f{{l{{Cb{c}}}}}}Gf{Cf{{Cb{c}}}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{En}}}}Gf{Cf{{f{{Bb{B`}}}}}}}{{l{En}}}}{{{f{{l{An}}}}Gf{Cf{{f{{Bb{B`}}}}}}}{{l{An}}}}{{{f{{l{c}}}}GfCf}{{l{c}}}Aj}{{{f{{l{Ah}}}}Gf{Cf{{f{Ab}}}}}{{l{Ah}}}}{{{f{{l{Al}}}}Gf{Cf{d}}}{{l{Al}}}}{{{f{{l{Bh}}}}Gf{Cf{{f{Bj}}}}}{{l{Bh}}}}{{{f{{l{C`}}}}Gf{Cf{{f{Ab}}}}}{{l{C`}}}}{{{f{Db{l{c}}}}}bDh}{{{f{{l{c}}}}GfFj}{{l{c}}}Dh}0{{{f{{l{Al}}}}d}{{l{Al}}}}{{{f{{l{c}}}}d}{{l{c}}}Aj}{{{f{{l{Bh}}}}d}{{l{Bh}}}}{{{f{{l{En}}}}d}{{l{En}}}}{{{f{{l{An}}}}d}{{l{An}}}}{{{f{{l{j}}}}d}{{l{j}}}}{{{f{{l{Al}}}}Ej}{{l{Al}}}}{{{f{{l{c}}}}Ej}{{l{c}}}Aj}{{{f{{l{Bh}}}}Ej}{{l{Bh}}}}{{{f{{l{En}}}}Ej}{{l{En}}}}{{{f{{l{j}}}}Ej}{{l{j}}}}{{{f{{l{An}}}}Ej}{{l{An}}}}{{{f{{l{c}}}}Gf}{{Gj{{l{c}}{l{c}}}}}Dh}0{{{f{{l{c}}}}B`}{{Cf{M`}}}Aj}{{{f{{l{c}}}}B`}LnFb}{{{f{{l{Eb}}}}B`}Ln}{{{f{{l{Ed}}}}B`}Ln}{{{f{{l{j}}}}}{{f{{Bb{Ob}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Aj}{{{f{{l{c}}}}e}{}Aj{BdBf}}{{{l{c}}e}{}Aj{BdBf}}{{{l{c}}{l{c}}}{}Aj}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{{l{Al}}}}}{{Cf{In}}}}{{{f{{l{c}}}}}CfAj}{{{f{{l{An}}}}}Ln}{{{f{{l{Al}}}}}Ln}{{{f{{l{c}}}}}LnAj}{{{f{{l{c}}}}{Cf{Fj}}}{{l{c}}}Dh}{{{f{{l{c}}}}{f{{l{El}}}}}{{A`{{l{c}}n}}}Dh}{{{f{{l{c}}}}{f{e}}}{{A`{{l{c}}n}}}Dh{{I`{{Bb{In}}}}On}}{{{f{{l{c}}}}{f{{Bb{A@`}}}}Lf}{{l{c}}}Dh}{{{f{{l{c}}}}{f{{Bb{A@`}}}}}{{l{c}}}Dh}{{{f{{l{j}}}}{f{c}}}{{l{j}}}{{I`{{Bb{In}}}}On}}{{{f{{l{c}}}}{f{{l{El}}}}}{{l{c}}}{{Dh{}{{Gl{Df}}{A@b{Df}}}}Dh}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dh{}{{Gl{Df}}{A@b{Df}}}}Dh}{{I`{{Bb{In}}}}On}}{{{f{{l{j}}}}{f{{l{El}}}}}{{l{j}}}}{{{f{{l{An}}}}{f{{l{El}}}}}{{l{An}}}}{{{f{{l{Bh}}}}{f{c}}}{{l{Bh}}}{{I`{{Bb{In}}}}On}}{{{f{{l{Bh}}}}{f{{l{El}}}}}{{l{Bh}}}}{{{f{{l{An}}}}{f{c}}}{{l{An}}}{{I`{{Bb{In}}}}On}}`{{{f{{l{c}}}}dA@d}{{G`{{G`{A@f}}}}}Dh}{{{f{{l{c}}}}}{{l{c}}}Ld}{{{f{{l{Bh}}}}Fj}{{A`{Abn}}}}{{{f{Db{l{C`}}}}Ef}b}{{{f{Db{l{Ah}}}}Ef}b}{{{f{{l{Ah}}}}}{{A`{{A@n{A@h{A@l{{A@j{Fj}}}}}}n}}}}{{{f{{l{c}}}}}{{A`{{A@n{{AA`{f}}{A@l{{A@j{Fj}}}}}}n}}}Aj}{{{f{c}}}e{}{}}{{{f{{l{An}}}}}{{l{Bh}}}}{{{f{{l{c}}}}}{{G`{Cf}}}Aj}{{{f{{l{c}}}}}{{AAb{G`{G`{Cf}}}}}Aj}{{{f{{l{c}}}}{f{{l{c}}}}}{}Aj}{{{l{c}}{l{c}}}{}Aj}{{{f{{l{c}}}}}{}Aj}{{{l{c}}}{}Aj}10{{{f{{l{Ah}}}}c}{{A`{{l{Ah}}n}}}{{Af{E`}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Ah}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Cf{E`}}}{{Ad{{A`{{Cf{c}}n}}}}}}Dl}Dh}{{{f{{l{C`}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Cf{E`}}}{{Ad{{A`{{Cf{c}}n}}}}}}Dl}Dh}{{{f{{l{C`}}}}c}{{A`{{l{C`}}n}}}{{Af{E`}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{C`}}}}c}{{A`{{l{Ah}}n}}}{{Af{E`}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{Cf}{{Ad{{A`{{Cf{e}}g}}}}}}Dl}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dh}{c{{A`{e}}}{}{}}0{{{f{Bj}}g}{{A`{{l{i}}e}}}Cj{}{{Hf{}{{Ch{{A`{ce}}}}}}}{{Dh{}{{Hd{c}}}}Dh}}11{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{A`{{l{Ah}}n}}}Dh{{Af{{Cf{E`}}Cf}{{Ad{{A`{{Cf{Ab}}n}}}}}}}}{{{f{c}}}AAd{}}0{{{f{{l{{Cb{c}}}}}}}{{A`{{l{{Cb{c}}}}n}}}Cd}{{{f{{l{Al}}}}}{{A`{{l{Al}}n}}}}{{{f{{l{Bh}}}}}{{A`{{l{Bh}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Aj}{{{f{{l{An}}}}}{{A`{{l{An}}n}}}}{{{l{j}}}AAf}{{{f{{l{c}}}}{f{Ab}}}{{A`{{f{{l{c}}}}n}}}Dh}{{{f{Db{l{c}}}}}bDh}{{{f{{l{c}}}}Fj}{}Dh}{{{f{{l{c}}}}B`}{{Cf{M`}}}Aj}{{{f{{l{c}}}}B`}LnFb}{{{f{{l{Eb}}}}B`}Ln}{{{f{{l{Ed}}}}B`}Ln}{{{f{{l{Nh}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{{Cb{c}}}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}Cd}{{{f{{l{O`}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nl}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{El}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Kd}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Eb}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Kj}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Al}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Jn}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Ml}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{En}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Ed}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Bh}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Bh}}}}A@d{f{Db{Bb{Jh}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@d{f{Db{Bb{Jh}}}}}{{A`{bn}}}}{{{f{{l{{Cb{c}}}}}}A@d{f{Db{Bb{Jh}}}}}{{A`{bn}}}Cd}{{{f{{l{O`}}}}A@d{f{Db{Bb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@d{f{Db{Bb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Ml}}}}A@d{f{Db{Bb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Ed}}}}A@d{f{Db{Bb{Jh}}}}}{{A`{bn}}}}{{{f{{l{En}}}}A@d{f{Db{Bb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Eb}}}}A@d{f{Db{Bb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Kd}}}}A@d{f{Db{Bb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nl}}}}A@d{f{Db{Bb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@d{f{Db{Bb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Jn}}}}A@d{f{Db{Bb{Jh}}}}}{{A`{bn}}}}{{{f{{l{El}}}}A@d{f{Db{Bb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Kj}}}}A@d{f{Db{Bb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Al}}}}A@d{f{Db{Bb{Jh}}}}}{{A`{bn}}}}{ce{}{}}0{{{f{{l{C`}}}}}Fj}{{{f{Bj}}c}{{l{e}}}Cj{{Dh{}{{Hd{c}}}}Dh}}{{{f{{l{e}}}}c}{{l{e}}}Cj{{Dh{}{{Hd{c}}}}Dh}}{{{f{{l{c}}}}{G`{{Cl{Cj}}}}}{{l{c}}}Dh}{{{l{c}}{f{Bj}}}{{l{c}}}Dh}{{{f{{Bb{AAh}}}}e}c{}{{AAj{{f{{l{El}}}}}{{Ad{c}}}}}}{{{f{{l{c}}}}Lf}{{l{c}}}Dh}{{{l{c}}}{}Aj}{{{f{{l{c}}}}}{}Aj}{{{f{{l{c}}}}{f{{l{c}}}}}{}Aj}{{{l{c}}{l{c}}}{}Aj}23012332103223012332012332102323{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{l{Ah}}}Dh{{Af{{Cf{E`}}Cf}{{Ad{{Cf{Ab}}}}}}}}{{{f{{l{C`}}}}{f{{l{c}}}}e}{{l{C`}}}Dh{{Af{{Cf{E`}}Cf}{{Ad{{Cf{Ab}}}}}}}}{{{f{Db{l{j}}}}{f{{l{j}}}}}b}{{{f{{l{c}}}}{f{{l{Al}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dh}````{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}e{}{}{}}{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}g{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}g{}{}{}}{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}g{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}65654654650654654````````````````{{{f{c}}h}b{}}000{{{f{DbABd}}{f{Cj}}}b}{{{f{DbABd}}}b}{{{f{DbABf}}}b}{{{f{DbABh}}c}b{{Cn{}{{Ch{{Cf{d}}}}}}Ij}}{{{f{Db{ABj{c}}}}e}bAj{{Cn{}{{Ch{Cf}}}}Ij}}{{{f{Db{ABj{c}}}}e}bAj{{Cn{}{{Ch{}}}}Ij}}{{{f{DbABl}}}b}{{{f{DbABn}}}b}65{{{f{DbAC`}}}b}{{{f{DbACb}}}b}{{{f{DbABh}}}b}{{{f{DbACd}}}b}{{{f{Db{ABj{c}}}}}bAj}{{{f{Db{ACf{c}}}}}b{AChOn}}{{{f{DbACj}}}b}{{{f{DbACl}}}b}{{{f{Db{ACn{c}}}}}bAj}{{{f{DbABd}}{Cf{{f{Cj}}}}}b}{{{f{DbABd}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{DbABl}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{Db{ABj{c}}}}{Cf{{f{Bb}}}}}bAj}{{{f{Db{ACf{c}}}}{Cf{e}}}b{AChOn}{{I`{c}}}}{{{f{DbABn}}{Cf{c}}}b{}}{{{f{DbABl}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABd}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABf}}{f{Ab}}}{{A`{bn}}}}{{{f{DbAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DbACb}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABh}}{f{Ab}}}{{A`{bn}}}}{{{f{DbACd}}{f{Ab}}}{{A`{bn}}}}{{{f{Db{ABj{c}}}}{f{Ab}}}{{A`{bn}}}Aj}{{{f{Db{ABj{c}}}}{f{Bb}}}bAj}{{{f{DbAC`}}c}b{{Cn{}{{Ch{{Cf{{f{Bj}}}}}}}}Ij}}{{{f{DbACb}}c}b{{Cn{}{{Ch{{Cf{{f{{Bb{B`}}}}}}}}}}Ij}}{{{f{DbABn}}c}b{}}{{{f{Db{ACf{c}}}}e}b{AChOn}{{I`{c}}}}{{{f{DbACj}}d}b}{{{f{Db{ACn{c}}}}}bAj}{{{f{DbAC`}}c}b{{Cn{}{{Ch{{f{Bj}}}}}}}}{{{f{DbACb}}c}b{{Cn{}{{Ch{{f{{Bb{B`}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}0000000000`{{{f{{ACf{c}}}}}{{ACf{c}}}{AChOn}}{{{f{ACj}}}ACj}{{{f{ACl}}}ACl}{{{f{{ACn{c}}}}}{{ACn{c}}}{AD`Aj}}{{{f{c}}{f{Dbe}}}b{}{}}000{{{f{c}}}b{}}000{{}ABd}{{}ABf}{Fj{{f{c}}}{}}0000000000{Fj{{f{Dbc}}}{}}0000000000{Fjb}0000000000{{{f{AC`}}}d}{{{f{ACb}}}d}{{{f{ABh}}}d}{{{f{{ABj{c}}}}}dAj}{{{f{ABl}}}d}{{{f{AC`}}}{{f{Ob}}}}{{{f{ACb}}}{{f{Ob}}}}{{{f{ABh}}}{{f{Ob}}}}{{{f{{ABj{c}}}}}{{f{Ob}}}Aj}{{{f{ABl}}}{{f{Ob}}}}{ABn{{l{c}}}Dh}{{{f{DbABd}}}{{l{Ah}}}}{{{f{DbABf}}}{{l{Ah}}}}{{{f{DbACd}}}{{l{Ah}}}}{{{f{DbABl}}}{{l{Ah}}}}{{{ACf{{Bb{B`}}}}}{{l{An}}}}{{{ACf{Bj}}}{{l{Bh}}}}{ACj{{l{Al}}}}{AClADb}{{{ACn{c}}}{{l{c}}}Aj}`{cc{}}0000000000{{{f{Bj}}e}ADd{}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{{f{Bj}}e}ADd{}{{Cn{}{{Ch{c}}}}}}{{{f{Bj}}{f{{Bb{c}}}}}ADd{}}{{{f{Bj}}{f{{Bb{{Cf{c}}}}}}}ADd{}}{{{f{Ef}}FjFj{f{Bj}}}{{A`{{Cl{ABl}}n}}}}{{}Fj}0000000000{{{f{DbAC`}}}{{Cl{Cj}}}}{{{f{DbACb}}}{{Cl{Cj}}}}{{{f{DbABh}}}{{Cl{Cj}}}}{{{f{Db{ABj{c}}}}}{{Cl{Cj}}}Aj}{{{f{DbABl}}}{{Cl{Cj}}}}{ce{}{}}0000000000`{{{f{Bj}}Fj{Cf{Ef}}}ABd}{{{f{Bj}}Fj{Cf{Ef}}}ABf}{{{f{Bj}}FjFj}AC`}{{{f{Bj}}FjFj}ACb}{{{f{Bj}}FjFj}ABh}{{{f{Bj}}Fj}ACd}{{{f{Bj}}FjFjEf}{{ABj{c}}}Aj}{{{f{Bj}}Fj}{{ACf{c}}}{AChOn}}{{{f{Bj}}Fj}ACj}{{{f{Bj}}Fj}ACl}{{{f{Bj}}Fj}{{ACn{c}}}Aj}{{{f{Bj}}FjFjEfEf}{{ABj{c}}}Aj}{{{f{DbABn}}}b}{{{f{DbACj}}}b}{{{f{DbACl}}}b}{{{f{Db{ACn{c}}}}}bAj}{{{f{c}}}e{}{}}000{c{{A`{e}}}{}{}}000000000000000000000{{{f{c}}}AAd{}}0000000000{ce{}{}}0000000000````````{{{f{DbABl}}}b}{{{f{DbABl}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{DbABl}}{f{Ab}}}{{A`{bn}}}}`{{{f{ABl}}}d}{{{f{ABl}}}{{f{Ob}}}}{{{f{DbABl}}}{{l{Ah}}}}{{{f{Ef}}FjFj{f{Bj}}}{{A`{{Cl{ABl}}n}}}}{{{f{DbABl}}}{{Cl{Cj}}}}````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{Fd}}}Fd}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{{}Fd}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{Fd}}{f{Fd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Fd}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{Fd}}{f{Dbc}}}bADf}{{}Fj}{ce{}{}}{{{f{Fd}}}d}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4``{{ADh{f{Bj}}}{{l{c}}}Dh}{{ADj{f{{l{c}}}}}{{l{c}}}Dh}10{{ADj{f{Bj}}Ef}{{l{c}}}Dh}0{{ADh{f{Bj}}}{{A`{{l{c}}e}}}Dh{}}{{ADj{f{{l{c}}}}}{{A`{{l{c}}e}}}Dh{}}10{{ADj{f{Bj}}Ef}{{A`{{l{c}}e}}}Dh{}}0`{ADlADl}``{{ADn{f{Bj}}Ef}e{}{{AE`{c}}}}{{e{f{Bj}}Ef}AE`{}{{Ib{}{{Ch{c}}}}}}````{{{f{c}}}{{f{e}}}{}{}}00{{{f{Dbc}}}{{f{Dbe}}}{}{}}00{Fj{{f{c}}}{}}00{Fj{{f{Dbc}}}{}}00{Fjb}00{cc{}}00{{}Fj}00{ce{}{}}00000{{{f{AEb}}}AEd}{{{f{AEf}}Ef}AEh}{{{f{DbAEd}}}Cf}{{{f{DbAEh}}}Cf}{{{f{Db{AEj{c}}}}}CfCn}21{{{f{Db{AEj{c}}}}}CfGd}`{{{f{AEd}}}{{Gj{Fj{Cf{Fj}}}}}}{{{f{AEh}}}{{Gj{Fj{Cf{Fj}}}}}}{{{f{{AEj{c}}}}}{{Gj{Fj{Cf{Fj}}}}}Cn}{c{{A`{e}}}{}{}}00000{{{f{c}}}AAd{}}00;;;`````````````````````````{{{f{c}}h}b{}}0000{{}Gb}{{}J`}{{GbGb}Gb}{{J`J`}J`}{{{f{DbGb}}Gb}b}{{{f{DbJ`}}J`}b}3210{{{f{Gb}}}In}0{{{f{J`}}}B`}05432{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}000000{{{f{{Md{c}}}}}{{Md{c}}}Dh}{{{f{{Jj{c}}}}}{{Jj{c}}}Dh}{{{f{AEl}}}AEl}{{{f{Gb}}}Gb}{{{f{J`}}}J`}{{{f{c}}{f{Dbe}}}b{}{}}0000{{{f{c}}}b{}}0000000{{{f{DbAEn}}}b}{GbGb}{J`J`}{{{f{Gb}}Gb}d}{{{f{J`}}J`}d}{{}{{Md{c}}}Dh}{{}{{Jj{c}}}Dh}{{}Gb}{{}J`}{Fj{{f{c}}}{}}{{{f{{Mb{c}}}}}fDh}111111{Fj{{f{Dbc}}}{}}000000{{GbGb}Gb}{{J`J`}J`}{{}d}{{{f{Mh}}}{{Cf{In}}}}{{{f{{Jj{c}}}}}{{Cf{In}}}Dh}{{{Jj{c}}In}{{Jj{c}}}Dh}{{{Jj{c}}{Cf{In}}}{{Jj{c}}}Dh}{Fjb}000000<;5{{{f{Gb}}{f{Gb}}}d}{{{f{J`}}{f{J`}}}d}7{{{f{DbGb}}c}b{{Hf{}{{Ch{Gb}}}}}}{{{f{DbJ`}}c}b{{Hf{}{{Ch{J`}}}}}}{{{Jj{c}}d}{{Jj{c}}}Dh}{{{Jj{c}}{Cf{d}}}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}Gb}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}Gb}{{Jj{e}}}DhDh}{{{Jj{c}}J`}{{Jj{c}}}Dh}{{{Jj{c}}{Cf{J`}}}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}{f{DbH`}}}{{A`{bHb}}}Dh}{{{f{AEl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Gb}}{f{DbH`}}}{{A`{bHb}}}}0000{{{f{J`}}{f{DbH`}}}{{A`{bHb}}}}0000{cc{}}000000{In{{Cf{Gb}}}}{B`{{Cf{J`}}}}{InGb}0{B`J`}010{g{{A`{ic}}}{}{}{{Hh{c}{{Ch{e}}}}}{}}0{cGb{{Hf{}{{Ch{Gb}}}}}}{cJ`{{Hf{}{{Ch{J`}}}}}}{{{f{Bj}}}{{Cf{Gb}}}}{{{f{Bj}}}{{Cf{J`}}}}{{{f{{Jj{c}}}}}{{Cf{In}}}Dh}{{{f{{Jj{c}}}}}dDh}{{{f{J`}}}d}{{{f{Mh}}}J`}{{{f{{Jj{c}}}}}J`Dh}0{{{f{{Jj{c}}}}}{{Cf{f}}}Dh}0{{{f{Db{Md{c}}}}}{{f{Db{Jj{c}}}}}Dh}{{{f{J`}}}Lf}{{}Fj}000000{{{f{DbGb}}Gb}b}{{{f{DbJ`}}J`}b}{{GbGb}Gb}{{J`J`}J`}{{{f{Gb}}Gb}d}{{{f{J`}}J`}d}{ce{}{}}000000{Gb}{J`}{{{f{Gb}}}d}{{{f{J`}}}d}{{{f{{Jj{c}}}}}dDh}21{{{f{{Jj{c}}}}}LfDh}111{{{f{Gb}}}{{AF`{Gb}}}}{{{f{J`}}}{{AF`{J`}}}}{{{f{Gb}}}{{AFb{Gb}}}}{{{f{J`}}}{{AFb{J`}}}}{{}d}{{}{{f{{AFf{AFd}}}}}}{{{f{Mh}}}{{Cf{Ln}}}}{{{Jj{c}}}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}}{{Cf{Ln}}}Dh}{{{Jj{c}}Cf}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}{Jj{c}}}{{AFh{c}}}Dh}4231{{{Jj{c}}}{{Md{c}}}Dh}{GbGb}{J`J`}{{{f{{Md{c}}}}}{{Mj{{Jj{c}}}}}Dh}{{{f{DbGb}}Gb}b}{{{f{DbJ`}}J`}b}{{{f{DbGb}}Gbd}b}{{{f{DbJ`}}J`d}b}{{{f{Db{Jj{c}}}}{Cf{In}}}bDh}{{{f{Db{Jj{c}}}}d}bDh}{{{f{DbJ`}}d}b}{{{f{Db{Jj{c}}}}J`}bDh}{{{f{Db{Jj{c}}}}Cf}bDh}033{{{f{Db{Jj{c}}}}Lf}bDh}{{{f{DbJ`}}Lf}b}{{{Jj{c}}Lf}{{Jj{c}}}Dh}{{{Jj{c}}{Cf{Lf}}}{{Jj{c}}}Dh}{{GbGb}Gb}{{J`J`}J`}>=10{{{Md{c}}}{{Jj{c}}}Dh}{{{f{c}}}e{}{}}0000{{{f{DbGb}}Gb}b}{{{f{DbJ`}}J`}b}{c{{A`{e}}}{}{}}0000000000000{{{f{{Md{c}}}}}{{Cf{{Mj{{Jj{c}}}}}}}Dh}{{{f{{Md{c}}}}}{{Cf{{Jl{{Jj{c}}}}}}}Dh}{{{f{c}}}AAd{}}00000098{{{f{{Md{c}}}}}{{f{{AFj{Mh}}}}}Dh}{ce{}{}}000000{AEnAEn}{{{f{{Md{c}}}}}{{Jl{{Jj{c}}}}}Dh}````{{{f{c}}h}b{}}{{{f{{AFl{c}}}}Fj}{{Gj{{AFl{c}}{AFl{c}}}}}Cd}{e{{AFl{c}}}Cd{{Hf{}{{Ch{{Cf{{f{c}}}}}}}}}}{e{{AFl{c}}}Cd{{Hf{}{{Ch{{f{c}}}}}}}}{{AFne}g{}{{Hf{}{{Ch{c}}}}}{}}0{{{f{Jb}}}{{f{AG`}}}}{{{f{{AFl{c}}}}}{{f{AG`}}}Cd}{{{f{Db{AFl{c}}}}}{{f{DbAG`}}}Cd}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}`{{{f{{AFl{c}}}}Fj}dCd}{{{f{{AFl{c}}}}}{{AFl{c}}}{AD`Cd}}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{{f{{AFl{c}}}}}{{f{AFn}}}Cd}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{{f{Jb}}}}{f{{f{Jb}}}}}d}{{{f{Jb}}{f{Jb}}}d}{{{f{{AFl{c}}}}{f{DbH`}}}{{A`{bHb}}}{AGbCd}}{cc{}}{{FjAFn}{{AFl{c}}}Cd}{{{f{{AFl{c}}}}Fj}{{Cf{{f{c}}}}}Cd}{{}AFn}{{{f{Hl}}{f{{AFl{c}}}}{f{{AFl{c}}}}}{{AFl{c}}}Cd}{{AFn{f{Hl}}}{{AFl{c}}}Cd}{{{f{Hl}}{f{{AFl{c}}}}}{{AFl{c}}}Cd}0{{}Fj}{ce{}{}}{{{f{{AFl{c}}}}}{}Cd}{{{f{{AFl{c}}}}Fj}dCd}0{{{f{c}}Fj}d{}}{{{f{{AFl{c}}}}}{{AGf{AGd}}}Cd}{{{f{{AFl{c}}}}}{{AGf{{f{c}}{Fh{c}}AGd}}}Cd}{{{f{{AFl{c}}}}}FjCd}0`{db}{{{f{Db{AFl{c}}}}{Cf{Hl}}}bCd}{{{f{Db{AFl{c}}}}FjFj}bCd}{{{f{c}}FjFj}e{}{}}01{{{f{{AFl{c}}}}Fj}{{Gj{{Cl{Cj}}{Cl{Cj}}}}}Cd}0{{{f{Jb}}}{{Cl{Jb}}}}{{{f{{AFl{c}}}}}{{Cl{Cj}}}Cd}{{{f{c}}}e{}{}}{g{{A`{{AFl{c}}e}}}Cd{}{{Hf{}{{Ch{{A`{{Cf{{f{c}}}}e}}}}}}}}{g{{A`{{AFl{c}}e}}}Cd{}{{Hf{}{{Ch{{A`{{f{c}}e}}}}}}}}{{AFng}{{A`{ie}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}{}}0{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}{{{f{Jb}}}{{f{Bj}}}}{{}{{f{Bj}}}}{{{f{{AFl{c}}}}}{{Cf{{f{Hl}}}}}Cd}{{{f{{AFl{c}}}}Fj}{{f{c}}}Cd}0{{{f{{AFl{c}}}}Fj}{}Cd}{{{f{{AFl{c}}}}}{{f{{Mf{{G`{c}}}}}}}Cd}{{{f{{AFl{c}}}}}{}Cd}{{{f{{AFl{c}}}}}{{Fh{c}}}Cd}{ce{}{}}{{{AFl{c}}{Cf{Hl}}}{{AFl{c}}}Cd}{{{f{{AFl{c}}}}{Cf{Hl}}}{{Cl{Cj}}}Cd}1`{{{f{Db{AGh{c}}}}}bCd}0{{{f{Db{AGh{c}}}}{Cf{c}}}bCd}{{{f{Db{AGh{c}}}}c}bCd}{{{f{Db{AGh{c}}}}{f{AG`}}}bCd}{{{f{Db{AGh{c}}}}{f{AG`}}}{{A`{bn}}}Cd}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{}{{AGh{c}}}Cd}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{AGh{c}}}{{l{{Cb{c}}}}}Cd}{cc{}}{{}Fj}{ce{}{}}{{{f{Bj}}Fj}{{AGh{c}}}Cd}{{{f{Db{AGh{c}}}}}AbCd}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4````{{{f{DbAGj}}}b}{{{f{DbAGj}}{Cf{{f{AG`}}}}}b}{{{f{DbAGj}}{f{AG`}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}`?>={{{f{AGl}}{f{DbH`}}}{{A`{bHb}}}}<{{{f{Bj}}Fj}{{Cl{AGj}}}}{{}{{Mf{Dj}}}}{{}AFn}>={{}d}`{{{Cl{Dj}}{Mf{Dj}}AFn}b}{{{f{DbAGj}}}Ab}==<{ce{}{}}``````````````````````````````````````````````{{{f{c}}h}b{}}00{{{f{{AH`{}{{AGn{c}}}}}}g}{{AH`{}{{AGn{c}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{c}}}}}}Dl}}{{{f{AHb}}{f{Dj}}}AHb}{{{f{AHb}}{f{Dj}}}{{l{c}}}Dh}{{{f{{AH`{}{{AGn{c}}}}}}i{f{Db{Bb{g}}}}}b{}{}{}{{Dj{{Cf{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AH`{}{{AGn{c}}}}}}g}{{AH`{}{{AGn{c}}}}}{}{}{{Dj{e}{{Ad{c}}}}Dl}}{{{f{AHd}}Ej}{{l{El}}}}{{{f{AHd}}{f{{Bb{Ab}}}}{f{F`}}}{{A`{{l{El}}n}}}}{{{f{AHf}}}{{A`{{l{El}}n}}}}`{{{f{c}}}{{f{e}}}{}{}}00{{{f{Dbc}}}{{f{Dbe}}}{}{}}00{{{f{AHh}}{f{Ef}}}{{A`{Abn}}}}0{{{f{AHh}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{Ej}}}Ej}{{{f{F`}}}F`}{{{f{AHj}}}AHj}{{{f{c}}{f{Dbe}}}b{}{}}00{{{f{c}}}b{}}0000{{}Ej}{{}F`}{Fj{{f{c}}}{}}00{Fj{{f{Dbc}}}{}}00``{Fjb}00{{{f{Ej}}{f{Ej}}}d}{{{f{F`}}{f{F`}}}d}{{{f{AHj}}{f{AHj}}}d}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000{{{f{AHn}}}{{A`{Abn}}}}{{{f{AHn}}}{{A`{{Gj{Ab{Gh{Gf}}}}n}}}}`{{{f{AI`}}c}{{A`{AI`n}}}{}}{{{f{AIb}}{f{{l{Al}}}}}{{A`{{l{c}}n}}}Dh}`{{{f{Ej}}{f{DbH`}}}{{A`{bHb}}}}{{{f{F`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{AHj}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{F`}}}Ej}{{{f{Ej}}}F`}22`{{{f{Bj}}cFj}AId{}}{{{f{Bj}}Fj}AIf}`{{{f{AIh}}Fj}{{A`{Iln}}}}{{{f{AIh}}Fj}Il}??{{{f{Ej}}{f{Dbc}}}bADf}{{{f{F`}}{f{Dbc}}}bADf}{{{f{AHj}}{f{Dbc}}}bADf}{{}Fj}00{ce{}{}}00{{{f{AIj}}}{{A`{{l{Al}}n}}}}{{{f{AIl}}}{{A`{{l{Al}}n}}}}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}0``{{{f{AIn}}}{{Cf{c}}}{}}{{{f{AIn}}}{{Cf{M`}}}}{{{f{AJ`}}}{{Cf{c}}}{}}2{{{f{AIn}}}{{Cf{{Gj{cc}}}}}{}}``{{{f{AHf}}}{{A`{Fjn}}}}{{}Ej}{{}F`}{{{f{AJb}}FjFj}{{l{c}}}Dh}88``{{{f{AHn}}}{{A`{{Gh{Gf}}n}}}}{{{f{AJ`}}M`Oh}{{A`{{Cf{c}}n}}}{}}{{{f{AJd}}}Ab}0{{{f{AJf}}}AJf}{{{f{AJh}}{f{Dj}}Oj}{{A`{Abn}}}}{{{f{AJj}}c{Cf{e}}}{{A`{AJjn}}}{{Hf{}{{Ch{In}}}}}{}}{{{f{AJj}}ci}{{A`{AJjn}}}{{Hf{}{{Ch{In}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{g}}}}}}}}`{{{f{AJj}}{f{{l{Al}}}}{Cf{c}}}{{A`{AJjn}}}{}}{{{f{AJl}}Gf}{{l{c}}}Dh}{{{f{AJn}}Gfc}{{l{e}}}{}Dh}{{{f{AK`}}FjFj}AK`}0`{{{f{AHd}}d}{{l{c}}}Dh}{{{f{AHd}}Ej}{{l{c}}}Dh}{{{f{AKb}}B`}{{Cf{M`}}}}{{{f{AIn}}}{{Cf{c}}}{}}{{{f{AKd}}{f{c}}}{{A`{AKdn}}}On}{{{f{AKf}}{f{c}}}AKfOn}{{{f{AKh}}}{{G`{{f{{Bb{B`}}}}}}}}{{{f{c}}}e{}{}}00{c{{A`{e}}}{}{}}00000{{{f{c}}}AAd{}}00{{{f{AHf}}}{{A`{AHfn}}}}8{ce{}{}}00{{Ejd}Ej}{{F`d}F`}1010{{F`c}F`{{Hf{}{{Ch{d}}}}}}210{EjEj}{F`F`}`{{{f{AKj}}{f{{l{Al}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dh}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DhDh{{Dj{ff}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}Dh}{{{l{c}}{l{e}}gik}{{l{m}}}DhDh{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DhDh{{AKl{CfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}g}bDhDh{{Af{CfCf}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDh{}{{Af{}{{Ad{g}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bj}}}{{l{k}}}DhDh{CjAKn}{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bj}}}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DhDhCj{{Af{}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDh{}{}{{Af{CfCf}{{Ad{{A`{{Cf{g}}i}}}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DhDhDh{{AL`{CfCfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDhCjALb{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hd{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bj}}}{{A`{{l{m}}i}}}DhDhCjALb{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DhDhALb{{Af{ff}{{Ad{{A`{{Cl{Cj}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DhDhDh{}{}{{Af{CfCfCf}{{Ad{{A`{{Cf{i}}k}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{Cf}{{Ad{{A`{{Cf{e}}g}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{CjAKn}ALb{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dh{}{{Hd{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dh{{ALd{Cf}}}Dh}{{{f{{l{c}}}}e}{{l{g}}}DhALdDh}{{{f{{l{c}}}}g}{{l{i}}}DhCj{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hd{e}}}}}}{{{l{c}}g}{{l{i}}}DhCj{{Af{}{{Ad{e}}}}}{{Dh{}{{Hd{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dh{CjAKn}{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hd{e}}}}}}0{{{f{{l{c}}}}}FjAj}0{{LfLf}Lf}{{{f{{l{El}}}}In}{{A`{bn}}}}{{{f{{ALf{In}}}}In}{{A`{bn}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eALhd}{{G`{In}}}Dh{{Cn{}{{Ch{Cf}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{ALh}}}ALh}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{{}ALh}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{ALh}}{f{ALh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{ALh}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{ALh}}{f{Dbc}}}bADf}{{}Fj}{ce{}{}}{{{f{{Bb{f}}}}cIne}{{G`{In}}}{{Cn{}{{Ch{Cf}}}}}{{Dj{fFjf}{{Ad{d}}}}}}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4`{{Fj{f{Db{G`{d}}}}}b}```{{{f{AK`}}FjFj}AK`}0{{Fj{f{{Bb{Ab}}}}{f{DbF`}}}{{A`{{ALj{{l{El}}}}n}}}}{{{f{{Bb{Ab}}}}{f{{Bb{d}}}}{f{{Bb{d}}}}}{{A`{ALln}}}}{{{f{{Bb{Ab}}}}{f{{Bb{d}}}}{f{{Bb{d}}}}}{{A`{{Jd{Gf}}n}}}}{{{f{Bj}}{f{{Bb{Ab}}}}{f{{Bb{d}}}}{f{{Bb{d}}}}}{{A`{{l{En}}n}}}}{{{f{Bj}}{f{{Bb{Ab}}}}}{{A`{{l{En}}n}}}}{{{f{Ab}}}{{A`{{Cl{Cj}}n}}}}{{{f{{Bb{Ab}}}}}{{A`{ALln}}}}{{{f{{Bb{Ab}}}}}{{A`{{l{En}}n}}}}0```````````88`{ALnGf}00{{{f{Bj}}}{{A`{Ehn}}}}{{{f{Bj}}}{{A`{AM`n}}}}{{{f{AMb}}}Gf}{{{f{Bj}}}{{A`{bn}}}}444``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}000000000000000000000000000000000{{{f{AMd}}}d}{{{f{Il}}}{{`{{Cn{}{{Ch{Il}}}}}}}}{{{f{Il}}{f{Db{G`{Il}}}}}b}{{AMdd}AMd}{{{f{{Kb{KlKj}}}}{f{{Kb{KlKj}}}}}}{{{f{Il}}{f{Il}}}Il}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Bh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{An}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Al}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{DbAMf}}{Cf{{f{Bj}}}}}b}{{{f{DbAMd}}{f{AMd}}}{{A`{bn}}}}{{{f{DbAMf}}}b}{{{f{DbAMf}}{f{Bj}}}b}{{{f{AMd}}Ej}{{l{El}}}}{eAMh{}{{Hf{}{{Ch{c}}}}}}0{{AFne}AMj{}{{Hf{}{{Ch{c}}}}}}0{{{f{Ln}}}Il}{{{f{Il}}}Il}{{{f{{Kb{K`Jn}}}}}{{`{Ij}}}}{{{f{{Kb{KhKd}}}}}{{`{Ij}}}}{{{f{Ef}}}{{f{Ef}}}}{{{f{Ob}}}{{f{Ef}}}}{{{f{AMl}}}{{f{Ef}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{{f{{Bb{c}}}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{{Kb{LbKd}}}}}{{`{Ij}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000000000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}0000000000000000000000000000000000000000000{Ef{{Cl{Ef}}}}{{{ANh{Bj}}}ANj}{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{{f{ANn}}{f{Ef}}}{{A`{Abn}}}}{{{f{Il}}{f{Ef}}}Il}{{{f{Ef}}Ef}Ef}{{{f{{Kb{KhKd}}}}Kf}{{Kb{KhKd}}}}{{{f{{Kb{KnKd}}}}Kf}{{Kb{KnKd}}}}{{{f{ANn}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{Kb{KlKj}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{Kb{KnKd}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{Kb{K`Jn}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{Kb{KhKd}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{Kb{LbKd}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{AMd}}{f{Ef}}Fd}{{A`{Abn}}}}`{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}00000000{{{f{{l{Ed}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Eb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{Kb{ce}}}}}{{Kb{ce}}}DhDh}{{{f{AO`}}}AO`}{{{f{ANj}}}ANj}{{{f{AMd}}}AMd}{{{f{Ln}}}Ln}{{{f{AOb}}}AOb}{{{f{Il}}}Il}{{{f{AOd}}}AOd}{{{f{Ef}}}Ef}{{{f{AOf}}}AOf}{{{f{Ob}}}Ob}{{{f{Kf}}}Kf}{{{f{O`}}}O`}{{{f{Nd}}}Nd}{{{f{El}}}El}{{{f{Nl}}}Nl}{{{f{Nh}}}Nh}{{{f{Ml}}}Ml}{{{f{Jn}}}Jn}{{{f{Kd}}}Kd}{{{f{Ed}}}Ed}{{{f{Eb}}}Eb}{{{f{K`}}}K`}{{{f{Lb}}}Lb}{{{f{Bh}}}Bh}{{{f{An}}}An}{{{f{En}}}En}{{{f{Al}}}Al}{{{f{Kl}}}Kl}{{{f{Kh}}}Kh}{{{f{Kn}}}Kn}{{{f{AOh}}}AOh}{{{f{AFn}}}AFn}{{{f{AOj}}}AOj}{{{f{c}}{f{Dbe}}}b{}{}}000000000000000000000000000000000{{{f{c}}}b{}}0000000000000000000000000000000000000000000000000000000000{{{f{DbOb}}Ef}b}{AOle{}{{AMh{c}}AKn}}0{{AOlAFn}e{}{{AMj{c}}AKn}}0{{{f{Ef}}}d}00{{{ANh{Bj}}}Ef}{{{f{Ob}}}{{f{Ef}}}}{{{f{{Kb{KnKd}}}}}{{l{Kd}}}}{{}AOn}{{}AO`}{{}ANj}{{}Il}{{}AOd}{{}Ef}{{}AFn}{Fj{{f{c}}}{}}0{{{f{{Kb{ce}}}}}fDhDh}111111111111111111111111111111111111111111{Fj{{f{Dbc}}}{}}0{{{f{Db{Kb{ce}}}}}{{f{Db}}}DhDh}111111111111111111111111111111111111111111{{{f{{Kb{KlKj}}}}{f{{Kb{KlKj}}}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{AMfc}AMd{{Hf{}{{Ch{{Cf{{f{Bj}}}}}}}}}}{Fjb}0000000000000000000000000000000000000000000{{{f{ANn}}}{{f{Ef}}}}{{{f{{Kb{LbKd}}}}}{{f{Ef}}}}{{{f{{Kb{K`Jn}}}}}{{f{Ef}}}}{{{f{{Kb{KnKd}}}}}{{f{Ef}}}}{{{f{{Kb{KhKd}}}}}{{f{Ef}}}}{{{f{{Kb{KlKj}}}}}{{f{Ef}}}}{{{f{AMd}}}{{f{Ef}}}}{{{f{Ln}}}{{f{Ef}}}}{{{f{Il}}}Ef}`{{{f{AO`}}{f{AO`}}}d}{{{f{Il}}{f{Il}}}d}{{{f{AOd}}{f{AOd}}}d}{{{f{Ef}}{f{AFn}}}d}{{{f{Ef}}{f{Ef}}}d}{{{f{AOf}}{f{AOf}}}d}{{{f{Ob}}{f{Ob}}}d}{{{f{Kf}}{f{Kf}}}d}{{{f{AFn}}{f{AFn}}}d}{{{f{AOj}}{f{AOj}}}d}{{{f{Il}}{f{Il}}d}d}{{{f{AMd}}{f{AMd}}}}{{{f{AMd}}{f{{l{Bh}}}}}}{{{f{AMd}}{f{Bj}}}}210{{{f{c}}{f{e}}}d{}{}}00000000000000000000000{{{f{{Kb{ce}}}}}ObDhDh}{{{f{ANj}}{f{Bj}}}{{Cf{In}}}}{{ANl{f{{l{El}}}}{f{{l{El}}}}}{{A`{{l{El}}n}}}}{AMfAMd}{AOn{{Mf{ANj}}}}{{{f{AO`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{ANj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{AOb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Il}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{AOd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Ef}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{AOf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Ob}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Kf}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{AFn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{AOj}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}0{{{l{Jn}}}{{Kb{K`Jn}}}}1{{{l{Kd}}}{{Kb{LbKd}}}}2222222222222{{{f{{Bb{B`}}}}}Il}{{{f{Bj}}}Il}{{{Cf{c}}}Il{{B@`{Il}}}}5{dIl}{cIlB@b}77{{{f{AFn}}}Ef}{{{f{Il}}}Ef}{IlEf}:{{{f{B@d}}}Ob};{{{f{Il}}}Ob}{{{f{AOj}}}Kf}======================{B@fAFn}{B@hAFn}?{{{f{AFn}}d}Ef}{{{l{El}}{Mf{ANj}}dAO`}AMd}{{{f{Bj}}cKf}{{Kb{KnKd}}}{{Hf{}{{Ch{B@j}}}}}}{{{f{Bj}}cKf}{{Kb{KnKd}}}{{Hf{}{{Ch{{Cf{B@j}}}}}}}}{{{l{El}}AO`}AMd}{{{f{Bj}}c}{{Kb{K`Jn}}}{{Hf{}{{Ch{B@l}}}}}}{{{f{Bj}}c}{{Kb{K`Jn}}}{{Hf{}{{Ch{{Cf{B@l}}}}}}}}{{{f{Bj}}cKf}{{Kb{KhKd}}}{{Hf{}{{Ch{ALn}}}}}}{{{f{Bj}}cKf}{{Kb{KhKd}}}{{Hf{}{{Ch{{Cf{ALn}}}}}}}}{{{f{Bj}}c}{{Kb{LbKd}}}{{Hf{}{{Ch{AMb}}}}}}{{{f{Bj}}c}{{Kb{LbKd}}}{{Hf{}{{Ch{{Cf{AMb}}}}}}}}{{{BA`{B@n}}Ef}Ob}{{{f{{l{Bh}}}}{f{{ANh{Bj}}}}AO`}{{A`{AMdn}}}}{{{G`{c}}AFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{G`{c}}AFn}{{AKn{}{{AMn{e}}{AN`{c}}{ANb{g}}}}}{ANd{ANf{e}}}AD`{{Gd{}{{Ch{e}}}}IjIdIf}}{{FjcAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{FjAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{Bj}}dFjAO`}AMd}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fj}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{ANj}}In}{{f{Bj}}}}{{{f{{Kb{KnKd}}}}Fj}{{A`{Iln}}}}{{{f{{Kb{LbKd}}}}Fj}{{A`{Iln}}}}{{{f{{Kb{KhKd}}}}Fj}{{A`{Iln}}}}{{{f{{Kb{K`Jn}}}}Fj}{{A`{Iln}}}}{{{f{{Kb{KlKj}}}}Fj}{{A`{Iln}}}}{{{f{ANn}}Fj}{{A`{Iln}}}}{{{f{AMd}}Fj}{{A`{Iln}}}}{{{f{{Kb{KlKj}}}}Fj}Il}{{{f{{Kb{LbKd}}}}Fj}Il}{{{f{{Kb{KhKd}}}}Fj}Il}{{{f{{Kb{KnKd}}}}Fj}Il}{{{f{{Kb{K`Jn}}}}Fj}Il}{{{f{ANn}}Fj}Il}{{{f{AMd}}Fj}Il}{{{f{ANj}}}{{f{{ANh{Bj}}}}}}{{}Ef}0000000000000000000000000{{{f{ANj}}In}{{Cf{{f{Bj}}}}}}{{{f{AMd}}}{{f{{Mf{ANj}}}}}}{{{f{Ef}}}{{Cf{{G`{Fj}}}}}}{{{f{Il}}}{{Cf{{f{Bj}}}}}}{{{f{BAb}}Fj}Il}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fj}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{AMd}}{f{Bj}}}}{{{f{AMd}}{f{AMd}}}}{{{f{AMd}}{f{{l{Bh}}}}}}201{{{f{Il}}{f{Dbc}}}bADf}{{{f{AOd}}{f{Dbc}}}bADf}{{{f{Ef}}{f{Dbc}}}bADf}{{{f{Ob}}{f{Dbc}}}bADf}{{{f{Kf}}{f{Dbc}}}bADf}{{{f{AFn}}{f{Dbc}}}bADf}{{{f{AOj}}{f{Dbc}}}bADf}{{{f{Il}}{f{Dbc}}d}bADf}{{{f{{Kb{LbKd}}}}}{{l{Nh}}}}{{{f{{Kb{KnKd}}}}}{{l{Kd}}}}{EfEf}{{}Fj}0000000000000000000000000000000000000000000{{{f{Ef}}}{{Cf{{f{Ef}}}}}}{{{f{AFn}}}{{Cf{{f{AFn}}}}}}{ce{}{}}00000000000000000000000000000000000000000000{{BAdEf}{{A`{Lnn}}}}{{{Kb{KhKd}}}Ab}{{{Kb{K`Jn}}}Ab}{{{Kb{KlKj}}}Ab}{{{Kb{LbKd}}}Ab}{{{Kb{KnKd}}}Ab}{AMdAb}{{Ln{f{Bj}}}Ab}{Il{{A`{Iln}}}}{{{f{Ef}}}d}00{{{f{Il}}}d}11{{{f{AMd}}}d}0212{{{f{ANj}}}d}23330332323233332333323{{{f{AFn}}}d}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{AGf{cgAGd}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{AMd}}}BAf}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{Ef}}}{{f{Ef}}}}{{{f{ANj}}}Fj}{{{f{AMd}}}Fj}{{{f{AMd}}{f{AMd}}}}{{{f{AMd}}{f{Bj}}}}{{{f{AMd}}{f{{l{Bh}}}}}}201{{{f{AMd}}{f{AMd}}}{{A`{{Gj{AMdAMd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Ef}}{f{Ef}}}{{A`{dn}}}}{{{f{AOd}}}{{Cf{Ef}}}}{{{f{AMd}}}Ln}{{{f{Ef}}{f{Ef}}}{{A`{Efn}}}}{{{f{DbAOn}}{f{{Mf{ANj}}}}}{{A`{bn}}}}{{{f{{Kb{KnKd}}}}}{{l{Kd}}}}03{{{f{{Kb{LbKd}}}}}{{l{Nh}}}}1{{{f{{Kb{KlKj}}}}{f{{Kb{KlKj}}}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{AMd}}}{{A`{Fjn}}}}{{{f{AMd}}}{{f{Bj}}}}{{{f{Ob}}}{{f{{BA`{B@n}}}}}}`{{{f{{Kb{LbKd}}}}}{{l{Jn}}}}8{{}c{}}0{{{f{Bj}}FjAO`}AMf}{{{f{Bj}}c}{{Kb{LbKd}}}{{I`{{Bb{AMb}}}}}}{{{f{Bj}}c}{{Kb{LbKd}}}{{I`{{Bb{{Cf{AMb}}}}}}}}{{{f{Bj}}c}{{Kb{KnKd}}}{{I`{{Bb{{Cf{B@j}}}}}}}}{{{f{Bj}}c}{{Kb{KhKd}}}{{I`{{Bb{ALn}}}}}}{{{f{Bj}}c}{{Kb{K`Jn}}}{{I`{{Bb{B@l}}}}}}{{{f{Bj}}c}{{Kb{KnKd}}}{{I`{{Bb{B@j}}}}}}{{{f{Bj}}c}{{Kb{K`Jn}}}{{I`{{Bb{{Cf{B@l}}}}}}}}{{{f{Bj}}c}{{Kb{KhKd}}}{{I`{{Bb{{Cf{ALn}}}}}}}}{{{Mf{ANj}}}AOn}{{EfIl}Ln}{{{f{Bj}}Ef}Ob}{{{l{c}}}{{Kb{ec}}}DhDh}{{}AOf}{{{f{DbBAf}}}Cf}{{{f{AMd}}{f{{l{Bh}}}}}}{{{f{AMd}}{f{Bj}}}}{{{f{AMd}}{f{AMd}}}}120{{{f{AMd}}}Fj}5{{{f{Bj}}{f{{Bb{{f{Bj}}}}}}{f{Bj}}}{{Kb{K`Jn}}}}{{{f{Bj}}{f{{Bb{{f{Bj}}}}}}{f{Bj}}}{{Kb{LbKd}}}}{{{f{Il}}{f{Il}}}{{Cf{BAh}}}}{{{f{Kf}}{f{Kf}}}{{Cf{BAh}}}}{{{f{AMd}}}{{f{{l{El}}}}}}{{{f{{Kb{KlKj}}}}}{{Cf{Fj}}}}{{{f{DbAMf}}{f{Bj}}}{{Gj{Ind}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{Kb{KhKd}}}}{f{{l{Bh}}}}{Cf{{f{AM`}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{{Kb{K`Jn}}}}{f{{l{Bh}}}}{Cf{{f{AM`}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{ANj}}{f{ANj}}}d}{{{f{{Kb{KlKj}}}}}Fj}{{{f{{Kb{LbKd}}}}}{{l{Nh}}}}{{{f{{Kb{KnKd}}}}}{{l{Kd}}}}{{{f{DbOb}}{BA`{B@n}}}b}{{{f{Db{Kb{KhKd}}}}Kf}b}{{{f{Db{Kb{KnKd}}}}Kf}b}{{{f{Db{Kb{KhKd}}}}KfEh}{{A`{bn}}}}{{{f{Db{Kb{KhKd}}}}Eh}{{A`{bn}}}}{{{f{BAf}}}{{Gj{Fj{Cf{Fj}}}}}}{{{f{AMd}}d}AMd}{{{f{AMd}}Ej}AMd}{{{f{{Kb{KhKd}}}}{f{Bj}}}{{A`{{l{Bh}}n}}}}{{{f{{Kb{K`Jn}}}}{f{Bj}}}{{l{Bh}}}}{{{f{{Kb{LbKd}}}}{f{Bj}}}{{l{Bh}}}}{{{f{Il}}{f{Ef}}}{{Cf{Il}}}}{{{f{{Kb{KlKj}}}}{f{{Kb{KlKj}}}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{Kb{KhKd}}}}}Kf}{{{f{{Kb{KnKd}}}}}Kf}{{{f{{Kb{KhKd}}}}}{{f{{Cf{Eh}}}}}}{{{f{AMd}}AOfd}{{Cl{Cj}}}}{{{f{Ef}}AOf}AFn}{{{f{Ob}}AOf}B@d}{KfAOj}{{{f{Ef}}{f{Bj}}AOf}B@d}{Kf{{f{Bj}}}}{{{f{AMd}}{f{{ANh{Bj}}}}BAj}AMd}{{{f{AMd}}}{{A`{AMdn}}}}{{{f{AMd}}}AMd}{{{f{AFn}}}{{f{AFn}}}}{{{f{c}}}e{}{}}000000000000000000000000000000000{{{f{Ef}}}Ef}{{{f{AFn}}}BAl}{{{f{{Kb{K`Jn}}}}{f{Bj}}}{{l{Bh}}}}{{{f{{Kb{LbKd}}}}{f{Bj}}}{{l{Bh}}}}{{{f{{Kb{KhKd}}}}{f{Bj}}}{{A`{{l{Bh}}n}}}}{{{f{c}}}Eh{}}00{{{f{Il}}{f{Il}}}d}{{{f{{Kb{K`Jn}}}}{Cf{{f{AM`}}}}{f{{l{Bh}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{AM`}}}}{f{{l{Bh}}}}}{{A`{{Kb{KhKd}}n}}}}{g{{A`{AMhe}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}}0{{AFng}{{A`{AMje}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}}0{AOl{{A`{eg}}}{}{{AMh{c}}AKn}{}}0{{AOlAFn}{{A`{eg}}}{}{{AMj{c}}AKn}{}}0{{{f{Il}}}{{A`{cn}}}Ll}{c{{A`{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{Il}}{f{Ef}}}{{A`{Iln}}}}{{{f{Ef}}AOf}{{A`{AFnn}}}}{{{f{c}}}AAd{}}0000000000000000000000000000000000000000000{{{f{AFn}}}AFn}{{{f{AMd}}}{{A`{AMdn}}}}{{{f{DbLn}}Il}b}{{{f{AMd}}}d}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fj}cAD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{Ln}}}{{f{Il}}}}{{{f{AMd}}}{{A`{AAfn}}}}2{{{f{Ef}}Il}d}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}gAD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{ce{}{}}0000000000000000000000000000000000000000000{Fjc{}}0{{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}{Cf{Hl}}}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{Ef}}}Il}```````````{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{ANl{f{{l{El}}}}{f{{l{El}}}}}{{A`{{l{El}}n}}}}{{{f{AMd}}{f{AMd}}}{{A`{{Gj{AMdAMd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gj{{l{Ah}}{l{Ah}}}}n}}}}`````````{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{}BAn}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{{}b}{Fjb}{{{f{DbBAn}}}b}2{cc{}}6{{}Fj}{ce{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}{{}d}3``````````````````````````{{{f{BB`}}}{{f{Bj}}}}>>>===`{{nBB`}n}{nn}=={{{f{BB`}}}f}>===;;;`{{{f{BBb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BB`}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{n}}{f{DbH`}}}{{A`{bHb}}}}0<<{cBB`{{B@`{{Dn{Bj}}}}}}={BBdn}{BBfn}{BBhn}{BBjn}{BBln}{BBnn}{{}{{Fl{{f{Bj}}BBb}{{Ad{b}}}}}}{{}Fj}00{ce{}{}}00{cnALb}````{{{Fl{{f{Bj}}BBb}{{Ad{b}}}}}b}{cnBC`}{{{f{c}}}Eh{}}0{c{{A`{e}}}{}{}}00000{{{f{c}}}AAd{}}00666``````````````````{{{f{c}}h}b{}}00{{{f{DbAAf}}{G`{Ab}}{f{BCb}}}{{A`{bn}}}}{{{f{AAf}}{f{Dj}}}{{G`{Ab}}}}0{{{f{AAf}}{f{{l{Al}}}}}{{A`{AAfn}}}}{{{f{AAf}}{f{{Bb{{BA`{B@n}}}}}}}{{A`{AAfn}}}}0{{{f{AAf}}GfFj}AAf}{{{f{DbAAf}}}{{f{DbAAf}}}}{{{f{DbAAf}}{f{Bj}}e}{{A`{{f{DbAAf}}n}}}BCd{{AAj{{f{Ab}}}{{Ad{c}}}}}}{{{f{DbAAf}}Fje}{{A`{{f{DbAAf}}n}}}BCd{{AAj{{f{Ab}}}{{Ad{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Dbc}}}{{f{Dbe}}}{}{}}0000{{{f{AAf}}}{{`{{Cn{}{{Ch{Fj}}}}}}}}{{{f{AAf}}}AAf}{{{f{BCf}}}BCf}{{{f{BCh}}}BCh}2{{{f{c}}{f{Dbe}}}b{}{}}00{{{f{c}}}b{}}0000{{{f{AAf}}{f{Bj}}}{{A`{{f{Ab}}n}}}}{{{f{AAf}}e}{{A`{{G`{{f{Ab}}}}n}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{}BCh}{{}AAf}{Fj{{f{c}}}{}}0000{Fj{{f{Dbc}}}{}}0000{Fjb}0000{{{f{AAf}}{f{Bj}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{Bj}}}{{A`{Abn}}}}{{{f{AAf}}{f{{Bb{c}}}}}AAf{{I`{Bj}}}}{{{f{AAf}}{f{{BCj{{f{Bj}}A@d}}}}}AAf}{{{f{AAf}}{Cf{{f{{Bb{c}}}}}}}{{A`{AAfn}}}{{I`{Bj}}}}{{{f{AAf}}}{{G`{Ef}}}}9{{{f{BCl}}}AAf}{{{f{BCb}}}AAf}{{{f{BCh}}{f{BCh}}}d}{{{f{AAf}}{f{AAf}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{AAf}}}Fj}`{{{f{AAf}}e}{{A`{AAfn}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{AAf}}{G`{Ab}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{AAf}}}{{A`{bn}}}}{{{f{AAf}}}{{G`{Ob}}}}{{{f{AAf}}AHj}{{A`{AAfn}}}}{{{f{AAf}}{f{{l{Al}}}}}{{A`{AAfn}}}}{{{f{BCf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BCh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{AAf}}{f{DbH`}}}{{A`{bHb}}}}0{cc{}}0000{g{{A`{ic}}}{}{}{{Hh{c}{{Ch{e}}}}}{}}{cAAf{{Hf{}{{Ch{Ab}}}}}}{{{f{{Bb{BCn}}}}}{{A`{AAfn}}}}{{{f{{Bb{BCn}}}}{f{BCb}}}{{A`{AAfn}}}}{{c{f{BCb}}}{{A`{AAfn}}}{{Cn{}{{Ch{{f{BCn}}}}}}}}{{{f{AAf}}Fj}{{Cf{{G`{Il}}}}}}{{{f{AAf}}{f{Bj}}}{{Cf{Fj}}}}{{{f{AAf}}}{{G`{{f{Bj}}}}}}{{{f{AAf}}}{{G`{{BA`{B@n}}}}}}{{{f{AAf}}}{{f{{Bb{Ab}}}}}}{{{f{DbAAf}}}{{f{Db{G`{Ab}}}}}}{{{f{AAf}}Fj}{{A`{BCnn}}}}{{{f{AAf}}Fj{f{DbBCn}}}{{A`{bn}}}}{{{f{AAf}}Fj{f{DbBCn}}}b}{{{f{AAf}}}{{Cf{{A`{Efn}}}}}}`{{{f{AAf}}e}{{A`{BD`n}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{AAf}}{G`{Ab}}{f{BDb}}}{{A`{{Gj{Ab{G`{Ab}}Bn}}n}}}}1{{{f{AAf}}{G`{Ab}}dd}{{A`{BD`n}}}}{{{f{BCh}}{f{Dbc}}}bADf}{{{f{AAf}}{Cf{Fj}}}AAf}{{{f{AAf}}}Fj}{{{f{AAf}}{f{{Bb{Ab}}}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{{Bb{Ab}}}}}{{A`{{f{DbAAf}}n}}}}{{{f{DbAAf}}{f{{Bb{Ab}}}}}{{f{DbAAf}}}}{{{f{AAf}}BDd}f}{{{f{AAf}}{f{Bj}}}f}{{{f{AAf}}Fj}f}{{{f{AAf}}{BDf{Fj}}}f}{{{f{AAf}}{BDh{Fj}}}f}{{{f{AAf}}{BDj{Fj}}}f}{{{f{AAf}}{Nb{Fj}}}f}{{{f{AAf}}{BDl{Fj}}}f}{{}Fj}0000{{{f{DbAAf}}Fjc}{{A`{{f{DbAAf}}n}}}BCd}{ce{}{}}000000{{AAf{f{Bj}}}{{l{j}}}}{{{f{AAf}}}{{A`{{l{Al}}n}}}}{{{f{AAf}}}d}1{{{f{AAf}}}{{Fh{Ab}}}}{{{f{AAf}}AOfd}BDn}{{{f{AAf}}}{{`{{Cn{}{{Ch{AAf}}}}}}}}{{{f{AAf}}}BE`}{AAfBEb}{{{f{AAf}}}Fj}{{{f{AAf}}}{{A`{{Cf{Ab}}n}}}}{{{f{AAf}}BCf}{{A`{{Cf{Ab}}n}}}}122{{{G`{c}}}{{A`{AAfn}}}BCd}{{{G`{Ab}}}AAf}{{{G`{Ab}}}{{A`{AAfn}}}}{{{f{DbBDn}}}Cf}{{{f{DbBE`}}}Cf}{{{f{AAf}}}AAf}{{AAfe}{{A`{cn}}}{}{{Dj{AAf}{{Ad{{A`{cn}}}}}}}}{{{f{DbAAf}}e}{{A`{cn}}}{}{{Dj{{f{DbAAf}}}{{Ad{{A`{cn}}}}}}}}{{AAfgc}{{A`{en}}}{}{}{{Dj{AAfc}{{Ad{{A`{en}}}}}}}}{{{f{DbAAf}}}{{Cf{Ab}}}}{{{f{AAf}}{f{AAf}}}d}{{{f{DbAAf}}{f{Bj}}{f{Bj}}}{{A`{{f{DbAAf}}n}}}}{{{f{DbAAf}}{f{Bj}}c}{{A`{{f{DbAAf}}n}}}BCd}{{{f{DbAAf}}Fjc}{{A`{{f{DbAAf}}n}}}BCd}18{{{f{AAf}}{G`{Ab}}{f{BEd}}}{{A`{{Gj{Ab{G`{Ab}}Bn}}n}}}}`{{{f{AAf}}{f{Ab}}dd{Cf{Jh}}}{{A`{AAfn}}}}0{{{f{AAf}}Fjdd{Cf{Jh}}}{{A`{AAfn}}}}{{{f{AAf}}}BCb}{{{f{AAf}}{f{AAf}}}{{A`{bn}}}}{{{f{AAf}}e}{{A`{AAfn}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{AAf}}Fj}{{Cf{{f{Ab}}}}}}{{{f{AAf}}c}{{A`{AAfn}}}{{BEf{Fj}}}}2{{{f{AAf}}c}{{A`{{G`{Ab}}n}}}{{BEh{{BA`{B@n}}}}}}{{{f{AAf}}e{f{{Mf{BCb}}}}}{{A`{AAfn}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{AAf}}e{f{BCb}}}{{A`{AAfn}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{DbAAf}}{f{{Bb{c}}}}}{{A`{bn}}}{{I`{Bj}}}}{{{f{AAf}}}{{Gj{FjFj}}}}{{{f{AAf}}Gf}AAf}{{{f{AAf}}}d}{{{f{DbAAf}}}b}{{{f{BDn}}}{{Gj{Fj{Cf{Fj}}}}}}{{{f{BE`}}}{{Gj{Fj{Cf{Fj}}}}}}{{{f{AAf}}GfFj}AAf}00{{{f{AAf}}cF`}{{A`{AAfn}}}{{BEh{{BA`{B@n}}}}}}{{{f{DbAAf}}cF`}{{A`{{f{DbAAf}}n}}}{{BEh{{BA`{B@n}}}}}}{{{f{AAf}}Gf}{{Gj{AAfAAf}}}}0{{{f{DbAAf}}}{{`{{Cn{}{{Ch{AAf}}}}}}}}{{AAfFjd}{{G`{AAf}}}}{{{f{AAf}}BCf}{{A`{{Cf{Ab}}n}}}}{{{f{AAf}}{Cf{Fj}}}AAf}{{{f{AAf}}{f{{l{El}}}}}{{A`{AAfn}}}}{{{f{AAf}}{f{{l{El}}}}}AAf}{{{f{AAf}}{f{{l{El}}}}d}AAf}{{{f{AAf}}}{{f{AAf}}}}{{{f{AAf}}BEj}{{A`{{A@n{A@h{A@l{{A@j{Fj}}}}}}n}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Eh{}}{{{f{DbAAf}}{Cf{{f{Bj}}}}{Cf{{AAb{Eh{G`{Eh}}}}}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{Bj}}e}{{A`{{f{DbAAf}}n}}}BCd{{AAj{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{{{f{DbAAf}}Fje}{{A`{{f{DbAAf}}n}}}BCd{{AAj{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{c{{A`{e}}}{}{}}0000{{{Gj{{BEl{{Cl{Cj}}}}{f{{Bb{B@d}}}}}}}{{A`{AAfn}}}}{BEn{{A`{AAfn}}}}{{c{f{BCb}}}{{A`{AAfn}}}{{Cn{}{{Ch{{A`{{f{BCn}}n}}}}}}}}{{{f{AAf}}{f{Bj}}}{{A`{Fjn}}}}44444{{{f{c}}}AAd{}}0000{{{f{AAf}}{Cf{{f{{Bb{Eh}}}}}}BCh{Cf{{Gj{GfFj}}}}}{{A`{AAfn}}}}{{{f{AAf}}d{Cf{{f{{Bb{Eh}}}}}}BCh{Cf{{Gj{GfFj}}}}}{{A`{AAfn}}}}1{{{f{AAf}}c}{{A`{AAfn}}}{{BEh{Eh}}}}{{{f{AAf}}ce}{{A`{AAfn}}}{{BEh{{BA`{B@n}}}}}{{BEh{{BA`{B@n}}}}}}{{{f{AAf}}BF`}{{A`{AAfn}}}}{{{f{AAf}}c{f{Bj}}BFb}{{A`{AAfn}}}{{BEh{Eh}}}}0{{{f{AAf}}{f{AAf}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{AAf}}}{{A`{{f{DbAAf}}n}}}}{ce{}{}}0000{{{f{AAf}}}Fj}{{{f{DbAAf}}c}{{A`{{f{DbAAf}}n}}}BCd}{{{f{DbAAf}}c{f{BCb}}}{{A`{{f{DbAAf}}n}}}BCd}{{{f{DbAAf}}Ab}{{f{DbAAf}}}}{{{f{AAf}}{f{Bj}}{Cf{In}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{Bj}}{Cf{In}}}{{f{DbAAf}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{BF`}}}BF`}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{}BF`}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{BF`}}{f{BF`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BF`}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{BF`}}{f{Dbc}}}bADf}`{{}Fj}{ce{}{}}``{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}``3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BD`}}}{{A`{AAfn}}}}`{{{f{BFd}}}{{f{{Bb{{BFf{In}}}}}}}}{{{f{BD`}}c}{{A`{AAfn}}}{{Af{AAf}{{Ad{{A`{AAfn}}}}}}IdIf}}{{{f{Bn}}}{{l{Ah}}}}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}0000000{{{f{BFd}}}BFd}{{{f{Bn}}}Bn}{{{f{BD`}}}BD`}{{{f{BFh}}}BFh}{{{f{c}}{f{Dbe}}}b{}{}}000{{{f{c}}}b{}}0000;{{}BFd}{{}Bn}{Fj{{f{c}}}{}}00{{{f{BFj}}}f}11111{Fj{{f{Dbc}}}{}}0000000`{{BFlc}{}BFn}{Fjb}000{{{f{DbBFd}}}b}1111{{{f{BFd}}{f{BFd}}}d}{{{f{Bn}}{f{Bn}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BG`}}}In}{{{f{BFd}}}{{f{{Bb{In}}}}}}{{{f{BD`}}}{{A`{AAfn}}}}{{{f{DbBFd}}}{{f{Db{G`{In}}}}}}{{{f{BFd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Bn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BD`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BFh}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{Bj}}BFh}Eh}{cc{}}000{{{G`{{G`{{Gj{In{BFf{In}}}}}}}}}BFd}1{{{G`{{Gj{{G`{In}}{G`{{BFf{In}}}}}}}}}BFd}{{{G`{{Gj{In{BFf{In}}}}}}}BFd}{BFdBn}44{BGbBFh}5{g{{A`{ic}}}{}{}{{Hh{c}{{Ch{e}}}}}{}}{cBFd{{Hf{}{{Ch{{Gj{In{BFf{In}}}}}}}}}}{cBFd{{Ib{}{{Ch{{Gj{In{BFf{In}}}}}}}}}}{{{f{Bn}}Fj}BG`}{{{f{BD`}}}{{f{Bn}}}}{{{f{DbBD`}}}{{f{DbBn}}}}{{{f{Bn}}}{{l{El}}}}{{{f{BGd}}dd}{{A`{Bnn}}}}{{{f{BD`}}}{{A`{AAfn}}}}{{{f{DbBn}}}{{f{DbBFd}}}}{{}Fj}0000000{ce{}{}}0000000{BnBFd}1{{{f{BFd}}}}{BFd}310{{{f{BG`}}}d}{{{f{Bn}}}d}{{{f{BFd}}}d}{{{f{BFd}}}{{BGh{{BGf{{Fh{In}}}}{Fh{{BFf{In}}}}}}}}{{{f{Bn}}}BGj}{{{f{BD`}}}{{G`{Ab}}}}{{{f{BD`}}{Cf{{Gj{GfFj}}}}}{{G`{Ab}}}}={{{f{BG`}}}Fj}{{{f{Bn}}}Fj}?????{{{G`{In}}{G`{{BFf{In}}}}d}BFd}{{{f{AAf}}{G`{Ab}}Bn{Cf{{G`{Eh}}}}}BD`}{{{f{DbBGj}}}Cf}{{{f{DbBGj}}Fj}Cf}{{{f{BD`}}c}{{A`{AAfn}}}{{Dj{AAf}{{Ad{{A`{AAfn}}}}}}IdIf}}{{{f{c}}}{}{}}{{{f{Bn}}}BFl}{{{f{BD`}}M`Oh}{{A`{AAfn}}}}{{BD`e}BD`{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{Bn}}GfFj}BFj}{{{f{DbBFd}}}b}{{{f{DbBn}}}b}{{{f{BD`}}B`}{{A`{AAfn}}}}{{{f{BD`}}}{{A`{AAfn}}}}{Bn{{G`{In}}}}0{BD`Bn}{{{f{DbBD`}}}Bn}{{{f{c}}}e{}{}}000{{{f{c}}}Eh{}}{c{{A`{e}}}{}{}}000000000000000{{{f{c}}}AAd{}}0000000{BnBn}{{{f{Bn}}}{{f{BFd}}}}{{{f{Bn}}}{{f{{G`{{A@j{In}}}}}}}};{ce{}{}}0000000`````{{{f{BFd}}c}Ab{{Dj{{Gj{In{f{{BFf{In}}}}}}}{{Ad{Cf}}}}IdIf}}{{{f{BFd}}c}Ab{{Dj{{Gj{In{f{{BFf{In}}}}}}}{{Ad{}}}}IdIf}}{{{f{{Bb{{A@j{In}}}}}}c}Ab{{Dj{{A@j{In}}}{{Ad{Cf}}}}IdIf}}{{{f{{Bb{{A@j{In}}}}}}c}Ab{{Dj{{A@j{In}}}{{Ad{}}}}IdIf}}{{{f{{Bb{c}}}}e{Cf{{Mf{AG`}}}}}{{ALf{c}}}{BGlBGn}{{Cn{}{{Ch{{Gj{InIn}}}}}}Ij}}{{{f{{Bb{c}}}}{f{Hl}}e{Cf{{Mf{AG`}}}}}{{ALf{c}}}{BGlBGn}{{Cn{}{{Ch{{Gj{InIn}}}}}}Ij}}{{{f{{l{c}}}}InIn}{{l{c}}}Dh}{{{f{{G`{{A@j{In}}}}}}{f{{Bb{{Cl{Cj}}}}}}}d}{{{f{BH`}}{f{Bn}}}Ab}{{BHbBHb}BHb}0`{{{f{BHd}}{f{AAf}}{f{Bn}}}{{A`{Abn}}}}{{{f{BHd}}}{{A`{{f{Bj}}n}}}}````````````````````````````````````{{{f{c}}h}b{}}00{{{f{DbBHf}}Il}{{Cf{b}}}}{{{f{DbBHh}}{f{Il}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Dbc}}}{{f{Dbe}}}{}{}}00{{{f{BHf}}}BHf}{{{f{BHh}}}BHh}{{{f{BCn}}}BCn}{{{f{c}}{f{Dbe}}}b{}{}}00{{{f{c}}}b{}}00{{{f{{Bb{c}}}}}Ef{{Hn{Ef}}}}{{}BCn}{Fj{{f{c}}}{}}00{Fj{{f{Dbc}}}{}}00{Fjb}00{{{f{BCn}}{f{BCn}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCn}}{f{DbH`}}}{{A`{bHb}}}}{{{Gj{{f{Ef}}Fj}}}BHf}{cc{}}{{{Gj{{f{Ef}}Fj}}}BHh}11{{eFj}BCb{{B@`{Ef}}}{{Cn{}{{Ch{{G`{{Gj{Ehc}}}}}}}}}}{{}Fj}00{ce{}{}}00{BHfAb}{BHhAb}{{{f{Ef}}Fj}BHf}{{{f{Ef}}Fj}BHh}{{{G`{Il}}}BCn}{{{f{DbBHf}}Fj}Ab}{{{f{DbBHh}}Fj}Ab}{{{f{{Bb{BCn}}}}{Cf{Fj}}}{{A`{BCbn}}}}0{{{f{{Bb{BCn}}}}{Cf{Fj}}}{{A`{{G`{Ef}}n}}}}{{{f{c}}}e{}{}}00{c{{A`{e}}}{}{}}00000{{{f{c}}}AAd{}}00<<<{{{f{{Bb{AAf}}}}}{{A`{AAfn}}}}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AAf{f{{Bb{{f{Bj}}}}}}{f{{Bb{{f{Bj}}}}}}{Cf{{f{Bj}}}}{f{AAf}}}AAf}{{BEbc}{{A`{AAfn}}}{{Dj{BHj{f{Db{BHn{BHl}}}}{f{Db{BHn{BI`}}}}}{{Ad{{A`{bn}}}}}}}}{{{f{BIb}}{f{{Bb{In}}}}dd}AAf}{{{f{BIb}}{f{AAf}}{f{Ab}}{f{Ab}}BId}{{A`{AAfn}}}}{{{f{Bj}}{f{Bj}}}Eh}{{{f{BEn}}Fj}{{Gj{BEnBEn}}}}{{{f{BIf}}{f{{Bb{A@`}}}}Lf}AAf}0{{{f{BIf}}{f{{Bb{A@`}}}}}AAf}0{{{f{BIh}}{Cf{{G`{{f{Bj}}}}}}{Cf{{f{Bj}}}}d}{{A`{AAfn}}}}{{BEbd}BEb}{{{BIj{c}}{Cf{{Mf{BIl}}}}}{{BIj{c}}}BIn}{{{f{Ab}}}{{A`{Abn}}}}{BJ`BJ`}{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJ`BJ`}}{{{f{BFb}}Gf{Cf{{f{AM`}}}}}{{A`{Gfn}}}}0{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}1{{BJfc}BEb{{I`{{Bb{BJ`}}}}}}5`{{BJ`{f{Bj}}}BJ`}{{}BJ`}{{BJ`d}BJ`}{c{{A`{BJ`n}}}{{I`{{Bb{BJ`}}}}}}{{{f{{Mf{ce}}}}}{{f{e}}}{}BJh}{{BJjd}BJj}`{{{f{BJl}}}d}00`{{BJ`c}BJ`{{B@`{BJ`}}}}{{{Mf{BJl}}BJn}{{A`{BEbn}}}}65{{BJ`cd}BJ`{{B@`{BJ`}}}}{{{f{DbABl}}}b}{{{f{DbABn}}}b}{{{f{DbABl}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{DbABn}}{Cf{c}}}b{}}{{{f{DbABl}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABn}}c}b{}}{{{f{{AH`{}{{AGn{c}}}}}}g}{{AH`{}{{AGn{c}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{c}}}}}}Dl}}{{BJfc{Mf{BCb}}}BEb{{Dj{AAf}{{Ad{{A`{AAfn}}}}}}IdIf}}{{BJ`c{BKb{{Mf{BK`}}}}}BJ`{{Dj{Ab}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIf}}{{BJ`BJ`c{BKb{{Mf{BK`}}}}}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIf}}{{{f{BJ`}}{f{Dbc}}f}{{A`{BKdn}}}{{Af{{f{BJ`}}f}{{Ad{{A`{BKdn}}}}}}}}{{{f{AHb}}{f{Dj}}}AHb}{{{f{AHb}}{f{Dj}}}{{l{c}}}Dh}{{BJ`c{f{{Bb{BJ`}}}}{BKb{{Mf{BK`}}}}}BJ`{{Dj{{f{Db{Bb{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIf}}{{BJ`BKf{f{{Bb{BJ`}}}}dd}BJ`}{{ce{BKb{{Mf{BK`}}}}d}BJ`{{Dj{{f{Db{Bb{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIf}{{I`{{Bb{BJ`}}}}}}{{{f{{AH`{}{{AGn{c}}}}}}i{f{Db{Bb{g}}}}}b{}{}{}{{Dj{{Cf{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AH`{}{{AGn{c}}}}}}g}{{AH`{}{{AGn{c}}}}}{}{}{{Dj{e}{{Ad{c}}}}Dl}}{{BJ`BJ`GfEf}BJ`}{BEn{{Mf{Cj}}}}{{{f{BKh}}}{{Cf{Fj}}}}{BKjBJ`}{BKlBJ`}{BJ`BJ`}3210{{{f{AHd}}Ej}{{l{El}}}}{{BJ`Ej}BJ`}{{{f{BKn}}Ej}{{l{El}}}}{{cF`}BJ`{{I`{{Bb{BJ`}}}}}}{{{f{AHd}}{f{{Bb{Ab}}}}{f{F`}}}{{A`{{l{El}}n}}}}{{{f{AHf}}}{{A`{{l{El}}n}}}}6{{{f{BKn}}}{{A`{{l{El}}n}}}}{cBJ`{{B@`{BJ`}}}}{{{f{BL`}}}{{f{{Bb{Ob}}}}}}``{BJ`BKj}{eAMh{}{{Hf{}{{Ch{c}}}}}}{cBEn{{Hf{}{{Ch{b}}}}}}{cBEn{{Hf{}{{Ch{{Cf{b}}}}}}}}2{{AFne}AMj{}{{Hf{}{{Ch{c}}}}}}0{{AFnc}BEn{{Hf{}{{Ch{{Cf{b}}}}}}}}{{AFnc}BEn{{Hf{}{{Ch{b}}}}}}`{{{f{Db{BLb{c}}}}}{{A`{BCln}}}BLd}{{{f{BJl}}}{{f{AG`}}}}{{{f{BKn}}}{{f{AG`}}}}{{{f{BLf}}}{{f{AG`}}}}{{{f{BEn}}}{{f{AG`}}}}{{{f{DbBKn}}}{{f{DbAG`}}}}{{{f{DbBEn}}}{{f{DbAG`}}}}{{{f{BLh}}}{{f{{l{An}}}}}}{{{f{BLj}}{Cf{{f{Bj}}}}d}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLj}}{Cf{{f{Bj}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLj}}{Cf{{f{Bj}}}}Kfdd{Cf{{f{Eh}}}}{f{{l{Bh}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{BLj}}{Cf{{f{Bj}}}}Kfd{Cf{{f{Eh}}}}{f{{l{Bh}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{{Mf{c}}}}}BLl{BLnOn}}{{{f{BM`}}}{{f{{l{Ah}}}}}}{{{f{{Mf{ce}}}}}{}OnBJh}{{{f{{Mf{c}}}}}NnBMb}{{{f{BMd}}}{{f{BJ`}}}}{{{f{{Mf{ce}}}}}{{f{c}}}OnBJh}{{{f{AMl}}}{{f{Ef}}}}{{{f{BMf}}}{{f{Ab}}}}{{{f{DbBKn}}}{{A`{Fjn}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{{f{{Bb{c}}}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{BMh}}}{{f{{l{Bh}}}}}}{{{G`{BJ`}}}BJ`}{{{f{BLj}}{Cf{{f{Bj}}}}d}{{A`{{Kb{LbKd}}n}}}}{{{Mf{{Bb{{BMj{c}}}}e}}}{{Mf{{Bb{c}}e}}}{}BJh}{{{Mf{{BMj{c}}e}}}{{Mf{ce}}}{}BJh}{{{f{Bj}}}BJ`}{{BJ`{Cf{In}}}BJ`}{{{f{BMl}}}{{A`{{l{Bh}}n}}}}{{{f{BMl}}}{{l{Bh}}}}{{{f{{Kb{KhKd}}}}{f{Kf}}{f{AM`}}}{{Kb{KnKd}}}}`{{{BIj{{Cl{BIn}}}}{Cf{{Mf{BCb}}}}}{{A`{BMnn}}}}{{{BN`{c}}{f{BCb}}}{{A`{{BNb{c}}n}}}BNd}{{{BNf{c}}{f{BCb}}}{{A`{{BNh{c}}n}}}BNd}{{{BNj{c}}Fj}{{A`{BNln}}}BIn}{{{BNn{c}}{f{BCb}}}{{A`{{BO`{c}}n}}}BNd}{{{f{Db{BIj{c}}}}}{{A`{BObn}}}BIn}`{BJ`BOd}{{BJ`BOfBJ`}BJ`}{{{f{BKn}}{f{Ab}}}{{A`{Abn}}}}00{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Mf{ce}}}}}{{f{c}}}OnBJh}111111111111111{{{f{Dbc}}}{{f{Dbe}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BEbIncF`}{{A`{BEbn}}}{{I`{{Bb{BJ`}}}}}}{BEn{{Cl{Cj}}}}``{BEbBEb}```{{{f{BOh}}{f{Bj}}}{{A`{Ehn}}}}{{BOj{G`{BJ`}}}{{A`{BJ`n}}}}{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{{f{BLf}}{f{Db{Bb{Ab}}}}}{{A`{{Cf{Ab}}n}}}}{{{f{BOl}}AbAb}{{A`{Abn}}}}{{BOj{G`{BJ`}}}BJ`}{{{f{BOn}}}b}{{BJ`Ef}BJ`}{{{f{BKn}}{f{Ef}}Fd}{{A`{Abn}}}}{{BEb{C@`{{f{Bj}}EfA@d}}d}BEb}{{{f{AHh}}{f{Ef}}}{{A`{Abn}}}}3{{{f{ANn}}{f{Ef}}}{{A`{Abn}}}}{{BEbEfd}BEb}2{{{f{AHh}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{ANn}}{f{Ef}}Fd}{{A`{Abn}}}}{{BJ`EfFd}BJ`}`{BJ`C@b}{{{f{{Mf{c}}}}}{{Cf{{f{ALb}}}}}{ALbOn}}{BJ`BJ`}{{{f{C@d}}}{{A`{Abn}}}}1`{{{f{C@f}}}{{A`{{l{Jn}}n}}}}{{{f{BEn}}Fj}d}{{{BNj{c}}{f{BCl}}}{{A`{{BNj{c}}n}}}BIn}{{{f{C@h}}{f{Ab}}}{{A`{Abn}}}}{{{f{BKn}}{f{Ab}}}{{A`{Abn}}}}{{{f{C@h}}c}{{A`{Abn}}}Bf}{{{f{BKn}}}{{Fn{{Fh{{Cl{Cj}}}}{Fl{{f{{Cl{Cj}}}}}{{Ad{Fj}}}}}}}}``{{{f{BKn}}}{{f{{G`{{Cl{Cj}}}}}}}}{{{f{DbBKn}}}{{f{Db{G`{{Cl{Cj}}}}}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BJ`BJ`BJ`}BJ`}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BJ`BJ`}BJ`}10{{{f{BOn}}}BOn}{{{f{BEb}}}BEb}{{{f{BJf}}}BJf}{{{f{BJn}}}BJn}{{{f{C@j}}}C@j}{{{f{C@l}}}C@l}{{{f{C@n}}}C@n}{{{f{CA`}}}CA`}{{{f{CAb}}}CAb}{{{f{BDb}}}BDb}{{{f{BEd}}}BEd}{{{f{CAd}}}CAd}{{{f{BFb}}}BFb}{{{f{CAf}}}CAf}{{{f{CAh}}}CAh}{{{f{CAj}}}CAj}{{{f{CAl}}}CAl}{{{f{AAh}}}AAh}{{{f{A@`}}}A@`}{{{f{CAn}}}CAn}{{{f{CB`}}}CB`}{{{f{CBb}}}CBb}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{BId}}}BId}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{BMd}}}BMd}{{{f{BJ`}}}BJ`}{{{f{CF`}}}CF`}{{{f{BOf}}}BOf}{{{f{{BKb{c}}}}}{{BKb{c}}}AD`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{BKf}}}BKf}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{CGl}}}CGl}{{{f{BOj}}}BOj}{{{f{CGn}}}CGn}{{{f{CH`}}}CH`}{{{f{CHb}}}CHb}{{{f{{Mf{ce}}}}}{{Mf{ce}}}On{BJhAD`}}{{{f{CHd}}}CHd}{{{f{CHf}}}CHf}{{{f{CHh}}}CHh}{{{f{Oj}}}Oj}{{{f{BEj}}}BEj}{{{f{BEn}}}BEn}{{{f{BCb}}}BCb}{{{f{B@d}}}B@d}{{{f{BCl}}}BCl}{{{f{Oh}}}Oh}{{{f{CHj}}}CHj}{{{f{CHl}}}CHl}{{{f{CHn}}}CHn}{{{f{BKn}}}{{Mf{BKn}}}}{{{f{c}}{f{Dbe}}}b{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{c}}}b{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CI`}}}{{Cf{{f{CIb}}}}}}{{{f{C@j}}}{{Cf{{f{CIb}}}}}}````{{{f{BFb}}{f{BFb}}}BAh}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}BAh{CIdOn}BJh}{{{f{{Bb{BJ`}}}}}BJ`}{{BJjCBn}BJj}{{{f{CBn}}{f{CCb}}}d}`{{{f{{Bb{Ab}}}}}{{A`{Abn}}}}{{{f{Bj}}}BJ`}{BEb{{A`{AAfn}}}}{c{{A`{{G`{AAf}}n}}}{{Ib{}{{Ch{BEb}}}}}}{AOle{}{{AMh{c}}AKn}}0{{AOlAFn}e{}{{AMj{c}}AKn}}0{{ADh{f{Bj}}}{{l{c}}}Dh}{{ADj{f{{l{c}}}}}{{l{c}}}Dh}10{{ADj{f{Bj}}Ef}{{l{c}}}Dh}0{BEb{{A`{BOnn}}}}{cBJ`{{BEh{Eh}}}}{{{f{CHh}}Fj}CIf}``{{{f{BIh}}{G`{{f{Bj}}}}{Cf{{f{Bj}}}}d}{{A`{AAfn}}}}`{{{f{c}}{f{e}}}BAh{}{}}0``{{{f{CEf}}}{{A`{{Mf{BCb}}n}}}}{{cCHd}{{A`{BEbn}}}{{I`{{Bb{BEb}}}}}}{{{f{BMl}}{f{{l{Bh}}}}}{{l{Bh}}}}{{ed}{{A`{BJ`n}}}{{B@`{BJ`}}AD`}{{I`{{Bb{c}}}}}}{{{f{CI`}}{G`{BEb}}}{{A`{BEbn}}}}{{{f{C@j}}{G`{BEb}}}{{A`{BEbn}}}}44{e{{A`{BJ`n}}}{{B@`{BJ`}}AD`}{{I`{{Bb{c}}}}}}{{c{f{Bj}}d}BJ`{{I`{{Bb{BJ`}}}}}}{{BKjc}BJ`{{B@`{BJ`}}}}{{{f{CIh}}{f{{Bb{B`}}}}}{{l{Al}}}}{{{f{BMl}}{f{Bj}}d}{{A`{{l{Al}}n}}}}{{BKlc}BJ`{{B@`{BJ`}}}}{{{f{BCb}}{f{Bj}}}d}{{{f{CIh}}{f{{l{An}}}}}{{l{Al}}}}{{{f{BMl}}{f{{l{Bh}}}}dd}{{A`{{l{Al}}n}}}}{{{f{BMl}}{f{Bj}}}{{A`{{l{Al}}n}}}}{{{f{Cj}}{f{AFn}}}{{Cl{Cj}}}}{{{f{Ab}}Fj}{{A`{{l{El}}n}}}}{BEbBEb}{{{CIj{c}}}{{A`{Fjn}}}BIn}{BJ`BJ`}{{{f{BMl}}{f{Bj}}d}{{A`{{l{El}}n}}}}{{{f{BMl}}{f{{l{Bh}}}}d}{{A`{{l{El}}n}}}}{{{f{CIl}}B`{Cf{B`}}{Cf{{f{CBd}}}}B`d}{{A`{Fjn}}}}{{{ANh{Bj}}}Ef}{{{f{BIb}}{f{{Bb{A@`}}}}d}AAf}`{{BEbBEb{Cf{Eh}}}BEb}{{{f{CIn}}{f{AAf}}{Cf{{f{Bj}}}}{Cf{{Gj{GfFj}}}}}{{A`{AAfn}}}}{{{f{CIn}}{f{AAf}}{Cf{{Gj{GfFj}}}}d}{{A`{{Gj{AAfAAf}}n}}}}{{{f{Ab}}d}{{A`{Abn}}}}{{BJ`d}BJ`}{{BJ`ced}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIfAD`}{{I`{{Bb{BJ`}}}}}}212121{{ce}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIfAD`}{{I`{{Bb{BJ`}}}}}}32{{CJ`BJ`Fjd}BJ`}`{{{f{BEn}}}{{f{AFn}}}}{{{f{B@d}}}{{f{AFn}}}}```{{BJ`BJ`BFbCAf}BJ`}`{CFnBJ`}`{{BJ`BJ`BFbCAf{Cf{Kf}}{Cf{Eh}}}BJ`}0{ALnGf}00{{{f{CJb}}}{{l{Nh}}}}{{{f{CJd}}}{{l{Nh}}}}{{{f{C@f}}}{{A`{{l{Nh}}n}}}}`{{{f{CJf}}}{{l{Kd}}}}{{{f{BFb}}}Gf}`{{{f{BFb}}}d}```{{}b}{cbBJh}{{}BEb}{{}BJn}{{}C@l}{{}CA`}{{}CJh}{{}BDb}{{}BEd}{{}CAj}{{}CAn}{{}CB`}{{}CBb}{{}CBh}{{}CBj}{{}BId}{{}CBl}{{}CBn}{{}CCd}{{}CCf}{{}CCh}{{}CCj}{{}CCl}{{}CCn}{{}CDd}{{}CDf}{{}CDj}{{}CDl}{{}CDn}{{}CEf}{{}BJ`}{{}{{BKb{{Mf{BOl}}}}}}{{}{{BKb{{Mf{BK`}}}}}}{{}{{BKb{{Mf{CJj}}}}}}{{}CFn}{{}CG`}{{}CGd}{{}CGf}{{}CGh}{{}CGj}{{}CGn}{{}CHb}{{}{{Mf{{Bb{c}}}}}{}}{{}{{Mf{Bj}}}}{{}{{Mf{CJl}}}}{{}{{Mf{c}}}CJn}{{}CHd}{{}CHf}{{}Oj}{{}BEj}{{}BCb}{{}B@d}{{}BCl}{{}Oh}`{{}{{AAb{{G`{AAh}}{G`{A@`}}}}}}{Fj{{f{c}}}{}}00{{{f{{ALj{c}}}}}f{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BKb{c}}}}}f{}}222222222222222222222{{{f{{Mf{ce}}}}}{{f{c}}}OnBJh}333333333333333{Fj{{f{Dbc}}}{}}00{{{f{Db{ALj{c}}}}}{{f{Db}}}{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CEf}}}{{A`{Ehn}}}}{{{f{BEb}}}{{A`{Ehn}}}}0001{{{f{{Mf{c}}}}}{{f{Bj}}}{ALbOn}}{{{f{B@d}}{f{CK`}}}{{A`{CKbn}}}}```{{{f{Ab}}GfCKd}{{A`{Abn}}}}{{BKlGfCKd}BJ`}{{BJ`GfCKd}BJ`}{{{f{CEf}}}{{A`{{`{BC`}}n}}}}``{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJ`BJ`}}{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{Mf{AG`c}}}{{A`{{Mf{ec}}{Mf{AG`c}}}}}BJh{AG`IdIf}}{{{Mf{AG`c}}}{{Mf{ec}}}BJh{AG`IdIf}}{{{f{{Mf{ce}}}}}{{CKf{ce}}}On{AD`BJh}}{Fjb}000000{{{f{DbBOn}}}b}11{{BEbe}BEb{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Db{Mf{ce}}}}}bOnBJh}333333333333333{BJ`BJ`}2{{BEb{Cf{{G`{BJ`}}}}}BEb}1{{{f{BKn}}}Ab}{{{f{{Kb{KhKd}}}}{f{Kf}}{f{AM`}}}{{Kb{KnKd}}}}`{BJ`CKh}{{{f{ANn}}}{{f{Ef}}}}{{{f{BKn}}}{{f{Ef}}}}`{{{f{Ef}}}BJ`}{cBJ`{{I`{{Bb{Ef}}}}}}`{CG`BJ`}``{{}CHf}{{{f{c}}}e{}{{CKl{CKj}}}}0`{{{f{CIh}}{f{{Bb{B`}}}}}{{l{Al}}}}{{{f{CIh}}{f{{l{An}}}}}{{l{Al}}}}{{BFb{f{Ef}}{f{Bj}}}{{A`{bn}}}}{{BFb{Cf{{f{Bj}}}}{f{Bj}}}{{A`{bn}}}}{{{f{c}}{f{c}}}{{A`{bn}}}CKn}{{{f{CL`}}{f{Bj}}}{{A`{bn}}}}`{{{f{CAb}}{f{CAb}}}d}{{{f{BDb}}{f{BDb}}}d}{{{f{BEd}}{f{BEd}}}d}{{{f{BFb}}{f{BFb}}}d}{{{f{CAf}}{f{CAf}}}d}{{{f{CAh}}{f{CAh}}}d}{{{f{CAj}}{f{CAj}}}d}{{{f{AAh}}{f{AAh}}}d}{{{f{CAn}}{f{CAn}}}d}{{{f{CB`}}{f{CB`}}}d}{{{f{CBb}}{f{CBb}}}d}{{{f{CBd}}{f{CBd}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{BId}}{f{BId}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{CC`}}{f{CC`}}}d}{{{f{CCb}}{f{CCb}}}d}{{{f{CCd}}{f{CCd}}}d}{{{f{CCf}}{f{CCf}}}d}{{{f{CCh}}{f{CCh}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{CDf}}{f{CDf}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{BMd}}{f{BMd}}}d}{{{f{BJ`}}{f{BJ`}}}d}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{CF`}}{f{CF`}}}d}{{{f{BOf}}{f{BOf}}}d}{{{f{{BKb{Ab}}}}{f{{BKb{Ab}}}}}d}{{{f{{BKb{{Mf{c}}}}}}{f{{BKb{{Mf{c}}}}}}}dOn}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{BKf}}{f{BKf}}}d}{{{f{CGb}}{f{CGb}}}d}{{{f{CGd}}{f{CGd}}}d}{{{f{CGf}}{f{CGf}}}d}{{{f{CGh}}{f{CGh}}}d}{{{f{CGj}}{f{CGj}}}d}{{{f{CGl}}{f{CGl}}}d}{{{f{CH`}}{f{CH`}}}d}{{{f{CHb}}{f{CHb}}}d}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{CLbOn}BJh}{{{f{{Mf{CLd}}}}{f{CLd}}}d}{{{f{{Mf{Cj}}}}{f{Cj}}}d}{{{f{CHd}}{f{CHd}}}d}{{{f{CKb}}{f{CKb}}}d}{{{f{CHf}}{f{CHf}}}d}{{{f{Oj}}{f{Oj}}}d}{{{f{BEj}}{f{BEj}}}d}{{{f{BEn}}{f{{f{Cj}}}}}d}{{{f{BEn}}{f{BEn}}}d}{{{f{BCb}}{f{BCb}}}d}{{{f{B@d}}{f{B@d}}}d}{{{f{BCl}}{f{BCl}}}d}{{{f{Oh}}{f{Oh}}}d}{{{f{CHn}}{f{CHn}}}d}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CLfBJ`d}BJ`}``{{BJ`c}BJ`{{BEh{Eh}}}}{{BJ`c}BJ`{{I`{{Bb{Ef}}}}}}{{{f{Dbc}}e}{{A`{{f{Dbg}}BBf}}}{}CLh{}}{{{f{{Bb{CIl}}}}d{Cf{{f{CIb}}}}}{{A`{{Mf{{Bb{CIl}}}}n}}}}{{{f{{Bb{CIl}}}}d{Cf{{f{CIb}}}}d}{{A`{{Gj{{Mf{{Bb{CIl}}}}Fj}}n}}}}{{{f{{Bb{c}}}}{f{{Bb{c}}}}}d{{I`{CLj}}}}{{{f{BEb}}d}{{A`{Ehn}}}}{{BEbe}BEb{{B@`{BJ`}}AD`}{{I`{{Bb{c}}}}}}{{{f{AHn}}}{{A`{Abn}}}}{BJ`BJ`}{{{f{AHn}}}{{A`{{Gj{Ab{Gh{Gf}}}}n}}}}`{{BJ`BJ`BJ`}BJ`}{{{f{BMl}}{f{{l{Bh}}}}Fj}{{A`{{l{Bh}}n}}}}{A@`{{Gj{InIn}}}}{{{f{BMl}}{f{Bj}}}{{A`{{l{Ah}}n}}}}{{{f{BMl}}{f{{l{Bh}}}}}{{A`{{l{Ah}}n}}}}{{{f{BMl}}{f{Bj}}{f{Ef}}}{{A`{Abn}}}}{{{f{ABl}}}d}``{{{f{BOn}}}{{Cf{{A`{AAfn}}}}}}{{BEbFj}{{A`{AAfn}}}}{{{f{BOn}}}{{A`{AAfn}}}}{{{f{ABl}}}{{f{Ob}}}}{{{f{BKn}}}{{Dn{Ob}}}}{{CLlGf}BJ`}{{CLl{f{Bj}}}BJ`}{{CLl{f{{Bb{c}}}}}BJ`{{I`{Bj}}}}{{{f{BEn}}}{{f{{Bb{B@d}}}}}}```{{BEbc}BEb{{B@`{BJ`}}}}{{BJ`c}BJ`{{B@`{BJ`}}}}`10{{BJ`AHj}BJ`}{{{f{AI`}}c}{{A`{AI`n}}}{}}{{{f{AIb}}{f{{l{Al}}}}}{{A`{{l{c}}n}}}Dh}{{{f{BKn}}{f{{l{Al}}}}}{{A`{Abn}}}}{{BEbBJ`}BEb}5{{BClc}BCl{{Dj{Fj{f{B@d}}}{{Ad{d}}}}}}{{{f{BMl}}{f{Bj}}d}{{A`{{l{El}}n}}}}{{{f{BMl}}{f{{l{Bh}}}}dd}{{A`{{l{El}}n}}}}{{{f{BMl}}{f{Bj}}}{{A`{{l{El}}n}}}}{CLn{{A`{AAfn}}}}{{{f{DbCM`}}{f{DbAAf}}}{{A`{bn}}}}{ABn{{l{c}}}Dh}{{ANl{f{{l{El}}}}{f{{l{El}}}}}{{A`{{l{El}}n}}}}{BJjBEb}{CI`{{A`{BEbn}}}}{{{BIj{c}}}{{A`{AAfn}}}BIn}{C@j{{A`{BEbn}}}}{C@n{{A`{BEbn}}}}{{{f{Db{BN`{c}}}}{f{DbAAf}}}{{A`{bn}}}BNd}{{{CMb{c}}}{{A`{AAfn}}}BIn}{{{BLb{c}}}{{A`{AAfn}}}BLd}{{{f{Db{CMd{c}}}}{f{DbAAf}}}{{A`{bn}}}BNd}{{{f{Db{BNf{c}}}}{f{DbAAf}}}{{A`{bn}}}BNd}{{{f{Db{CMf{c}}}}{f{DbAAf}}}{{A`{bn}}}BNd}{{{CMh{c}}}{{A`{AAfn}}}BIn}{{{CIj{c}}}{{A`{AAfn}}}BIn}{{{BNj{c}}}{{A`{AAfn}}}BIn}{{{BNn{c}}{f{DbAAf}}}{{A`{Jhn}}}BNd}{{{f{DbABl}}}{{l{Ah}}}}><;{{{CMb{c}}{Cf{{Mf{BIl}}}}d}{{A`{AAfn}}}BIn}{{{f{BNl}}Fj}d}{{}BJ`}{BEbBEb}{BKlBJ`}{BJ`BJ`}`0```{{}{{BKb{{Mf{BK`}}}}}}{{{f{C@d}}}{{A`{Abn}}}}2{{BJ`BJ`}BJ`}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Db{Mf{AFd}}}}}{{A`{bBBf}}}}{{{f{BLf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BOl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BOh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CAb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BDb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BEd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CAd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BFb}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CAf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CAh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CAj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{AAh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{A@`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BJl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CAn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CB`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CMj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BId}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CC`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CCb}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CCd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CCf}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CCh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CCj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CCl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CCn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CD`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CE`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CEb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CEd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BJ`}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CF`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BOf}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{{BKb{c}}}}{f{DbH`}}}{{A`{bHb}}}{}}{{{f{CFb}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CFd}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CFf}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CFh}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CFj}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CFl}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{BKf}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CFn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CG`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BOj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CH`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{{Mf{ce}}}}{f{DbH`}}}{{A`{bHb}}}{AGbOn}BJh}{{{f{{Mf{ce}}}}{f{DbH`}}}{{A`{bHb}}}OnBJh}{{{f{{Mf{ce}}}}{f{DbH`}}}{{A`{bHb}}}{BC`On}BJh}{{{f{CHd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CKb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Oj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BEj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BEn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BCb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{B@d}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BCl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Oh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Bj}}BFh}Eh}```{{BJ`ce}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIfAD`}{{I`{{Bb{BJ`}}}}}}{{BJjd}BJj}``{{{f{Bj}}c}{{A`{BJ`n}}}{{I`{{Bb{BJ`}}}}}}{{BJ`{Cf{In}}}BJ`}{cc{}}00000000{CEfBEb}{BJfBEb}22222222222222222222222222222222{InAAh}333333333{{{f{Bj}}}CBd}444{CCbBId}55555555555555555555555555555{M`BJ`}{NjBJ`}{NfBJ`}{MnBJ`}{BMdBJ`}{JfBJ`}{JhBJ`}{NnBJ`}{dBJ`}{GfBJ`}{{{f{Bj}}}BJ`}{cc{}}{InBJ`}{B`BJ`}22{BKf{{BKb{{Mf{BLf}}}}}}{CFd{{BKb{{Mf{BLf}}}}}}{CFb{{BKb{{Mf{BLf}}}}}}{CFf{{BKb{{Mf{BLf}}}}}}{CMl{{BKb{{Mf{BLf}}}}}}{CMn{{BKb{{Mf{BLf}}}}}}8{CFj{{BKb{{Mf{BLf}}}}}}{CN`{{BKb{{Mf{BLf}}}}}}{CNb{{BKb{{Mf{BLf}}}}}}{CFl{{BKb{{Mf{BLf}}}}}}<<<<<<{CFdBKf}{CN`BKf}{CFjBKf}?{CFbBKf}{cc{}}00000{CGjCGh}111111{{{f{CJl}}}{{Mf{CJl}}}}2{{{Mf{Bj}}}{{Mf{{Bb{B`}}}}}}{{{Cl{ce}}}{{Mf{ce}}}OnBJh}{{{G`{ce}}}{{Mf{{Bb{c}}e}}}{}{BJhAD`}}{CNdc{}}{Eh{{Mf{Bj}}}}{CNf{{Mf{CNh}}}}{{{Dn{c}}}{{Mf{c}}}{CNjOn}}{{{f{{Bb{c}}}}}{{Mf{{Bb{c}}}}}AD`}{{{f{Bj}}}{{Mf{Bj}}}}{CNl{{Mf{CJl}}}}{{{f{CLj}}}{{Mf{CLj}}}}{{{A@j{c}}}{{Mf{{Bb{c}}}}}{}}{{{f{CNh}}}{{Mf{CNh}}}}{CIl{{Mf{CLj}}}}{c{{Mf{c}}}{}}{cc{}}0{CNnCKb}11111{CO`BEn}{CObBEn}3{{{f{BCn}}}BCb}{{{Mf{BCl}}}BCb}{{{f{{Mf{BCl}}}}}BCb}6{{{f{{Bb{Ab}}}}}BCb}{{{f{BCl}}}BCb}{BClBCb}9{{{G`{B@d}}}BCl}:::::{{c{Cf{Hl}}}COd{}}{{{COf{Gf}}{COf{B`}}{Cf{Hl}}}COh}{{{COf{Gf}}{COf{B`}}{Cf{Hl}}}COj}{g{{A`{ic}}}{}{}{{Hh{c}{{Ch{e}}}}}{}}00{c{{ALj{{l{e}}}}}{{Hf{}{{Ch{}}}}}Aj}{c{{ALj{{l{Al}}}}}{{Hf{}{{Ch{d}}}}}}{e{{Mf{{Bb{c}}}}}{}{{Hf{}{{Ch{c}}}}}}{eBCb{{B@`{Ob}}}{{Hf{}{{Ch{c}}}}}}{{gFj}{{COl{Gf}}}I`{{Hf{}{{Ch{{Cf{c}}}}}}}{{Hf{}{{Ch{{Cf{e}}}}}}}}0{e{{COl{Gf}}}{{Hf{}{{Ch{{Cf{d}}}}}}}{{Hf{}{{Ch{{Cf{c}}}}}}}}{{{f{Bj}}e}ADd{}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{gAFn}{{COl{Gf}}}BGn{{Hf{}{{Ch{{Cf{c}}}}}}}{{Hf{}{{Ch{{Cf{e}}}}}}}}673{{{f{Bj}}e}ADd{}{{Cn{}{{Ch{c}}}}}}{c{{ALj{{l{e}}}}}{{Ib{}{{Ch{}}}}}Aj}{e{{Mf{{Bb{c}}}}}Id{{Ib{}{{Ch{c}}}}}}`{c{{A`{{CIj{AFd}}n}}}{{B@`{CIl}}}}{{}{{Mf{c}}}On}{c{{Mf{ec}}}BJhOn}{{{f{Bj}}{f{{Bb{c}}}}}ADd{}}{{{f{Bj}}{f{{Bb{{Cf{c}}}}}}}ADd{}}{{{f{Bj}}}{{A`{COn}}}}{c{{ALj{{l{e}}}}}{{Ij{}{{Ch{}}}}}Aj}{c{{ALj{{l{Al}}}}}{{Ij{}{{Ch{d}}}}}}{Ef{{BKb{{Mf{BK`}}}}}}{{{f{Bj}}c}D@`{}}{{{G`{c}}AFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{G`{c}}AFn}{{AKn{}{{AMn{e}}{AN`{c}}{ANb{g}}}}}{ANd{ANf{e}}}AD`{{Gd{}{{Ch{e}}}}IjIdIf}}`{{{f{Bj}}cFj}AId{}}{{FjcAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{}CHf}{{BEbBEbcc}BEb{{B@`{BJ`}}}}{{{f{D@b}}{f{AAf}}ee}{{A`{AAfn}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{Bj}}Fj}AIf}{{FjAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{FjAFn}BEn}``{{BJ`c{BKb{{Mf{BK`}}}}D@d}BJ`{{Dj{Ab}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIf}}`{{BJ`c}BJ`{{B@`{BJ`}}}}{{BJ`FjFj}BJ`}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{D@fOn}BJh}{{{f{BKn}}Fj}{{A`{Iln}}}}{{BKjBJ`d}BJ`}{{BKlBJ`d}BJ`}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fj}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}6{{{f{BCb}}{f{Bj}}}{{Cf{{f{Ef}}}}}}{{{f{AIh}}Fj}{{A`{Iln}}}}{{{f{ANn}}Fj}{{A`{Iln}}}}{{{f{AIh}}Fj}Il}{{{f{ANn}}Fj}Il}{{{f{BCb}}Fj}{{Cf{{Gj{{f{{BA`{B@n}}}}{f{Ef}}}}}}}}{{{f{DbBCb}}Fj}{{Cf{{Gj{{f{Db{BA`{B@n}}}}{f{DbEf}}}}}}}}{C@bBJ`}{{{f{BEb}}}CGn}{{{f{CH`}}}Ef}{{}Ef}{{{f{CAl}}GfCAf{Cf{{f{AM`}}}}}{{A`{CAdn}}}}00{{{f{CJj}}{f{BCb}}D@h{f{Ob}}{f{Ob}}}{{Cf{Ob}}}}{{{f{BK`}}{f{BCb}}D@h{f{{Bb{Ob}}}}}{{A`{Obn}}}}{{{f{BCb}}{f{Bj}}}{{Cf{Ob}}}}{{{f{AFn}}}{{f{{Bb{B@d}}}}}}{{{f{BL`}}}Fj}{{{f{BCb}}{f{Bj}}}{{Cf{{Gj{Fj{f{{BA`{B@n}}}}{f{Ef}}}}}}}}{{{f{{Bb{B`}}}}}{{Cf{Fj}}}}{{{f{Db{BNj{c}}}}}{{A`{{f{{Mf{CHh}}}}n}}}BIn}{{{f{BKn}}}{{Cf{{Mj{Mh}}}}}}{{{f{Db{Mf{ce}}}}}{{Cf{{f{Dbc}}}}}OnBJh}{{{f{Db{Mf{ce}}}}}{{f{Dbc}}}OnBJh}{{{f{D@j}}}{{G`{{f{Bj}}}}}}{{{f{BCb}}}{{G`{{f{Bj}}}}}}{{{f{BCl}}}{{G`{{f{Bj}}}}}}{{{f{{CKn{}{{D@l{c}}}}}}}{{G`{{Gj{{f{Bj}}c}}}}}{AGbCLb}}{{{f{BCb}}}{{G`{{Gj{{f{Bj}}}}}}}}{{{f{BCl}}}{{G`{{Gj{{f{Bj}}}}}}}}{{{f{BKn}}Fj}{{Cf{{f{Jb}}}}}}{{{f{BKn}}FjFj}{{Cf{{f{Jb}}}}}}{{{f{BLf}}}{{Cf{{BKb{{Mf{BK`}}}}}}}}{{{f{CAl}}CAdCAfKf{Cf{{f{AM`}}}}CAj}{{A`{D@nn}}}}{{{f{CAn}}}{{Mf{CB`}}}}{{{f{Dbc}}}{{A`{DA`n}}}{BLdBInOn}}{{{f{CMj}}{f{BCb}}}{{A`{{Mf{BCb}}n}}}}{{cFj}{{G`{{Gj{FjFj}}}}}{{Cn{}{{Ch{Fj}}}}}}{{{f{BAb}}Fj}Il}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fj}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{BKn}}Fj}Il}{{{f{CI`}}}d}{{{f{C@j}}}d}`{{BEbe}BJf{{B@`{BJ`}}AD`}{{I`{{Bb{c}}}}}}{{{f{DAb}}{G`{Ab}}{f{BDb}}}{{A`{{Gj{Ab{G`{Ab}}Bn}}n}}}}{{BEbBJ`cBDb}BJf{{I`{{Bb{BJ`}}}}}}2{{BFbBFb{f{{Bb{Gf}}}}CAfKf{Cf{AM`}}}{{A`{{G`{{A@j{In}}}}n}}}}{{CAl{f{{Bb{Gf}}}}CAfKf{f{{Cf{Eh}}}}ddCAj}{{Gj{{G`{{A@j{In}}}}{G`{Gf}}{G`{Gf}}}}}}{{{f{BGd}}dd}{{A`{Bnn}}}}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{D@fOn}BJh}21`{{{f{BKn}}}d}{{{f{BDb}}{f{Dbc}}}bADf}{{{f{BEd}}{f{Dbc}}}bADf}{{{f{BFb}}{f{Dbc}}}bADf}{{{f{CAf}}{f{Dbc}}}bADf}{{{f{CAh}}{f{Dbc}}}bADf}{{{f{CAj}}{f{Dbc}}}bADf}{{{f{CAn}}{f{Dbc}}}bADf}{{{f{CB`}}{f{Dbc}}}bADf}{{{f{CBb}}{f{Dbc}}}bADf}{{{f{CBd}}{f{Dbc}}}bADf}{{{f{CBf}}{f{Dbc}}}bADf}{{{f{CBh}}{f{Dbc}}}bADf}{{{f{CBj}}{f{Dbc}}}bADf}{{{f{BId}}{f{Dbc}}}bADf}{{{f{CBl}}{f{Dbc}}}bADf}{{{f{CBn}}{f{Dbc}}}bADf}{{{f{CC`}}{f{Dbc}}}bADf}{{{f{CCb}}{f{Dbc}}}bADf}{{{f{CCd}}{f{Dbc}}}bADf}{{{f{CCf}}{f{Dbc}}}bADf}{{{f{CCh}}{f{Dbc}}}bADf}{{{f{CCj}}{f{Dbc}}}bADf}{{{f{CCl}}{f{Dbc}}}bADf}{{{f{CCn}}{f{Dbc}}}bADf}{{{f{CD`}}{f{Dbc}}}bADf}{{{f{CDb}}{f{Dbc}}}bADf}{{{f{CDd}}{f{Dbc}}}bADf}{{{f{CDf}}{f{Dbc}}}bADf}{{{f{CDh}}{f{Dbc}}}bADf}{{{f{CDj}}{f{Dbc}}}bADf}{{{f{CDl}}{f{Dbc}}}bADf}{{{f{CDn}}{f{Dbc}}}bADf}{{{f{CE`}}{f{Dbc}}}bADf}{{{f{CEb}}{f{Dbc}}}bADf}{{{f{CEd}}{f{Dbc}}}bADf}{{{f{BMd}}{f{Dbc}}}bADf}{{{f{BJ`}}{f{Dbc}}}bADf}{{{f{CF`}}{f{Dbc}}}bADf}{{{f{BOf}}{f{Dbc}}}bADf}{{{f{CFb}}{f{Dbc}}}bADf}{{{f{CFd}}{f{Dbc}}}bADf}{{{f{CFf}}{f{Dbc}}}bADf}{{{f{CFh}}{f{Dbc}}}bADf}{{{f{CFj}}{f{Dbc}}}bADf}{{{f{CFl}}{f{Dbc}}}bADf}{{{f{BKf}}{f{Dbc}}}bADf}{{{f{CGb}}{f{Dbc}}}bADf}{{{f{CGd}}{f{Dbc}}}bADf}{{{f{CGf}}{f{Dbc}}}bADf}{{{f{CGh}}{f{Dbc}}}bADf}{{{f{CGj}}{f{Dbc}}}bADf}{{{f{CGl}}{f{Dbc}}}bADf}{{{f{CH`}}{f{Dbc}}}bADf}{{{f{CHb}}{f{Dbc}}}bADf}{{{f{{Mf{ce}}}}{f{Dbg}}}b{DAdOn}BJhADf}{{{f{CHd}}{f{Dbc}}}bADf}{{{f{CHf}}{f{Dbc}}}bADf}{{{f{BEj}}{f{Dbc}}}bADf}{{{f{BCb}}{f{Dbc}}}bADf}{{{f{B@d}}{f{Dbc}}}bADf}{{{f{Oh}}{f{Dbc}}}bADf}{{{f{CHn}}{f{Dbc}}}bADf}{{{f{DAf}}{f{Ab}}CCfd}{{A`{{Gj{{Gj{{G`{In}}{G`{In}}}}d}}n}}}}{{{f{DAf}}{f{Ab}}CCfd}{{A`{{Gj{{ALf{In}}{ALf{In}}}}n}}}}{{BJf{Cf{Fj}}}BEb}{{BKlBJ`}BJ`}{{BJ`{Cf{Fj}}}BJ`}{{{f{BMl}}}{{A`{{l{Bh}}n}}}}{{{f{BMl}}}{{l{Bh}}}}``{{{f{{Bb{{f{{l{Bh}}}}}}}}{f{Bj}}d}{{A`{{l{Bh}}n}}}}{{{f{DAh}}}{{l{Nh}}}}{{{f{CJd}}}{{l{Nh}}}}{{{f{C@f}}}{{A`{{l{Nh}}n}}}}`{{{f{CJf}}}{{l{Kd}}}}`{{BJjCCb}BJj}`{{{f{AAh}}}In}`{{{f{{Kb{KhKd}}}}{f{{l{Bh}}}}CHn{Fl{Gf}{{Ad{ALn}}}}{Fl{ALn}{{Ad{Gf}}}}{f{AM`}}{f{AM`}}}{{A`{{l{Kd}}n}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{Bj}}}}{Fl{Gf}{{Ad{ALn}}}}{Fl{ALn}{{Ad{Gf}}}}{f{AM`}}{f{AM`}}}{{A`{{l{Kd}}n}}}}{BJ`BJ`}{{{f{ALn}}}d}{{{BN`{c}}d}{{BN`{c}}}BNd}````0`{{}b}{cb{AD`BJh}}`{cBJ`{{I`{{Bb{Gf}}}}}}``{{{f{D@j}}{f{Bj}}}{{Cf{Fj}}}}{{{f{BCb}}{f{Bj}}}{{Cf{Fj}}}}{{{f{BCl}}{f{Bj}}}{{Cf{Fj}}}}{{{f{{Bb{In}}}}}{{`{{Cn{}{{Ch{Fj}}}}}}}}{{{f{DA`}}B`{Cf{Fj}}d{Cf{{f{BCb}}}}FjFj{Cf{{f{CBd}}}}{Cf{B`}}B`{Cf{{f{CBf}}}}dd{f{Db{Cf{Fj}}}}d}{{A`{{Gj{BCbFjFj}}n}}}}{{{CMh{c}}{Cf{{DAj{Fj}}}}}{{CMh{c}}}BIn}{{{CIj{c}}{Cf{{DAj{Fj}}}}}{{CIj{c}}}BIn}``{{}Fj}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{DbABl}}}{{Cl{Cj}}}}{{BEbBEbcc}BEb{{B@`{BJ`}}}}{{{f{D@b}}{f{AAf}}ee}{{A`{AAfn}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{DbA@`}}}{{f{DbJh}}}}`{{{f{DbBCb}}Fj{BA`{B@n}}Ef}{{A`{{Cf{Ef}}n}}}}{{BJ`BJ`GfEf}BJ`}{{BJ`BJ`BJ`}BJ`}``{{{f{Ab}}CDb}Ab}{{BJ`CDb}BJ`}`{{{f{Ab}}{f{Ab}}d}{{A`{Abn}}}}{{BJ`BJ`}BJ`}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BEn{{Gj{{G`{B@d}}{G`{{Cl{Cj}}}}{Cf{Hl}}}}}}{{{ALj{c}}}c{}}{{{Mf{ce}}}{{Cf{c}}}{}BJh}33{{{f{BJ`}}}}{{{f{BEn}}}}{BCb}{DAlBKl}{BKlBKl}{{{Mf{ce}}}{}OnBJh}{{{Mf{ce}}}{{Gj{e}}}OnBJh}{{CAnc}{{BIj{c}}}BIn}{{BAdEf}{{A`{Lnn}}}}{BCdAb}{{{Mf{BKn}}}Ab}{CHhDAn}{BEh{{G`{c}}}{}}{c{{G`{Eh}}}{}}{c{{G`{{BA`{B@n}}}}}{}}{{{f{CCb}}}d}{{{f{Ab}}{f{Ab}}{f{Ab}}CDf}{{A`{{l{Al}}n}}}}{{BJ`ccCDf}BJ`{{B@`{BJ`}}}}{cd{{I`{CLj}}}}{{{f{{Bb{B`}}}}}d}{{{f{BFb}}{Cf{{f{Bj}}}}}d}{{{f{CHf}}}d}{{{f{BKn}}}d}{{{f{BCb}}}d}{{{f{BCl}}}d}{{{f{BNl}}}d}{BJ`BJ`}{{{f{Ab}}}{{A`{{l{Al}}n}}}}{{{f{AIj}}}{{A`{{l{Al}}n}}}}27{{{f{BFb}}}d}{{{f{Ab}}{f{Ab}}}{{A`{{l{Al}}n}}}}{{BJ`c}BJ`{{B@`{BJ`}}}}54{{{f{AIl}}}{{A`{{l{Al}}n}}}}6{{{f{CJb}}}{{l{Al}}}}{{{f{CJd}}}{{l{Al}}}}{{{f{C@f}}}{{A`{{l{Al}}n}}}}999{{{f{BKn}}}{{l{Al}}}}::0{{{f{A@`}}}d};{{{f{AAh}}}d}`{{{f{Ab}}}d}{{{f{{Mf{AFd}}}}}d}{{}d}{{{f{CL`}}Ej}{{A`{dn}}}}{{{f{c}}}d{}}0{{{f{CCf}}{f{CCb}}}{{A`{bn}}}}4?{{{f{CJb}}}{{l{Jn}}}}{{{f{CJd}}}{{l{Jn}}}}{{{f{C@f}}}{{A`{{l{Jn}}n}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{AGf{cgAGd}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{BEn}}}{{AGf{{G`{{Cl{CLd}}}}DB`AGd}}}}{{{f{BCb}}}{{`{{Cn{}{{Ch{{Gj{{f{{BA`{B@n}}}}{f{Ef}}}}}}}}}}}}{{{f{BCb}}}{{`{L`}}}}{{{f{DbBCb}}}{{`{L`}}}}11{{BKjBJ`d}BJ`}{{BEbBEbccBId}BEb{{I`{{Bb{BJ`}}}}}}{{BKlBJ`d}BJ`}{{{f{D@b}}{f{AAf}}eeBId}{{A`{AAfn}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{DBb}}{f{AAf}}{f{Bj}}{f{Bj}}eeCCn{Cf{Il}}}{{A`{AAfn}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{BEbBJj}{{{f{DBd}}{f{Bj}}d}{{A`{{l{Bh}}n}}}}{{{f{DBd}}{f{{l{Bh}}}}d}{{A`{{l{Bh}}n}}}}{{BJjd}BJj}`{CLlBJ`}{DBfBJ`}{{{f{CHh}}}{{f{{Cf{{G`{DBh}}}}}}}}``{{}BJ`}{BEbBEb}{BKlBJ`}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{BJ`BJ`}{DBjBEb}4{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{D@fOn}BJh}`{{BEbBEbcc}BEb{{B@`{BJ`}}}}{{{f{D@b}}{f{AAf}}ee}{{A`{AAfn}}}{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{BJjc}BJj{{I`{{Bb{BJ`}}}}}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}e{}{}{}}{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}<{{{f{BKn}}}Fj};9{{{f{BEn}}}Fj}{{{f{BCb}}}Fj}{{{f{BCl}}}Fj}{{BEbIn}BEb}{{{f{BKn}}Fj}Ab}{{{f{BNl}}}d}`{BJ`BKl}{cBJ`DBl}{DBlBJ`}{BFbBJ`}{DBnBJ`}{CH`BJ`}{{BJ`c}BJ`{{B@`{BJ`}}}}0``{{C@nd}C@n}{{{CIj{c}}d}{{CIj{c}}}BIn}```{BJ`BJ`}{{{f{DBd}}}{{l{El}}}}0{{{f{DBd}}{f{{Bb{Ab}}}}}{{A`{{l{Ah}}n}}}}{{{f{DBd}}GfCKd}{{A`{{l{Ah}}n}}}}{{{f{DBd}}Gfd}{{A`{Abn}}}}{{{f{DBd}}{f{{l{Bh}}}}d}{{A`{{l{Bh}}n}}}}4{{{f{DBd}}}{{A`{Abn}}}}{{{f{DBd}}}Ab}01{{{f{DBd}}}{{A`{{l{El}}n}}}}{{{f{DBd}}}{{l{Ah}}}}{{{f{DBd}}{f{Ab}}}{{A`{{l{Ah}}n}}}}{{{f{DBd}}GfFj}{{l{Ah}}}}{{{f{DBd}}Ej}{{A`{{l{Ah}}n}}}}{{{f{DBd}}B`}Ab}7{{{f{DBd}}}{{A`{{l{Ah}}n}}}}01{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{D@fOn}BJh}21``````{{{f{AMd}}{f{AMd}}}{{A`{{Gj{AMdAMd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Db{Mf{ce}}}}}{{f{Dbc}}}{DC`On}{BJhAD`}}{{BEbcCGn{Cf{{Mf{CMj}}}}{Cf{{f{Bj}}}}}BEb{{Dj{AAf}{{Ad{{A`{AAfn}}}}}}IdIf}}{{DBfc}BJ`{{Dj{{f{Bj}}}{{Ad{{A`{Ehn}}}}}}IdIf}}{{BJ`c{BKb{{Mf{BK`}}}}}BJ`{{Dj{Ab}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIf}}{{BJ`BJ`c{BKb{{Mf{BK`}}}}}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIf}}{{BJ`{f{Dbc}}{f{Db}}}{{A`{BJ`n}}}{{Af{BJ`{f{Db}}}{{Ad{{A`{BJ`n}}}}}}}}{{{f{BL`}}{Cf{{f{Eh}}}}}{{A`{Obn}}}}{{{f{BL`}}c}{{A`{Obn}}}{{AAj{{f{Ef}}}{{Ad{Ef}}}}}}{c{{BKb{{Mf{BK`}}}}}{{Dj{{f{Ef}}}{{Ad{{A`{Efn}}}}}}IdIf}}{c{{BKb{{Mf{BK`}}}}}{{Dj{{f{{Bb{{f{Ef}}}}}}}{{Ad{{A`{Efn}}}}}}IdIf}}{{BJ`c}BJ`{{Af{BJ`}{{Ad{BJ`}}}}}}{c{{BKb{{Mf{BK`}}}}}{{Dj{{f{Ob}}}{{Ad{{A`{Obn}}}}}}IdIf}}{{DBf{Mf{Dj}}}BJ`}{c{{BKb{{Mf{BK`}}}}}{{Dj{{f{{Bb{Ob}}}}}{{Ad{{A`{Obn}}}}}}IdIf}}:{{ce{BKb{{Mf{BK`}}}}}BJ`{{Dj{{f{Db{Bb{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIf}{{I`{{Bb{BJ`}}}}}}{{BJ`c{f{{Bb{BJ`}}}}{BKb{{Mf{BK`}}}}}BJ`{{Dj{{f{Db{Bb{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIf}}{{BJ`BKf{f{{Bb{BJ`}}}}dd}BJ`}2{{{f{BL`}}}{{A`{Obn}}}}{{CAnc}CAn{{Dj{CB`}{{Ad{CB`}}}}}}1111{CH`CH`}{{{Cf{{f{{Bb{Fj}}}}}}{f{BCl}}{Cf{{f{{Bb{Ab}}}}}}{Cf{{f{DCb}}}}}AAf}{{{Cf{{f{{Bb{Eh}}}}}}{f{BCb}}{Cf{{f{{Bb{Ab}}}}}}d}{{Cf{{G`{Fj}}}}}}{{{f{Bj}}}BJ`}{BKjBJ`}{BEbBEb}{BKlBJ`}{{{f{AIn}}}{{Cf{c}}}{}}{BJ`BJ`}{{{f{DCd}}}Ln}{{{f{BKn}}}{{A`{Lnn}}}}``754{{{f{AIn}}}{{Cf{M`}}}}3{{{f{BKn}}}{{Cf{M`}}}}9876{{{f{AJ`}}}{{Cf{c}}}{}}51{{{f{DCf}}}Ln}4``{{{CMb{c}}{Cf{CIl}}}{{CMb{c}}}BIn}{{{f{DbBCb}}BCb}b}{{{f{Ef}}{f{Ef}}}{{A`{Efn}}}}{{{f{DbBCb}}{f{BCb}}}b}````{{{f{CJf}}}{{l{Kd}}}}`{{{f{C@f}}}{{A`{{l{Jn}}n}}}}1`{{{f{Bj}}}BJ`}{BKjBJ`}{BEbBEb}{BKlBJ`}{{{f{AIn}}}{{Cf{c}}}{}}{BJ`BJ`}{{{f{AIn}}}{{Cf{{Gj{cc}}}}}{}}```{{{f{DCd}}}Ln}{{{f{BKn}}}{{A`{Lnn}}}}``{{{f{DAh}}}{{l{Nh}}}}{{{f{CJd}}}{{l{Nh}}}}{{{f{C@f}}}{{A`{{l{Nh}}n}}}}`=```6{{{f{CJb}}}{{l{Nh}}}}21`{{{f{BFb}}}Gf}{{{f{BFb}}}d}{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BFbGf}BFb}{{BJ`BJ`}}{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}``{{{f{BKn}}}Fj}{{{f{CI`}}}{{Cf{Fj}}}}{{{f{C@j}}}{{Cf{Fj}}}}{{{f{C@n}}}{{Cf{Fj}}}}`````{{{BN`{c}}Fj}{{BN`{c}}}BNd}`{BKjBJ`}{BKlBJ`}{{{f{AHf}}}{{A`{Fjn}}}}{BJ`BJ`}{{{f{BKn}}}{{A`{Fjn}}}}{{{f{BKn}}}{{f{Bj}}}}{BJ`DBf}````33`{{{f{DAh}}}{{l{Jn}}}}{{{f{CJd}}}{{l{Jn}}}}{{{f{C@f}}}{{A`{{l{Jn}}n}}}}{{{f{CJf}}}{{l{Kd}}}}{{{f{BFb}}}Gf}`{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{CLbOn}BJh}{{{f{CCf}}}d}{BFb}{BJ`}{{{f{Ab}}}{{A`{Abn}}}}0{{{f{BFb}}}d}{{DChFj}{{Cf{Fj}}}}{{BJ`c}BJ`{{B@`{BJ`}}}}0{{{f{BL`}}}{{A`{Obn}}}}{{}c{}}{cCLnBLd}{cCM`BNd}2{{{f{Bj}}c}DCj{}}{c{{ALj{c}}}{}}{BEbBJj}{c{{BIj{c}}}BIn}{cC@j{{I`{CLj}}}}{cC@n{{I`{CLj}}}}{c{{BN`{c}}}BNd}{{{f{{Bb{Ob}}}}}BL`}{c{{CMb{c}}}BIn}{c{{BLb{c}}}BLd}{c{{CMd{c}}}BNd}{{}CJh}{c{{BNf{c}}}BNd}{GfBFb}{c{{CMf{c}}}BNd}{c{{CMh{c}}}BIn}{{BFbBFbBFb}CAl}{c{{CIj{c}}}BIn}{{DCl{Mf{CHh}}{Mf{BCl}}Fj{Cf{{G`{Fj}}}}{Cf{{Mf{BIl}}}}{Cf{DCb}}Fjd{Cf{{G`{Ab}}}}{Cf{{Gj{{Mf{Bj}}{Mf{Bj}}}}}}CDd}{{A`{BNln}}}}{c{{BNj{c}}}BIn}{c{{BNn{c}}}{BNdBNd}}{CCbBId}{c{{BKb{c}}}{}}{{BJ`BJ`BJ`}CFn}{{}CG`}{{{f{Bj}}{G`{Ob}}{BKb{{Mf{BK`}}}}c}BOjBLf}{c{{Mf{c}}}{}}{{AFn{G`{{Cl{Cj}}}}{Cf{Hl}}}BEn}{{}BCb}{{cAFnd}B@d{{B@`{Eh}}}}{e{{Mf{c}}}{}{{AAj{{f{{CKf{c}}}}}{{Ad{c}}}}}}{AFnBEn}{{{f{AJb}}FjFj}{{l{c}}}Dh}{{{f{BKn}}FjFj}Ab}{{{f{Bj}}}CBd}{{ce}{{Mf{ce}}}{}BJh}{{{f{BCb}}Fj{BA`{B@n}}Ef}{{A`{BCbn}}}}{{Gf{f{Bj}}}{{A`{Abn}}}}{EhCBd}{{AFnFj}BEn}{{{Mf{{Bb{CIl}}}}}C@j}{{{Mf{{Bb{CIl}}}}}C@n}{B`CBd}``{{}{{Mf{{BMj{c}}}}}{}}{c{{Mf{{BMj{e}}c}}}BJh{}}{Fj{{Mf{{Bb{{BMj{c}}}}}}}{}}{{Fjc}{{Mf{{Bb{{BMj{e}}}}c}}}BJh{}}3210{{{f{DbDCn}}}Cf}{{{f{DbD@n}}}Cf}{{{f{DbBOb}}Fj}{{A`{{Cf{{G`{AAf}}}}n}}}}{{{f{DbBMn}}Fj}{{A`{{Cf{{G`{AAf}}}}n}}}}{{{f{DbBNl}}Fj}{{A`{{Cf{{G`{AAf}}}}n}}}}{{{f{BJ`}}{f{Db{BFf{{f{BJ`}}}}}}}b}{{BJ`{f{Db{BFf{BJ`}}}}}b}{BJ`BJ`}0{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}0{GfBJ`}`{{}AAh}{{}A@`}`{{{f{BKn}}}Fj}{BEbBEb}6`````{{{f{Db{BNj{c}}}}}{{A`{Fjn}}}BIn}````{{{f{AHn}}}{{A`{{Gh{Gf}}n}}}}{{BJjc}BJj{{I`{{Bb{BJ`}}}}}}`{{BEb{f{Db{BHn{BHl}}}}{f{Db{BHn{BI`}}}}}{{A`{BHjn}}}}`{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{CJb}}}{{l{Ml}}}}{{{f{CJd}}}{{l{Ml}}}}{{{f{C@f}}}{{A`{{l{Ml}}n}}}}{{{f{C@f}}}{{A`{{l{Jn}}n}}}}{{CEjc}BJ`{{B@`{BJ`}}}}{{CEnc}BJ`{{B@`{BJ`}}}}`{{BJ`e}BJ`{{B@`{BJ`}}AD`}{{I`{{Bb{c}}}}}}{{BJ`e{Cf{{Gj{eEj}}}}CGj}BJ`{{B@`{BJ`}}AD`}{{I`{{Bb{c}}}}}}```{{{f{Bj}}}BFb}{{{f{Bj}}{f{{Bb{{f{Bj}}}}}}{f{Bj}}}{{Kb{K`Jn}}}}{{{f{Bj}}{f{{Bb{{f{Bj}}}}}}{f{Bj}}}{{Kb{LbKd}}}}{{{f{Bj}}{f{{Bb{{f{Bj}}}}}}{f{Bj}}Kf}{{Kb{KhKd}}}}``{{{f{BFb}}{f{BFb}}}{{Cf{BAh}}}}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}{{Cf{BAh}}}{D@fOn}BJh}`{{{f{CI`}}}{{f{{Bb{CIl}}}}}}{{{f{C@j}}}{{f{{Bb{CIl}}}}}}{{{f{C@n}}}{{f{{Bb{CIl}}}}}}``{{}BJ`}{c{{DD`{{Mf{c}}}}}{}}{{ce}{{DD`{{Mf{ce}}}}}{}BJh}````{{BJ`c}BJ`{{B@`{BJ`}}}}```{{DBf{f{Bj}}}BJ`}0{{{f{AAf}}{f{AAf}}d}{{A`{{Gj{{AAb{{G`{In}}{G`{A@`}}}}{AAb{{G`{AAh}}{G`{A@`}}}}}}n}}}}`{{{f{DCd}}}Ln}{BJ`BJ`}{BEb{{A`{{Gj{AAfAAf}}n}}}}```{{{f{BEn}}}BEn}{{{f{{Mf{c}}}}{f{DbDDb}}}b{ALbOn}}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}dOnBJh}{{{f{Bj}}BJ`Oh}BJ`}{{BEbBJ`Oh}BEb}{{{f{AJ`}}M`Oh}{{A`{{Cf{c}}n}}}{}}{{BJ`BJ`Oh}BJ`}{{{f{DCf}}M`Oh}{{A`{Lnn}}}}{{{f{BKn}}M`Oh}{{A`{Lnn}}}}{{{f{CJb}}}{{l{Nh}}}}{{{f{CJd}}}{{l{Nh}}}}{{{f{C@f}}}{{A`{{l{Nh}}n}}}}{{{f{Dbc}}e}{{A`{{f{Dbg}}BBf}}}{}CLh{}}````{{{f{DDd}}CDj{Cf{Jh}}}Ab}{{BJ`CDj{Cf{Jh}}}BJ`}{{{f{Db{Mf{AFd}}}}{f{Db{Bb{B`}}}}}{{A`{FjBBf}}}}{{{f{Db{Mf{AFd}}}}DDf}{{A`{bBBf}}}}{{{BNj{c}}CDd}{{BNj{c}}}BIn}{{{f{Db{Mf{AFd}}}}{f{Db{G`{B`}}}}}{{A`{FjBBf}}}}{{{f{Db{Mf{AFd}}}}{f{DbEh}}}{{A`{FjBBf}}}}{{{f{Dbc}}}{{A`{eBBf}}}{}DDh}{{{f{Db{Mf{AFd}}}}{f{Db{Bb{DDj}}}}}{{A`{FjBBf}}}}{{{f{CI`}}}d}{{{f{BKn}}}Ab}{{{f{C@j}}}d}{{{f{C@n}}}d}````{{ce}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IdIfAD`}{{I`{{Bb{BJ`}}}}}}{{{f{AJd}}}Ab}0{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJ`BJ`}}{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}{{{f{DbBCb}}{f{Bj}}}{{Cf{Ef}}}}{{{f{DbBKn}}{f{Bj}}}b}{{BEbei}BEb{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}{{I`{Bj}}}{{Hf{}{{Ch{g}}}}}}{{{f{DbBCb}}{f{Bj}}{BA`{B@n}}}{{Cf{{BA`{B@n}}}}}}{{CLl{G`{Eh}}}BJ`}{{cBJ`}BJ`{{B@`{BJ`}}}}{{{f{Ab}}{f{{l{El}}}}}{{A`{{l{Ah}}n}}}}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{BMl}}{f{Bj}}{f{Bj}}}{{A`{{l{Bh}}n}}}}{{BJ`cc}BJ`{{B@`{BJ`}}}}1{{{f{BL`}}{Cf{Ef}}}{{A`{Obn}}}}{{{f{BMl}}{f{Bj}}{f{Bj}}Fj}{{A`{{l{Bh}}n}}}}3{{{f{Ab}}{f{Ab}}{f{Ab}}{f{Ab}}{Cf{Ef}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}{Cf{Ef}}}{{A`{Abn}}}}{{BJ`cc{Cf{c}}{Cf{Ef}}}BJ`{{B@`{BJ`}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{Bj}}}}{f{{l{Bh}}}}CHn}{{A`{{Kb{KhKd}}n}}}}{{{f{DbBCb}}Fj}b}{{BJ`{f{{Bb{Gf}}}}CGl}BJ`}{{{f{CLj}}}CIl}`{{{f{AJf}}}AJf}{{{f{BKn}}}Ab}{BKjBJ`}{BEbBEb}{BKlBJ`}{BJ`BJ`}`{{BJjc}BJj{{I`{{Bb{BJ`}}}}}}{{{f{DAb}}{G`{Ab}}{f{BEd}}}{{A`{{Gj{Ab{G`{Ab}}Bn}}n}}}}{{BEbBJ`cBEd}BJf{{I`{{Bb{BJ`}}}}}}{{BJ`BEd}BJ`}{{{f{AJh}}{f{Dj}}Oj}{{A`{Abn}}}}{{BJ`{Mf{Dj}}{BKb{{Mf{BK`}}}}Oj}BJ`}{{{f{BKn}}{f{Dj}}Oj}{{A`{Abn}}}}{{BJ`Fjc}BJ`{{Af{{f{Db{l{Eb}}}}}{{Ad{{Cf{M`}}}}}}IdIfDl}}{{{f{DDl}}Oj}{{A`{Abn}}}}{{BJ`Oj}BJ`}{{{f{DDl}}{f{Ab}}CAb}{{A`{Abn}}}}{{BJ`BJ`CAb}BJ`}32102032103{{BJ`OhM`Oj}BJ`}2{{BJ`BJ`OhM`CAb}BJ`}543254325432{{{f{DDn}}{f{{l{Bh}}}}{Cf{{f{AM`}}}}}{{A`{DDnn}}}}{{{f{C@d}}In}{{A`{Abn}}}}{{BJ`In}BJ`}{{{f{CAl}}Gf{Cf{{f{AM`}}}}}{{A`{Gfn}}}}0{{{f{C@d}}Nn}{{A`{Abn}}}}{{BJ`Nn}BJ`}2````{{{f{CI`}}}{{Cf{{f{DCb}}}}}}{{{f{C@j}}}{{Cf{{f{DCb}}}}}}{{{f{C@n}}}{{Cf{{f{DCb}}}}}}``````{{{f{DBd}}{l{Ah}}}{{l{Ah}}}}{{}{{BKb{{Mf{BK`}}}}}}{{BJ`BJ`dd{Cf{Jh}}}BJ`}0`{{{f{BJl}}DE`}{{A`{AAfn}}}}{{cC@l}{{A`{BEbn}}}{{I`{CLj}}}}{{{Mf{{Bb{CIl}}}}C@l}{{A`{BEbn}}}}{{cCA`}{{A`{BEbn}}}{{I`{CLj}}}}{{{Mf{{Bb{CIl}}}}CA`}{{A`{BEbn}}}}{{DEb{f{{Bb{In}}}}e}{{A`{Abn}}}Dl{{Hf{}{{Ch{{Cf{c}}}}}}}}{{{f{AJj}}c{Cf{e}}}{{A`{AJjn}}}{{Hf{}{{Ch{In}}}}}{}}{{{f{AJj}}ci}{{A`{AJjn}}}{{Hf{}{{Ch{In}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{g}}}}}}}}{{{f{DbBEb}}}{{A`{{Mf{BCb}}n}}}}{{{f{Db{CMb{c}}}}}{{A`{{Mf{BCl}}n}}}BIn}{{{f{Db{BLb{c}}}}}{{A`{BCbn}}}BLd}{{{f{BNl}}}{{f{{Mf{BCl}}}}}}{{{f{Db{BNj{c}}}}}{{A`{{Mf{BCl}}n}}}BIn}{{{f{BJl}}{Cf{Fj}}}{{A`{{Mf{BCb}}n}}}}{{{f{CHh}}}{{f{DEd}}}}``````{{{f{DbBEb}}{f{Db{BHn{BHl}}}}{f{Db{BHn{BI`}}}}}{{A`{{Mf{BCb}}n}}}}`{{{f{DAh}}}{{l{Nh}}}}{{{f{CJd}}}{{l{Nh}}}}{{{f{C@f}}}{{A`{{l{Nh}}n}}}}`{{{f{CJf}}}{{l{Kd}}}}`{{{f{Db{Mf{AFd}}}}DEf}{{A`{JhBBf}}}}{{BEbc}BEb{{I`{{Bb{BJ`}}}}}}0````{{{f{AJj}}{f{{l{Al}}}}{Cf{c}}}{{A`{AJjn}}}{}}{{{f{BEb}}{BHn{BHl}}{BHn{BI`}}}b}{{{f{DbBCb}}{f{Bj}}Ef}{{Cf{Ef}}}}{{{f{DbBCb}}FjEf}{{Cf{Ef}}}}{{{BNj{c}}d}{{BNj{c}}}BIn}{{{BNn{c}}d}{{BNn{c}}}BNd}{{{CMb{c}}d}{{CMb{c}}}BIn}{{{BLb{c}}d}{{BLb{c}}}BLd}{{{CMh{c}}d}{{CMh{c}}}BIn}4{{CLnd}CLn}{{BJ`Lf}BJ`}{{{f{DbBEn}}{Cf{Hl}}}b}{{{f{AJl}}Gf}{{l{c}}}Dh}{{{f{BKn}}Gf}Ab}{{BKjBJ`}BJ`}{{BEbc}BEb{{B@`{BJ`}}}}{{BKlBJ`}BJ`}{{BJ`BJ`}BJ`}{{{f{AJn}}Gfc}{{l{e}}}{}Dh}{{BEbce}BEb{{B@`{BJ`}}}{{B@`{BJ`}}}}{{BJ`ce}BJ`{{B@`{BJ`}}}{{B@`{BJ`}}}}{{{f{DbBCb}}{f{Bj}}}{{Cf{Ef}}}}{{{f{DbBCb}}Fj}{{Cf{{Gj{{BA`{B@n}}Ef}}}}}}{{{f{BId}}}d}{BJ`BJ`}{{{f{DbABn}}}b}{{{f{DbBKn}}}b}{{BJ`{Cf{Jh}}}BJ`}``{{BEbcCBh}{{A`{bn}}}{{I`{CLj}}}}{{BEbcCCd}{{A`{bn}}}{{I`{CLj}}}}{{BEbcCCj}{{A`{bn}}}{{I`{CLj}}}}{{BEbcCDl}{{A`{bn}}}{{I`{CLj}}}}`````{{{f{BKn}}GfFj}Ab}{{BEbGfIn}BEb}{{BKlBJ`BJ`}BJ`}>{{{f{DbBEn}}FjFj}b}0```{{{f{AK`}}FjFj}AK`}{{{f{c}}FjFj}e{}{}}1022{{BEnFjFj}BEn}0`{{{f{AHd}}d}{{l{c}}}Dh}{{BKjEj}BJ`}{{BEbcF`}BEb{{BEh{{BA`{B@n}}}}}}{{BKlEj}BJ`}{{BJ`Ej}BJ`}{{BJ`eF`}BJ`{{B@`{BJ`}}AD`}{{I`{{Bb{c}}}}}}{{BEbcF`}{{A`{BEbn}}}{{I`{{Bb{BJ`}}}}}}{{{f{AHd}}Ej}{{l{c}}}Dh}{{{f{BKn}}Ej}{{A`{Abn}}}}{{{f{{Mf{c}}}}}{{Cf{{f{ALb}}}}}{ALbOn}}{{{f{BMl}}{f{{l{Bh}}}}}{{l{Ah}}}}{{{f{BKn}}Gf}{{Gj{AbAb}}}}{{{f{BEn}}Fj}{{Gj{{Cl{Cj}}{Cl{Cj}}}}}}0{{{f{BMl}}{f{{l{Bh}}}}Fj}{{A`{{l{j}}n}}}}0{{{f{{l{Bh}}}}{f{{l{Bh}}}}e}{{l{Ah}}}{{Cn{}{{Ch{{f{Bj}}}}}}}{{Dj{{f{Bj}}{f{Bj}}}{{Ad{c}}}}}}4{{{f{{l{Bh}}}}{f{{l{Bh}}}}Fjed}{{A`{{l{j}}n}}}{{Cn{}{{Ch{{f{Bj}}}}}}}{{Dj{{f{Bj}}{f{Bj}}}{{Ad{c}}}}}}2{BJ`BJ`}`{{{f{CIh}}{f{{Bb{B`}}}}}{{l{Al}}}}{{{f{CIh}}{f{{l{An}}}}}{{l{Al}}}}`{{BKjB`}BJ`}{{BEbB`}BEb}{{BKlB`}BJ`}{{{f{AKb}}B`}{{Cf{M`}}}}{{BJ`B`}BJ`}{{{f{BKn}}B`}{{Cf{M`}}}}{{{f{DEh}}B`}Ln}{{{f{BKn}}B`}{{A`{Lnn}}}}{{InIn}A@`}{BJ`DEj}{{{f{BMl}}{f{Ab}}}{{A`{{l{Bh}}n}}}}{{{f{{l{Bh}}}}{f{Bj}}d}{{l{Bh}}}}{{{f{BMl}}}{{l{El}}}}0{{{f{BMl}}}{{l{Bh}}}}{{{f{BMl}}{f{Ab}}{f{Ab}}}{{A`{{l{Bh}}n}}}}4````{{{f{C@f}}{f{Bj}}}{{A`{Abn}}}}`{{BJ`Ef}BJ`}`{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Bh}}}}707070{{{f{BMl}}{f{{l{Bh}}}}}{{l{Bh}}}}10{{{f{{Mf{ce}}}}}FjOnBJh}{BJ`CLl}{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJ`BJ`}}{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}{{BJjc}BJj{{I`{Bj}}}}{{DBf{f{Bj}}}BJ`}{{{f{BId}}}{{f{Bj}}}}`1{{{f{Bj}}}BJ`}{BKjBJ`}{BEbBEb}{BKlBJ`}{{{f{AIn}}}{{Cf{c}}}{}}{BJ`BJ`}{{{f{DCd}}}Ln}{{{f{BKn}}}{{A`{Lnn}}}}{{}{{BKb{{Mf{BK`}}}}}}{{{f{Dbc}}i}{{A`{gBBf}}}{}{}{}{{AAj{{f{Dbe}}}{{Ad{g}}}}}}{{BEbIn}BEb}{{BJf{Cf{Fj}}}BEb}{{BKlBJ`}BJ`}{{BJ`{Cf{Fj}}}BJ`}{{{f{AKd}}{f{c}}}{{A`{AKdn}}}On}{{{f{BKn}}{f{{l{El}}}}}{{A`{Abn}}}}{{{f{DEl}}{f{{Bb{A@`}}}}Lf}DEl}{{{f{DEl}}{f{{Bb{A@`}}}}}DEl}{{{f{BKn}}{f{{Bb{In}}}}}{{A`{Abn}}}}{{{f{BKn}}{f{{Bb{In}}}}}Ab}{{{f{AKf}}{f{c}}}AKfOn}{{{f{BKn}}{f{{l{El}}}}}Ab}{{{f{DbBEn}}}{{Cf{Hl}}}}{{BJ`BJ`BJ`}BJ`}{{CEhc}CEj{{B@`{BJ`}}}}{{CElc}CEn{{B@`{BJ`}}}}`{{BJ`BJ`BFbCAf}BJ`}```{{{f{C@f}}Kf}{{A`{{l{Kd}}n}}}}{BEb{{A`{DEnn}}}}{CEf{{A`{DEnn}}}}1{{{f{CH`}}}{{Cf{Il}}}}{{BKlFj}BJ`}{{{f{BCb}}AOf}BCl}{{{f{BEn}}}{{Cl{Cj}}}}{{{f{AKh}}}{{G`{{f{{Bb{B`}}}}}}}}{{{f{BEb}}d}{{A`{Ehn}}}}{{{f{DF`}}{Cf{{f{Bj}}}}d}{{A`{AAfn}}}}{{{f{BIh}}{Cf{{f{Bj}}}}d}{{A`{AAfn}}}}{{{f{BJ`}}{f{BCb}}D@h}{{A`{Obn}}}}{{{f{BMl}}{f{{l{El}}}}d}{{A`{{l{Kd}}n}}}}{BKjBJ`}{{{f{BMl}}}{{l{Bh}}}}{DBfBJ`}{{{f{AAh}}}{{Cf{In}}}}{{{f{c}}}e{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BJ`BJ`}{{{f{BL`}}}{{A`{Obn}}}}{{{f{C@f}}{f{Bj}}}{{A`{Abn}}}}{{{f{c}}}Eh{}}000000000000{{{f{DbBCb}}{f{BCb}}}{{A`{dn}}}}`887{{{f{CCd}}c}{{BNf{c}}}BNd}{{{f{CDl}}c}{{BNn{c}}}BNd}``{{BEbIncF`}{{A`{BEbn}}}{{I`{{Bb{BJ`}}}}}}{{{f{BEn}}{f{BEn}}}Hl}{{{f{BEn}}f}Hl}10{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}g{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}g{}{}{}}{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}g{}{}{}}{{{f{DFb}}{Cf{{f{AM`}}}}{f{{l{Bh}}}}}{{A`{DFbn}}}}{{{f{BFb}}Gf{Cf{{f{AM`}}}}ceg}{{A`{Gfn}}}{{Dj{Gf}{{Ad{Gf}}}}}{{Dj{Gf}{{Ad{ALn}}}}}{{Dj{ALn}{{Ad{Gf}}}}}}{{{f{BFb}}Gf{Cf{{f{AM`}}}}}{{A`{Gfn}}}}{{{f{CAl}}Gf{Cf{{f{AM`}}}}}{{A`{Gfn}}}}10`10{g{{A`{AMhe}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}}{e{{A`{BEnc}}}{}{{Hf{}{{Ch{{A`{bc}}}}}}}}{e{{A`{BEnc}}}{}{{Hf{}{{Ch{{A`{{Cf{b}}c}}}}}}}}2{{AFng}{{A`{AMje}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}}0{{AFne}{{A`{BEnc}}}{}{{Hf{}{{Ch{{A`{bc}}}}}}}}{{AFne}{{A`{BEnc}}}{}{{Hf{}{{Ch{{A`{{Cf{b}}c}}}}}}}}{AOl{{A`{eg}}}{}{{AMh{c}}AKn}{}}0{{AOlAFn}{{A`{eg}}}{}{{AMj{c}}AKn}{}}0{{ADh{f{Bj}}}{{A`{{l{c}}e}}}Dh{}}{{ADj{f{{l{c}}}}}{{A`{{l{c}}e}}}Dh{}}10{{ADj{f{Bj}}Ef}{{A`{{l{c}}e}}}Dh{}}0{c{{A`{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Il{{A`{CH`n}}}}11{{{Mf{{Bb{c}}e}}}{{A`{{Mf{{A@j{c}}e}}}}}{}BJh}2222222222222222{DAn{{A`{CHhBBd}}}}{{{f{BCb}}{f{Bj}}}{{A`{{f{Ef}}n}}}}{{{f{BCb}}Fj}{{A`{{Gj{{f{{BA`{B@n}}}}{f{Ef}}}}n}}}}{{{f{BCb}}{f{Bj}}}{{A`{Obn}}}}{{{f{BCb}}{f{Bj}}}{{A`{{Gj{Fj{f{{BA`{B@n}}}}{f{Ef}}}}n}}}}{{{f{DbBCb}}{f{Bj}}}{{A`{{f{DbEf}}n}}}}{{{f{D@j}}{f{Bj}}}{{A`{Fjn}}}}9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999{{CAn{Cf{CIl}}}{{A`{{BIj{AFd}}n}}}}{{{f{BL`}}c}{{A`{Obn}}}{{AAj{{f{Ef}}}{{Ad{{A`{Efn}}}}}}}}{{{f{BL`}}c}{{A`{Obn}}}{{AAj{{f{{Bb{{f{Ef}}}}}}}{{Ad{{A`{Efn}}}}}}}}{{BJ`c}{{A`{BJ`n}}}{{Af{BJ`}{{Ad{{A`{BJ`n}}}}}}}}{{{f{BL`}}c}{{A`{Obn}}}{{AAj{{f{Ob}}}{{Ad{{A`{Obn}}}}}}}}{{DChFj}{{A`{Fjn}}}}{B`{{A`{CE`n}}}}{In{{A`{CEbn}}}}{Nn{{A`{CEdn}}}}{c{{A`{{Mf{c}}DFd}}}{}}{{AFn{G`{{Cl{Cj}}}}{Cf{Hl}}}{{A`{BEnn}}}}{{ce}{{A`{{Mf{ce}}DFd}}}{}BJh}{{}{{A`{{Mf{{BMj{c}}}}DFd}}}{}}{c{{A`{{Mf{{BMj{e}}c}}DFd}}}BJh{}}10`{c{{A`{{DD`{{Mf{c}}}}DFd}}}{}}{{ce}{{A`{{DD`{{Mf{ce}}}}DFd}}}{}BJh}{{{f{BCl}}{f{{Bb{Fj}}}}}{{A`{BCln}}}}{{{f{BLf}}{f{Db{G`{B`}}}}}{{A`{bn}}}}{{{Mf{ce}}}{{A`{c{Mf{ce}}}}}{}BJh}``{{{f{c}}}AAd{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Bj}}}}`{{{f{AHf}}}{{A`{AHfn}}}}{BKjBJ`}{{BEb{Cf{{G`{Eh}}}}BCh}BEb}{BKlBJ`}{BJ`BJ`}{{{f{BKn}}}{{A`{Abn}}}}4321{{BEbe}BEb{{I`{Bj}}}{{Hf{}{{Ch{c}}}}}}{{BEbBF`}BEb}{{{Mf{{AFj{c}}}}}{{A`{cb}}}Id}{{{Mf{ce}}}cAD`BJh}{{{f{DbCAn}}{f{DFf}}}b}6{{{f{DFh}}c{f{Bj}}BFb}{{A`{AAfn}}}{{BEh{Eh}}}}0{{{BNj{c}}d}{{BNj{c}}}BIn}```{{BJjCCf}BJj}`{{{f{BEn}}}{{Cf{{f{Hl}}}}}}0{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fj}cAD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{CL`}}ddEhd}{{A`{AAfn}}}}{{BJ`ddEhd}BJ`}`2{{{f{BEn}}}{{f{{Bb{{Cl{Cj}}}}}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}gAD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{BEn}}}DB`}{{BKjB`}BJ`}{{BEbB`}BEb}{{BKlB`}BJ`}{{{f{AKb}}B`}{{Cf{M`}}}}{{BJ`B`}BJ`}{{{f{BKn}}B`}{{Cf{M`}}}}{{{f{DEh}}B`}Ln}{{{f{BKn}}B`}{{A`{Lnn}}}}`{{{f{DFj}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{DFj}}A@d{f{Db{Bb{Jh}}}}}{{A`{bn}}}}`{{{f{{Mf{{AFj{c}}}}}}g}{{A`{eb}}}Id{}{{AAj{{f{c}}}{{Ad{e}}}}}}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Mf{ce}}}}}FjOnBJh}{{{f{CJb}}}{{l{Nh}}}}{{{f{CJd}}}{{l{Nh}}}}{{{f{C@f}}}{{A`{{l{Nh}}n}}}}210{{{f{CAj}}}{{Cf{In}}}}{{{f{BFb}}}Gf}`{{{f{BFb}}}d}`{cCEh{{B@`{BJ`}}}}{{CEjc}CEl{{B@`{BJ`}}}}{{CEnc}CEl{{B@`{BJ`}}}}```{{BJjBEb}BJj}{{CFnBJ`}CFn}{{C@n{Cf{{DAj{Fj}}}}}C@n}{{{BN`{c}}{DAj{Fj}}}{{BN`{c}}}BNd}{{{CMh{c}}{DAj{Fj}}}{{CMh{c}}}BIn}{{C@jd}C@j}{Fjc{}}0{FjBCb}{{{CIj{c}}{Cf{{DAj{Fj}}}}}{{CIj{c}}}BIn}{{CAnFj}CAn}{{C@j{Cf{CIb}}}C@j}{{BEbd}BEb}{{BIdCBn}BId}{{BEbBJ`}BEb}{{{f{DbBCb}}{BA`{B@n}}Ef}{{Cf{Ef}}}}{{BEbc}BEb{{I`{{Bb{BJ`}}}}}}{{{CMb{c}}{Cf{{G`{Eh}}}}}{{CMb{c}}}BIn}{{{BLb{c}}{Cf{{G`{Eh}}}}}{{BLb{c}}}BLd}{{{BNj{c}}{Cf{{G`{Eh}}}}}{{BNj{c}}}BIn}{{CAn{Cf{{Mf{{Bb{Eh}}}}}}}CAn}`4{{C@j{Cf{{f{Bj}}}}}C@j}{{CB`{Cf{c}}}CB`{{B@`{CBd}}}}{{{CMd{c}}AOf}{{CMd{c}}}{}}{{{BNf{c}}AOf}{{BNf{c}}}BNd}{{{CMd{c}}{Cf{CCh}}}{{CMd{c}}}{}}{{CJh{Cf{CCh}}}CJh}{{{BNf{c}}{Cf{CCh}}}{{BNf{c}}}BNd}{{{BNn{c}}CDn}{{BNn{c}}}BNd}{{BEbc}BEb{{I`{{Bb{BEb}}}}}}{{{BNn{c}}{Cf{Fj}}}{{BNn{c}}}BNd}{{{BN`{c}}{Cf{Eh}}}{{BN`{c}}}BNd}0{{CFnBJ`}CFn}{{CG`BJ`}CG`}{{C@jd}C@j}{{CB`d}CB`}{{{f{BL`}}Ef}{{A`{Obn}}}}{{C@j{Cf{{Mf{BCb}}}}}C@j}{{CAn{Cf{{Mf{{G`{Ef}}}}}}}CAn}{{C@jCBb}C@j}{{CB`CBb}CB`}{{C@jB`}C@j}{{CB`B`}CB`}{{CJhCIl}CJh}{{CLl{G`{BJ`}}}{{A`{BJ`n}}}}{{{BN`{c}}{Cf{Fj}}}{{BN`{c}}}BNd}{{{BN`{c}}{Cf{d}}}{{BN`{c}}}BNd}{{CG`BJ`BJ`BJ`}CG`}=={{CAnd}CAn}{{{CMb{c}}{Cf{{G`{Ab}}}}}{{CMb{c}}}BIn}{{{BNj{c}}{Cf{{G`{Ab}}}}}{{BNj{c}}}BIn}{{CFnBJ`BJ`BJ`}CFn}4{{CFnBJ`}CFn}{{CG`BJ`}CG`}{{C@jd}C@j}{{C@nd}C@n}{{{CMh{c}}d}{{CMh{c}}}BIn}{{{CIj{c}}d}{{CIj{c}}}BIn}9{{{CMb{c}}{Cf{{Gj{{Mf{Bj}}{Mf{Bj}}}}}}}{{CMb{c}}}BIn}{{{BNj{c}}{Cf{{Gj{{Mf{Bj}}{Mf{Bj}}}}}}}{{BNj{c}}}BIn}{{C@j{Cf{{Mf{Bj}}}}}C@j}{{C@j{Cf{Fj}}}C@j}{{C@n{Cf{{DAj{Fj}}}}}C@n}{{CAn{Cf{Fj}}}CAn}{{{CMf{c}}DFl}{{CMf{c}}}BNd}{{{CMh{c}}DFl}{{CMh{c}}}BIn}{{{BN`{c}}Eh}{{BN`{c}}}BNd}<{{CAnd}CAn}{{B@d{DFn{EhEh}}}B@d}{{BCl{DFn{EhEh}}}BCl}{{CFnBJ`}CFn}{{CG`BJ`}CG`}010{{C@jd}C@j}{{CB`d}CB`}3{{CI`c}CI`{{B@`{{Cf{Fj}}}}}}={{C@jc}C@j{{B@`{{Cf{Fj}}}}}}{{C@nc}C@n{{B@`{{Cf{Fj}}}}}}{{C@n{Cf{Fj}}}C@n}{{{CMb{c}}{Cf{Fj}}}{{CMb{c}}}BIn}{{{BLb{c}}{Cf{Fj}}}{{BLb{c}}}BLd}{{{CIj{c}}{Cf{Fj}}}{{CIj{c}}}BIn}{{{BNj{c}}{Cf{Fj}}}{{BNj{c}}}BIn}{{CAn{Cf{Fj}}}CAn}20;{{BEbd}BEb}{{{BN`{c}}Eh}{{BN`{c}}}BNd}{{C@j{Cf{CBf}}}C@j}{{CB`{Cf{CBf}}}CB`}{{BEbCGn}BEb}{{CAnCB`}CAn}{{{CIj{c}}{Cf{e}}}{{CIj{c}}}BIn{{B@`{CIl}}}}{{CAn{Cf{c}}}CAn{{B@`{CIl}}}}{{CI`{Mf{{Bb{CIl}}}}}CI`}{{C@j{Mf{{Bb{CIl}}}}}C@j}{{C@n{Mf{{Bb{CIl}}}}}C@n}{{{CIj{c}}{Cf{{Mf{BIl}}}}}{{CIj{c}}}BIn}{{{BNj{c}}{Cf{{Mf{BIl}}}}}{{BNj{c}}}BIn}<{{{CMb{c}}{Cf{{G`{Fj}}}}}{{CMb{c}}}BIn}{{{BLb{c}}{Cf{{G`{Fj}}}}}{{BLb{c}}}BLd}{{{CMh{c}}{Cf{{G`{Eh}}}}}{{CMh{c}}}BIn}{{{CIj{c}}{Cf{{Mf{{Bb{Eh}}}}}}}{{CIj{c}}}BIn}{{{BNj{c}}{Cf{{G`{Fj}}}}}{{BNj{c}}}BIn}{{CAn{Cf{{Mf{{G`{Fj}}}}}}}CAn}{{BEbd}BEb}{{C@j{Cf{B`}}}C@j}{{{BN`{c}}B`}{{BN`{c}}}BNd}{{CB`{Cf{B`}}}CB`}{{{BN`{c}}CBl}{{BN`{c}}}BNd}{{C@jd}C@j}{{CAnd}CAn}{{CI`d}CI`}2{{C@nd}C@n}{{{CIj{c}}d}{{CIj{c}}}BIn}39{{{BNn{c}}{Cf{Fj}}}{{BNn{c}}}BNd}{{CI`c}CI`{{B@`{{Cf{DCb}}}}}}{{BEb{f{Bj}}{Cf{In}}}BEb}{{C@jc}C@j{{B@`{{Cf{DCb}}}}}}{{C@j{Cf{DCb}}}C@j}{{C@nc}C@n{{B@`{{Cf{DCb}}}}}}{{C@n{Cf{DCb}}}C@n}{{{CMb{c}}{Cf{DCb}}}{{CMb{c}}}BIn}{{{BLb{c}}{Cf{DCb}}}{{BLb{c}}}BLd}{{{CIj{c}}{Cf{{f{DbDCb}}}}}{{CIj{c}}}BIn}{{{BNj{c}}{Cf{DCb}}}{{BNj{c}}}BIn}{{CAn{Cf{DCb}}}CAn}{{{f{BL`}}}{{A`{Obn}}}}{{CAnFj}CAn}{{C@j{Cf{{Mf{BCb}}}}}C@j}{{C@n{Cf{{Mf{BCb}}}}}C@n}{{{CMh{c}}{Mf{BCb}}}{{CMh{c}}}BIn}{{{CIj{c}}{Mf{BCb}}}{{CIj{c}}}BIn}{{CAn{Cf{{Mf{BCb}}}}}CAn}{{C@jc}{{A`{C@jn}}}{{Dj{BCb}{{Ad{{A`{BCbn}}}}}}}}{{{CMh{c}}{f{BCb}}}{{CMh{c}}}BIn}{{{CIj{c}}{f{BCb}}}{{CIj{c}}}BIn}3{{CFnBJ`}CFn}{{CG`BJ`}CG`}{{C@jB`}C@j}{{{BN`{c}}B`}{{BN`{c}}}BNd}{{CB`B`}CB`}{{BEbd}BEb}{{C@jFj}C@j}?0?1{{{BNn{c}}CHf}{{BNn{c}}}BNd}2{{BId{Cf{Eh}}}BId}{{{BN`{c}}{Cf{Eh}}}{{BN`{c}}}BNd}{{CFnKf}CFn}{{CFn{Cf{Eh}}}CFn}{{C@jd}C@j}{{CB`d}CB`}108{{{f{BEn}}{Cf{Hl}}}{{Cl{Cj}}}}{{BEn{Cf{Hl}}}BEn}{{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}{Cf{Hl}}}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}1?{{CFnBJ`}CFn}{BEbBEb}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}e{}{}{}}10{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}210213210210{{{f{Db{Mf{AFd}}}}{f{{Bb{B`}}}}}{{A`{FjBBf}}}}{{{f{CCd}}AAfc}{{A`{bn}}}BNd}{{{f{CDl}}AAfc}{{A`{bn}}}BNd}{{{f{DbAAf}}{f{CLj}}{f{{Bb{c}}}}{f{e}}Fj}{{A`{bn}}}{{I`{Bj}}}{DG`IdIf}}{{{f{Dbc}}e}{{A`{FjBBf}}}{}DDh}{{{f{Db{Mf{AFd}}}}{f{{Bb{DGb}}}}}{{A`{FjBBf}}}}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{CJb}}}{{l{Jn}}}}{{{f{CJd}}}{{l{Jn}}}}{{{f{C@f}}}{{A`{{l{Jn}}n}}}}``{{{f{AKj}}{f{{l{Al}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dh}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{BFd}}c}Ab{{Dj{{Gj{In{f{{BFf{In}}}}}}}{{Ad{Cf}}}}IdIf}}{{{f{BFd}}c}Ab{{Dj{{Gj{In{f{{BFf{In}}}}}}}{{Ad{}}}}IdIf}}{{{f{{Bb{{A@j{In}}}}}}c}Ab{{Dj{{A@j{In}}}{{Ad{Cf}}}}IdIf}}{{{f{{Bb{{A@j{In}}}}}}c}Ab{{Dj{{A@j{In}}}{{Ad{}}}}IdIf}}{{{f{{Bb{c}}}}e{Cf{{Mf{AG`}}}}}{{ALf{c}}}{BGlBGn}{{Cn{}{{Ch{{Gj{InIn}}}}}}Ij}}{{{f{{Bb{c}}}}{f{Hl}}e{Cf{{Mf{AG`}}}}}{{ALf{c}}}{BGlBGn}{{Cn{}{{Ch{{Gj{InIn}}}}}}Ij}}{{{f{{l{c}}}}InIn}{{l{c}}}Dh}{{{f{{G`{{A@j{In}}}}}}{f{{Bb{{Cl{Cj}}}}}}}d}{{{f{BH`}}{f{Bn}}}Ab}{{BHbBHb}BHb}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DhDh{{Dj{ff}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}Dh}{{{l{c}}{l{e}}gik}{{l{m}}}DhDh{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DhDh{{AKl{CfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}g}bDhDh{{Af{CfCf}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDh{}{{Af{}{{Ad{g}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bj}}}{{l{k}}}DhDh{CjAKn}{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bj}}}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DhDhCj{{Af{}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDh{}{}{{Af{CfCf}{{Ad{{A`{{Cf{g}}i}}}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DhDhDh{{AL`{CfCfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDhCjALb{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hd{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bj}}}{{A`{{l{m}}i}}}DhDhCjALb{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DhDhALb{{Af{ff}{{Ad{{A`{{Cl{Cj}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DhDhDh{}{}{{Af{CfCfCf}{{Ad{{A`{{Cf{i}}k}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{Cf}{{Ad{{A`{{Cf{e}}g}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{CjAKn}ALb{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dh{}{{Hd{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dh{{ALd{Cf}}}Dh}{{{f{{l{c}}}}e}{{l{g}}}DhALdDh}{{{f{{l{c}}}}g}{{l{i}}}DhCj{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hd{e}}}}}}{{{l{c}}g}{{l{i}}}DhCj{{Af{}{{Ad{e}}}}}{{Dh{}{{Hd{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dh{CjAKn}{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hd{e}}}}}}0``{{{f{DGd}}}{{l{El}}}}0{{{f{DGd}}{f{{l{Kd}}}}d}{{A`{Abn}}}}{{{f{DGd}}{f{{l{Bh}}}}d}{{A`{Abn}}}}{{{f{DGd}}}Ab}{{{f{DGd}}}{{A`{Abn}}}}1{{{f{DGd}}}{{A`{{l{El}}n}}}}{{{f{DGd}}}{{l{C`}}}}{{{f{DGd}}{f{Ab}}}{{A`{Abn}}}}{{{f{DGd}}Ej}{{A`{{l{C`}}n}}}}{{{f{DGd}}B`}{{A`{Abn}}}}5{{{f{DGd}}}{{A`{{l{Ah}}n}}}}01{{{f{DGf}}}{{f{{l{C`}}}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{BOdBJ`}BJ`}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}3{cc{}}{{}Fj}{ce{}{}}6{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}2`````````````````````{{{f{DbDGh}}{f{{Bb{B`}}}}ddd}{{A`{bn}}}}{{{f{DbDGh}}d}b}<<<<;;;;999988887777{{{f{DGh}}}Ef}77776666{{{f{{Bb{Fj}}}}Fj{f{BCb}}{Cf{B`}}CBbd}{{A`{{G`{DGh}}n}}}}6666{DGh{{A`{Abn}}}}6666666655557777```````````{{{f{BLj}}{Cf{{f{Bj}}}}d}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLj}}{Cf{{f{Bj}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLj}}{Cf{{f{Bj}}}}Kfdd{Cf{{f{Eh}}}}{f{{l{Bh}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{BLj}}{Cf{{f{Bj}}}}Kfd{Cf{{f{Eh}}}}{f{{l{Bh}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{BLj}}{Cf{{f{Bj}}}}d}{{A`{{Kb{LbKd}}n}}}}`{{{f{CJb}}}{{l{Nh}}}}{{{f{CJd}}}{{l{Nh}}}}{{{f{CJf}}}{{l{Kd}}}}`{{{f{DAh}}}{{l{Nh}}}}21{{{f{CJb}}}{{l{Al}}}}{{{f{CJd}}}{{l{Al}}}}{{{f{CJb}}}{{l{Jn}}}}{{{f{CJd}}}{{l{Jn}}}}55`46576{{{f{DAh}}}{{l{Jn}}}}16{{{f{CJb}}}{{l{Ml}}}}{{{f{CJd}}}{{l{Ml}}}}{{{f{Bj}}{f{{Bb{{f{Bj}}}}}}{f{Bj}}}{{Kb{K`Jn}}}}{{{f{Bj}}{f{{Bb{{f{Bj}}}}}}{f{Bj}}}{{Kb{LbKd}}}}{{{f{Bj}}{f{{Bb{{f{Bj}}}}}}{f{Bj}}Kf}{{Kb{KhKd}}}}=<{{{f{DDl}}Oj}{{A`{Abn}}}}{{{f{DDl}}{f{Ab}}CAb}{{A`{Abn}}}}101010101010<>=`?>?>`98````````{{{f{c}}h}b{}}{{{f{BLj}}{Cf{{f{Bj}}}}d}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLj}}{Cf{{f{Bj}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLj}}{Cf{{f{Bj}}}}Kfdd{Cf{{f{Eh}}}}{f{{l{Bh}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{BLj}}{Cf{{f{Bj}}}}Kfd{Cf{{f{Eh}}}}{f{{l{Bh}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{DGj}}}{{f{{l{Bh}}}}}}{{{f{BLj}}{Cf{{f{Bj}}}}d}{{A`{{Kb{LbKd}}n}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DGl}}}DGl}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{DGl}}{f{DGl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{DGl}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{DGl}}{f{Dbc}}}bADf}`{{}Fj}{ce{}{}}{{{f{DGl}}{f{Bj}}}d}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{{DGn{c}}}}}{{DGn{c}}}{AD`Aj}}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{cc{}}{{{f{Bj}}}{{Cf{DGl}}}}{{}Fj}{ce{}{}}`{{{f{Db{DGn{c}}}}{f{Bj}}}CfAj}{{{f{DbDH`}}{f{{Bb{B`}}}}{Cf{Kf}}}{{Cf{c}}}{}}{{{f{Db{DGn{Jn}}}}{f{{Bb{B`}}}}{Cf{Kf}}}{{Cf{Nn}}}}{{{f{Db{DGn{Kd}}}}{f{{Bb{B`}}}}{Cf{Kf}}}{{Cf{Gf}}}}`{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}{{c{Cf{Kf}}}{{A`{{DHd{}{{DHb{e}}}}n}}}{}{}}{{DGl{Cf{Kf}}}{{A`{{DGn{Kd}}n}}}}{{DGl{Cf{Kf}}}{{A`{{DGn{Jn}}n}}}}3{{{f{c}}}AAd{}}:```````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Dbc}}}{{f{Dbe}}}{}{}}0{{{f{CIb}}}CIb}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{}CIb}{Fj{{f{c}}}{}}0{Fj{{f{Dbc}}}{}}0{Fjb}0{{{f{CIb}}{f{CIb}}}d}{{{f{DHf}}{f{DHf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CIb}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}0{{{f{Bj}}}{{A`{DHf}}}}{{{f{Bj}}g}{{A`{CIbn}}}{{I`{Bj}}}{{B@`{Eh}}}{{Hf{}{{Ch{{Gj{ce}}}}}}}}{{{f{CIb}}{f{Dbc}}}bADf}{{}Fj}0{ce{}{}}0``{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}000{{{f{c}}}AAd{}}033{{CIbFj}CIb}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAMh{}{{Hf{}{{Ch{c}}}}}}0{{AFne}AMj{}{{Hf{}{{Ch{c}}}}}}0{{{f{AMl}}}{{f{Ef}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{{f{{Bb{c}}}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{{f{ANn}}{f{Ef}}}{{A`{Abn}}}}{{{f{ANn}}{f{Ef}}Fd}{{A`{Abn}}}}`{AOle{}{{AMh{c}}AKn}}0{{AOlAFn}e{}{{AMj{c}}AKn}}0{{{ANh{Bj}}}Ef}{{{f{ANn}}}{{f{Ef}}}}`{{ANl{f{{l{El}}}}{f{{l{El}}}}}{{A`{{l{El}}n}}}}{{{G`{c}}AFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{G`{c}}AFn}{{AKn{}{{AMn{e}}{AN`{c}}{ANb{g}}}}}{ANd{ANf{e}}}AD`{{Gd{}{{Ch{e}}}}IjIdIf}}{{FjcAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{FjAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fj}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{ANn}}Fj}{{A`{Iln}}}}{{{f{ANn}}Fj}Il}{{}Ef}{{{f{BAb}}Fj}Il}4{{BAdEf}{{A`{Lnn}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{AGf{cgAGd}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{{{f{AMd}}{f{AMd}}}{{A`{{Gj{AMdAMd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Ef}}{f{Ef}}}{{A`{Efn}}}}`{{}c{}}0{g{{A`{AMhe}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}}0{{AFng}{{A`{AMje}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}}0{AOl{{A`{eg}}}{}{{AMh{c}}AKn}{}}0{{AOlAFn}{{A`{eg}}}{}{{AMj{c}}AKn}{}}0{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fj}cAD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}0{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}gAD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}{Fjc{}}0{{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}{Cf{Hl}}}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIdIf}}```````````{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{ANl{f{{l{El}}}}{f{{l{El}}}}}{{A`{{l{El}}n}}}}=<`````````{{}b}0{{}d}{{{f{{Kb{KhKd}}}}{f{{l{Bh}}}}CHn{Fl{Gf}{{Ad{ALn}}}}{Fl{ALn}{{Ad{Gf}}}}{f{AM`}}{f{AM`}}}{{A`{{l{Kd}}n}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{Bj}}}}{Fl{Gf}{{Ad{ALn}}}}{Fl{ALn}{{Ad{Gf}}}}{f{AM`}}{f{AM`}}}{{A`{{l{Kd}}n}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{Bj}}}}{f{{l{Bh}}}}CHn}{{A`{{Kb{KhKd}}n}}}}```{{c{Cf{Hl}}}COd{}}{{{COf{Gf}}{COf{B`}}{Cf{Hl}}}COh}{{{COf{Gf}}{COf{B`}}{Cf{Hl}}}COj}`{CKhBJ`}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{CKhKf}BJ`}3{{CKhBJ`Kf}BJ`}{{CKhEh}BJ`}555{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}8{cc{}}9{{}Fj}{ce{}{}};;;;;;;;;;{{CKh{Cf{Eh}}BJ`CHn}BJ`}{{CKhBJ`}BJ`}={{CKh{f{Bj}}}BJ`}>;0>>>>>>>1{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}5{CKhBJ`}0>0`{{{f{BHd}}{f{AAf}}{f{Bn}}}{{A`{Abn}}}}{{{f{BHd}}}{{A`{{f{Bj}}n}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{}DHh}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{DHh{Cf{{f{AFn}}}}}{{A`{AEfn}}}}{cc{}}{{}Fj}{ce{}{}}{{{f{DHh}}}d}{{FjFj}DHh}{{{f{DbDHh}}{Cl{Cj}}}b}{{{f{DbDHh}}}b}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}6`{{{f{{l{c}}}}}FjAj}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DHj}}}DHj}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{DHj}}{f{DHj}}}d}{{{f{DHj}}{f{DbH`}}}{{A`{bHb}}}}0{cc{}}{{{f{DHj}}{f{Dbc}}}bADf}{{}Fj}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Eh{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DHl}}}DHl}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{DHl}}{f{DHl}}}d}{{{f{DHl}}{f{DbH`}}}{{A`{bHb}}}}0{cc{}}{{{f{DHl}}{f{Dbc}}}bADf}{{}Fj}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Eh{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4{{LfLf}Lf}{{{f{{l{El}}}}In}{{A`{bn}}}}{{{f{{ALf{In}}}}In}{{A`{bn}}}}```{{{f{Ab}}CDb}Ab}{{{f{Ab}}{f{Ab}}d}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}{f{Bn}}}Ab}0{{{f{Ab}}{f{Bj}}}Ab}0`{{{f{c}}h}b{}}{{{f{DHn}}}{{f{AG`}}}}{{{f{DbDHn}}}{{Cl{Cj}}}}{{{f{DbDHn}}}{{f{DbAG`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DHn}}}DHn}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{{f{DHn}}}{{f{AFn}}}}{{}DHn}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{DbDHn}}Fj}b}{{{f{DHn}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{}Fj}{ce{}{}}{{{f{DHn}}}Fj}{FjDHn}{{{f{DbDHn}}}b}70{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}{{{f{DHn}}}{{Cf{{f{DI`}}}}}}7`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DFf}}}DFf}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{}DFf}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{{BCj{EfA@d}}}}}Ef}{{{f{DFf}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{DFf}}}Fj}{{{f{DFf}}}{{Mf{BCb}}}}{{{f{Bj}}dd}Ef}{{{f{DA`}}B`{Cf{Fj}}d{Cf{{f{BCb}}}}FjFj{Cf{{f{CBd}}}}{Cf{B`}}B`{Cf{{f{CBf}}}}dd{f{Db{Cf{Fj}}}}d}{{A`{{Gj{BCbFjFj}}n}}}}{{}Fj}{ce{}{}}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}{{{f{DA`}}{f{CAn}}}{{A`{DFfn}}}}1{{{f{c}}}AAd{}}4{{DFf{Mf{BCb}}}DFf}````{{{f{{l{c}}}}eALhd}{{G`{In}}}Dh{{Cn{}{{Ch{Cf}}}}}}{{{f{{Bb{f}}}}cIne}{{G`{In}}}{{Cn{}{{Ch{Cf}}}}}{{Dj{fFjf}{{Ad{d}}}}}}``{{{f{DIb}}}{{f{Ab}}}}{{{f{C@f}}}{{A`{{l{Jn}}n}}}}{{{f{C@f}}}{{A`{{l{Nh}}n}}}}0{{{f{C@f}}}{{A`{{l{Al}}n}}}}22112{{{f{C@f}}}{{A`{{l{Ml}}n}}}}322{{{f{C@f}}{f{Bj}}}{{A`{Abn}}}}{{{f{C@f}}Kf}{{A`{{l{Kd}}n}}}}1445`{{{f{AK`}}FjFj}AK`}0`{{Fj{f{Db{G`{d}}}}}b}```11{{Fj{f{{Bb{Ab}}}}{f{DbF`}}}{{A`{{ALj{{l{El}}}}n}}}}{{{f{{Bb{Ab}}}}{f{{Bb{d}}}}{f{{Bb{d}}}}}{{A`{ALln}}}}{{{f{{Bb{Ab}}}}{f{{Bb{d}}}}{f{{Bb{d}}}}}{{A`{{Jd{Gf}}n}}}}{{{f{Bj}}{f{{Bb{Ab}}}}{f{{Bb{d}}}}{f{{Bb{d}}}}}{{A`{{l{En}}n}}}}{{{f{Bj}}{f{{Bb{Ab}}}}}{{A`{{l{En}}n}}}}{{{f{Ab}}}{{A`{{Cl{Cj}}n}}}}{{{f{{Bb{Ab}}}}}{{A`{ALln}}}}{{{f{{Bb{Ab}}}}}{{A`{{l{En}}n}}}}0```````````99```{{{f{BMh}}}{{f{{l{Bh}}}}}}{{{f{BMl}}}{{A`{{l{Bh}}n}}}}{{{f{BMl}}}{{l{Bh}}}}{{{f{BMl}}{f{{l{Bh}}}}}{{l{Bh}}}}{{{f{BMl}}{f{Bj}}d}{{A`{{l{Al}}n}}}}{{{f{BMl}}{f{{l{Bh}}}}dd}{{A`{{l{Al}}n}}}}{{{f{BMl}}{f{Bj}}}{{A`{{l{Al}}n}}}}{{{f{BMl}}{f{Bj}}d}{{A`{{l{El}}n}}}}{{{f{BMl}}{f{{l{Bh}}}}d}{{A`{{l{El}}n}}}}{{{f{BMl}}{f{{l{Bh}}}}Fj}{{A`{{l{Bh}}n}}}}{{{f{BMl}}{f{Bj}}}{{A`{{l{Ah}}n}}}}{{{f{BMl}}{f{{l{Bh}}}}}{{A`{{l{Ah}}n}}}}{{{f{BMl}}{f{Bj}}{f{Ef}}}{{A`{Abn}}}}5{{{f{BMl}}{f{{l{Bh}}}}dd}{{A`{{l{El}}n}}}}{{{f{BMl}}{f{Bj}}}{{A`{{l{El}}n}}}}=<{{{f{{Bb{{f{{l{Bh}}}}}}}}{f{Bj}}d}{{A`{{l{Bh}}n}}}}{{{f{BMl}}{f{Bj}}{f{Bj}}}{{A`{{l{Bh}}n}}}}0{{{f{BMl}}{f{Bj}}{f{Bj}}Fj}{{A`{{l{Bh}}n}}}}1{{{f{BMl}}{f{{l{Bh}}}}}{{l{Ah}}}}{{{f{BMl}}{f{{l{Bh}}}}Fj}{{A`{{l{j}}n}}}}0{{{f{{l{Bh}}}}{f{{l{Bh}}}}e}{{l{Ah}}}{{Cn{}{{Ch{{f{Bj}}}}}}}{{Dj{{f{Bj}}{f{Bj}}}{{Ad{c}}}}}}2{{{f{{l{Bh}}}}{f{{l{Bh}}}}Fjed}{{A`{{l{j}}n}}}{{Cn{}{{Ch{{f{Bj}}}}}}}{{Dj{{f{Bj}}{f{Bj}}}{{Ad{c}}}}}}2{{{f{BMl}}{f{Ab}}}{{A`{{l{Bh}}n}}}}{{{f{{l{Bh}}}}{f{Bj}}d}{{l{Bh}}}}{{{f{BMl}}}{{l{El}}}}0{{{f{BMl}}}{{l{Bh}}}}{{{f{BMl}}{f{Ab}}{f{Ab}}}{{A`{{l{Bh}}n}}}}4{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Bh}}}}505050{{{f{BMl}}{f{{l{Bh}}}}}{{l{Bh}}}}10{{{f{BMl}}{f{{l{El}}}}d}{{A`{{l{Kd}}n}}}}444````````{{eFjFj}{{DId{Gf}}}{{I`{Bj}}}{{Cn{}{{Ch{c}}}}}}{{eFjFj}{{Jd{Gf}}}{{I`{{Bb{B`}}}}}{{Cn{}{{Ch{c}}}}}}``````````````{{{f{c}}h}b{}}0{{{f{Bj}}{G`{{Cl{Cj}}}}{f{AFn}}}{{A`{Abn}}}}{{{f{Bj}}{G`{{Cl{Cj}}}}{f{AFn}}{Cf{{f{{DFn{EhEh}}}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}}}{{AbAb}}{{Abc}{}{BdLl}}{{{f{Ab}}c}{}{BdLl}}`{{{f{DbAb}}{f{Ab}}}{{A`{{f{DbAb}}n}}}}{{{f{Ab}}}{{Cf{Fj}}}}0{{{f{BKn}}Ej}{{l{El}}}}{{{f{BKn}}}{{A`{{l{El}}n}}}}`{{{f{Ab}}}{{A`{{f{{l{C`}}}}n}}}}{{{f{Ab}}Fj}{{f{{Cl{Cj}}}}}}{{{f{BKn}}}{{f{AG`}}}}{{{f{DbBKn}}}{{f{DbAG`}}}}{{{f{Ab}}}{{l{Ah}}}}{{{f{DbBKn}}}{{f{Db{l{c}}}}}Dh}{{{f{BKn}}}{{f{{l{c}}}}}Dh}{{{f{Ab}}}{{f{BKn}}}}{{{f{Ab}}}{{f{Ab}}}}0{{{f{DbBKn}}}{{A`{Fjn}}}}{{{f{DbAb}}}{{A`{Fjn}}}}{{{f{Ab}}}{{A`{{f{{l{An}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{En}}}}n}}}}{{{f{BKn}}{f{Ab}}}{{A`{Abn}}}}00{{{f{Ab}}}{{A`{{f{{l{Al}}}}n}}}}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Dbc}}}{{f{Dbe}}}{}{}}000{{{f{BKn}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{Ab}}{f{Ef}}}{{A`{Abn}}}}0{{{f{Ab}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{AMd}}n}}}}7{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}c}{{A`{Abn}}}Bf}{{{f{BKn}}}{{Fn{{Fh{{Cl{Cj}}}}{Fl{{f{{Cl{Cj}}}}}{{Ad{Fj}}}}}}}}{{{f{Ab}}}{{`{{Cn{}{{Ch{Fj}}}}}}}}{{{f{BKn}}}{{f{{G`{{Cl{Cj}}}}}}}}{{{f{DbBKn}}}{{f{Db{G`{{Cl{Cj}}}}}}}}{{{f{DbAb}}}{{f{Db{G`{{Cl{Cj}}}}}}}}{{{f{Ab}}}Ab}{{{f{Lf}}}Lf}1{{{f{BKn}}}{{Mf{BKn}}}}{{{f{c}}{f{Dbe}}}b{}{}}0{{{f{c}}}b{}}00{{{f{DbAb}}}b}{{{f{Ab}}}{{A`{{f{{Kb{K`Jn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{Kb{KhKd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{Kb{KlKj}}}}n}}}}{{}Ab}{Fj{{f{c}}}{}}000{{{f{Ab}}}f}{Fj{{f{Dbc}}}{}}000{{AbAb}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{BdLl}}{{Abc}{}{BdLl}}{Fjb}000{{{f{BKn}}}Ab}{{{f{BKn}}}{{f{Ef}}}}{{{f{Ab}}}{{A`{{f{{Kb{KnKd}}}}n}}}}{{{f{Lf}}{f{Lf}}}d}{{{f{Ab}}{f{Ab}}}d}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bj}}}{{A`{{l{Al}}n}}}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Al}}n}}}}{{{f{Ab}}c}{{A`{{l{Al}}n}}}B@b}3{{{f{Ab}}{f{Bj}}}}2{{{f{Ab}}c}{}B@b}66{{{f{c}}{f{e}}}d{}{}}00{{{f{Ab}}}Fj}{{{f{Ab}}}{{A`{Abn}}}}{{{f{DbAb}}{f{Ab}}}{{A`{{f{DbAb}}n}}}}{{{f{Ab}}IlFj}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{Ed}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Eb}}}}n}}}}{{{f{BKn}}}{{Dn{Ob}}}}{{{f{Ab}}AHj}{{A`{Abn}}}}{{{f{BKn}}{f{{l{Al}}}}}{{A`{Abn}}}}{{{f{Lf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Ab}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{Ab}}}Eh}{cc{}}000{{{Kb{K`Jn}}}Ab}{{{Kb{LbKd}}}Ab}{{{Kb{KhKd}}}Ab}{{{l{c}}}AbDh}{{{Kb{KnKd}}}Ab}{{{f{Bj}}{f{{Bb{Il}}}}d}{{A`{Abn}}}}{{{f{Bj}}{f{{Bb{Il}}}}{f{Ef}}d}{{A`{Abn}}}}{{{f{Bj}}{Cl{Cj}}}{{A`{Abn}}}}{{{f{Bj}}{G`{{Cl{Cj}}}}}{{A`{Abn}}}}{{{f{Bj}}{G`{{Cl{Cj}}}}{f{Ef}}}Ab}{g{{A`{ic}}}{}{}{{Hh{c}{{Ch{e}}}}}{}}{cAb{{Hf{}{{Ch{{f{Nj}}}}}}}}{cAb{{Hf{}{{Ch{{Cf{B`}}}}}}}}{cAb{{Hf{}{{Ch{Nn}}}}}}{cAb{{Hf{}{{Ch{{f{Gf}}}}}}}}{cAb{{Hf{}{{Ch{{f{d}}}}}}}}{cAb{{Hf{}{{Ch{Nj}}}}}}{cAb{{Hf{}{{Ch{{f{In}}}}}}}}{cAb{{Hf{}{{Ch{Jf}}}}}}{cAb{{Hf{}{{Ch{Mn}}}}}}{cAb{{Hf{}{{Ch{Eh}}}}}}{cAb{{Hf{}{{Ch{{f{Nf}}}}}}}}{cAb{{Hf{}{{Ch{{f{M`}}}}}}}}{cAb{{Hf{}{{Ch{{Cf{Nf}}}}}}}}{cAb{{Hf{}{{Ch{{Cf{Jf}}}}}}}}{cAb{{Hf{}{{Ch{Nf}}}}}}{cAb{{Hf{}{{Ch{In}}}}}}{cAb{{Hf{}{{Ch{{f{B`}}}}}}}}{cAb{{Hf{}{{Ch{B`}}}}}}{cAb{{Hf{}{{Ch{{Cf{M`}}}}}}}}{cAb{{Hf{}{{Ch{{Cf{Nj}}}}}}}}{cAb{{Hf{}{{Ch{d}}}}}}{cAb{{Hf{}{{Ch{{Cf{Mn}}}}}}}}{cAb{{Hf{}{{Ch{{Cf{Nn}}}}}}}}{cAb{{Hf{}{{Ch{Jh}}}}}}{cAb{{Hf{}{{Ch{{Cf{d}}}}}}}}{cAb{{Hf{}{{Ch{{f{Jh}}}}}}}}{cAb{{Hf{}{{Ch{M`}}}}}}{cAb{{Hf{}{{Ch{{f{Mn}}}}}}}}{cAb{{Hf{}{{Ch{Gf}}}}}}{cAb{{Hf{}{{Ch{{Cf{Gf}}}}}}}}{cAb{{Hf{}{{Ch{{f{Bj}}}}}}}}{cAb{{Hf{}{{Ch{{Cf{Jh}}}}}}}}{cAb{{Hf{}{{Ch{{f{Jf}}}}}}}}{cAb{{Hf{}{{Ch{{f{Nn}}}}}}}}{cAb{{Hf{}{{Ch{{Cf{In}}}}}}}}{{{f{Bj}}{G`{Gf}}}Ab}{{{f{Bj}}{G`{Nn}}}Ab}{{{f{Bj}}{G`{Mn}}}Ab}{{{f{Bj}}{G`{Nj}}}Ab}{{{f{Bj}}{G`{N`}}}Ab}{{{f{Bj}}{G`{In}}}Ab}{{{f{Bj}}{G`{Jf}}}Ab}{{{f{Bj}}{G`{Jh}}}Ab}{{{f{Bj}}{G`{Nf}}}Ab}{{{f{Bj}}{G`{M`}}}Ab}{{{f{Bj}}{G`{B`}}}Ab}{{{f{Bj}}Fj{f{Ef}}}Ab}{{{f{Ab}}FjFj}Ab}{{{f{BKn}}Fj}{{A`{Iln}}}}{{{f{Ab}}}Fj}{{{f{Ab}}}J`}{{{f{Ab}}}Ab}{{{f{BKn}}}{{Cf{{Mj{Mh}}}}}}{{{f{BKn}}Fj}{{Cf{{f{Jb}}}}}}{{{f{BKn}}FjFj}{{Cf{{f{Jb}}}}}}{{{f{BKn}}Fj}Il}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bj}}}{{A`{{l{Al}}n}}}}{{{f{Ab}}c}{{A`{{l{Al}}n}}}B@b}{{{f{Ab}}{f{Ab}}}{{A`{{l{Al}}n}}}}31{{{f{Ab}}{f{Bj}}}}1{{{f{BKn}}}d}{{{f{Lf}}{f{Dbc}}}bADf}{{{f{Ab}}{Cf{Fj}}}Ab}{{{f{Ab}}}{{A`{{f{{l{Ml}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Jn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{El}}}}n}}}}`{{{f{Ab}}}{{A`{{l{Ah}}n}}}}{{}Fj}000{ce{}{}}000{AbAAf}1{BCdAb}{AbAb}={{{f{Ab}}}{{A`{{l{Al}}n}}}}000{{{f{BKn}}}{{l{Al}}}}0{{}d}0{{{f{Ab}}}Lf}{{{f{Ab}}}DIf}{{{f{Ab}}}{{`{{Cn{}{{Ch{Ab}}}}}}}}{{{f{BKn}}}Fj}{{{f{Ab}}}Fj}{{{f{BKn}}Fj}Ab}{{{f{Ab}}}{{A`{{f{{l{Ah}}}}n}}}}{AbBJ`}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Al}}n}}}}{{{f{Ab}}c}{{A`{{l{Al}}n}}}B@b}{{{f{Ab}}{f{Bj}}}}3210{{{f{Ab}}}{{A`{{Cf{c}}n}}}Ll}{{{f{BKn}}}{{A`{Lnn}}}}{{{f{BKn}}}{{Cf{M`}}}}{{{f{Ab}}}Ln}1232{{{f{Ab}}c}{}{BdLl}}{{Abc}{}{BdLl}}{{AbAb}}{{{f{Ab}}{f{Ab}}}}{{{f{BKn}}}Fj}{{{f{Ab}}}Fj}{{{f{BKn}}}{{A`{Fjn}}}}{{{f{BKn}}}{{f{Bj}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{d}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{Jh}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{In}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{N`}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{Nn}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{Mn}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{B@l}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{M`}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{Mn}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{f{{Bb{B`}}}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{Nj}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{{Dn{Bj}}}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{Gf}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{N`}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{{f{{Bb{B`}}}}}}}}}}}}{{{f{Bj}}{Nb{Nn}}}Ab}{{{f{Bj}}c}Ab{{I`{{Bb{{Dn{Bj}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{Ab}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{Jh}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{B`}}}}}}{{{f{Bj}}{Nb{In}}}Ab}{{{f{Bj}}c}Ab{{I`{{Bb{{Dn{{Bb{B`}}}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{B@j}}}}}}}}{{{f{Bj}}{f{Ab}}}Ab}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{Nn}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{{Dn{{Bb{B`}}}}}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{Jf}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{Nf}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{ALn}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{Ab}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{Il}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{ALn}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{M`}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{Nf}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{Eh}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{In}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{Nj}}}}}}}}{{{f{Bj}}c}AbBCd}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{B`}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{G`{B`}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{f{Bj}}}}}}}}{{{f{Bj}}{Nb{Jh}}}Ab}{{{f{Bj}}c}Ab{{I`{{Bb{AMb}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{B@j}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{Eh}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{d}}}}}}{{{f{Bj}}{Nb{Gf}}}Ab}{{{f{Bj}}c}Ab{{I`{{Bb{Jf}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{{G`{B`}}}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{AMb}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{{f{Bj}}}}}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{B@l}}}}}}{{{f{Bj}}c}Ab{{I`{{Bb{{Cf{Gf}}}}}}}}{{{f{Bj}}{f{Ef}}}Ab}{{{f{BKn}}FjFj}Ab}{{{f{Bj}}Fj}Ab}{{{f{DbDIf}}}Cf}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bj}}}{{A`{{l{Al}}n}}}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Al}}n}}}}{{{f{Ab}}c}{{A`{{l{Al}}n}}}B@b}31{{{f{Ab}}c}{}B@b}{{{f{Ab}}{f{Bj}}}}{{{f{Ab}}}{{A`{{f{ADb}}n}}}}{{{f{BKn}}}Fj}`{{{f{Ab}}}{{Cl{L`}}}}{{{f{Ab}}}{{A`{Lnn}}}}{{{f{BKn}}M`Oh}{{A`{Lnn}}}}{{{f{BKn}}}Ab}{{{f{Ab}}{f{Ab}}}}{{Abc}{}{BdLl}}{{{f{Ab}}c}{}{BdLl}}{{{f{DbBKn}}{f{Bj}}}b}{{{f{DbAb}}{f{Bj}}}{{f{DbAb}}}}{{{f{Ab}}{f{{Bb{Gf}}}}}{{A`{Abn}}}}06{LfLf}{{{f{BKn}}{f{Dj}}Oj}{{A`{Abn}}}}{{{f{Ab}}M`dd{Cf{Jh}}}{{A`{Abn}}}}{{{f{Ab}}Fjdd{Cf{Jh}}}{{A`{Abn}}}}{{{f{Ab}}Fj}Ab}{{{f{DbAb}}Lf}b}{{{f{BKn}}Gf}Ab}{{{f{DbBKn}}}b}{{{f{DbAb}}}b}{{{f{Ab}}{Cf{Jh}}}Ab}{{{f{DIf}}}{{Gj{Fj{Cf{Fj}}}}}}{{{f{BKn}}GfFj}Ab}{{{f{Ab}}GfFj}Ab}{{{f{Ab}}Ej}{{A`{Abn}}}}{{{f{BKn}}Ej}{{A`{Abn}}}}{{{f{BKn}}Gf}{{Gj{AbAb}}}}{{{f{Ab}}Gf}{{Gj{AbAb}}}}{{{f{BKn}}B`}{{Cf{M`}}}}{{{f{BKn}}B`}{{A`{Lnn}}}}{{{f{Ab}}}{{A`{{f{{l{Bh}}}}n}}}}{{{f{Ab}}Fj}{{A`{{Dn{Bj}}n}}}}{{{f{Ab}}{f{Ef}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{j}}}}n}}}}{{Abc}{}{BdLl}}{{AbAb}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{BdLl}}{{{f{Ab}}}{{A`{cn}}}Ll}{{{f{BKn}}}{{A`{Lnn}}}}{{{f{Ab}}}{{A`{Lnn}}}}{{{f{Ab}}{Cf{Fj}}}Ab}{{{f{BKn}}{f{{l{El}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{{Bb{A@`}}}}Lf}Ab}{{{f{Ab}}{f{{Bb{A@`}}}}}Ab}{{{f{BKn}}{f{{Bb{In}}}}}{{A`{Abn}}}}{{{f{BKn}}{f{{Bb{In}}}}}Ab}{{{f{BKn}}{f{{l{El}}}}}Ab}{{{f{Ab}}{f{{Bb{In}}}}}Ab}{{{f{Ab}}}{{A`{{f{{Kb{LbKd}}}}n}}}}{{{f{Ab}}FjAOf}{{Cl{Cj}}}}{{{f{Ab}}{Cf{{f{Bj}}}}d}{{A`{AAfn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{c}}}e{}{}}0{{{f{Ab}}}{{Dn{Ab}}}}{{{f{c}}}Eh{}}{{AbAb}{{A`{Abn}}}}{c{{A`{e}}}{}{}}00{{{Gj{{f{B@d}}{G`{{Cl{Cj}}}}}}}{{A`{Abn}}}}{{{Gj{{f{B@d}}{Cl{Cj}}}}}{{A`{Abn}}}}2{{{Gj{{f{Bj}}{G`{{Cl{Cj}}}}}}}{{A`{Abn}}}}{{{Gj{{f{Bj}}{Cl{Cj}}}}}{{A`{Abn}}}}44445{{{f{DbAb}}{Jj{c}}}dDh}6{{{f{c}}}AAd{}}000{{{f{Ab}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{El}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{O`}}}}n}}}}{{{f{BKn}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{BKn}}}{{A`{{f{{l{c}}}}n}}}Dh}{{{f{BKn}}B`}{{Cf{M`}}}}{{{f{BKn}}B`}{{A`{Lnn}}}}{ce{}{}}000{{Ab{f{Bj}}}Ab}{{{f{Ab}}c}Ab{BdLl}}{{{f{Ab}}{f{{l{Al}}}}{f{Ab}}}{{A`{Abn}}}}``{{{f{c}}h}b{}}{{{f{E`}}}{{f{Ab}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{E`}}}E`}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{{f{E`}}}Ab}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{cc{}}{{}Fj}{ce{}{}}{{{DIh{Ab}}}E`}{{{f{DbE`}}{f{Db{Cl{Cj}}}}}b}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}5{{{f{DbE`}}{f{Db{Cl{Cj}}}}e}c{}{{Dj{{f{E`}}}{{Ad{c}}}}}}````{{{f{Ab}}{f{Ab}}c}{{A`{Abn}}}{{Af{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bl}}}}{f{Ab}}}{{A`{Abn}}}}`210210210210``{{{f{C@h}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Ff}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{C@h}}c}{{A`{Abn}}}Bf}{{{f{{l{Ff}}}}c}{{A`{Abn}}}Bf}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{CKd}}}CKd}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{{}CKd}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{CKd}}{f{CKd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CKd}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{CKd}}{f{Dbc}}}bADf}{{}Fj}{ce{}{}}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}3","D":"AEJbALb","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",11315],[5,"StructType",1997,11316],[5,"ChunkedArray",17,11317],[6,"PolarsError",3470,11318],[6,"Result",11319],[5,"Series",10802,11320],[17,"Output"],[10,"FnMut",11321],[5,"ListType",1997,11316],[10,"PolarsNumericType",1997,11316],[5,"BooleanType",1997,11316],[5,"BinaryType",1997,11316],[1,"u8"],[1,"slice"],[10,"Num",11322],[10,"ToPrimitive",11323],[5,"StringType",1997,11316],[1,"str"],[10,"NumOpsDispatchInner",11260,11324],[6,"GroupsProxy",3858,11325],[5,"FixedSizeListType",1997,11316],[5,"ObjectType",1997,11316],[10,"PolarsObject",1551,11326],[6,"Option",11327],[17,"Item"],[10,"Array",11328],[5,"Box",11329],[10,"Iterator",11330],[5,"AmortizedListIter",11331],[0,"mut"],[17,"IsNested"],[5,"FalseT",1997,11316],[10,"PolarsDataType",1997,11316],[10,"Fn",11321],[10,"Copy",11332],[6,"Cow",11333],[5,"AmortSeries",11236,11334],[5,"Float64Type",1997,11316],[5,"Float32Type",1997,11316],[6,"DataType",1997,11335],[5,"String",11336],[5,"SortOptions",1679,11337],[5,"UInt32Type",1997,11316],[5,"BinaryOffsetType",1997,11316],[5,"SortMultipleOptions",1679,11337],[10,"PolarsIntegerType",1997,11316],[6,"CastOptions",1156,11338],[10,"NumOpsDispatchCheckedInner",11281,11339],[5,"Iter",11340],[1,"usize"],[1,"fn"],[5,"Map",11341],[5,"Vec",11342],[5,"MetadataProperties",1263,11343],[10,"DoubleEndedIterator",11344],[1,"i64"],[5,"OffsetsBuffer",11345],[1,"tuple"],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",11346],[5,"Error",11346],[17,"Array"],[10,"IntoIterator",11347],[10,"FallibleIterator",11348],[10,"PolarsAsRef",11349],[5,"Bitmap",11350],[10,"Borrow",11351],[10,"AsRef",11352],[10,"IntoParallelIterator",11353],[10,"Send",11332],[10,"Sync",11332],[10,"NoOption",11354],[10,"TrustedLen",11355],[6,"AnyValue",1997,11356],[1,"u32"],[5,"MetadataFlags",1263,11343],[10,"PolarsObjectSafe",1551,11326],[5,"BinaryArray",11357],[1,"f32"],[1,"u64"],[5,"Metadata",1263,11343],[5,"RwLockWriteGuard",11358],[5,"Int32Type",1997,11316],[5,"DateType",1997,11316],[5,"Logical",1997,11359],[5,"Int64Type",1997,11316],[6,"TimeUnit",1997,11360],[5,"DatetimeType",1997,11316],[5,"Int128Type",1997,11316],[5,"DecimalType",1997,11316],[5,"DurationType",1997,11316],[10,"ExactSizeIterator",11361],[5,"TimeType",1997,11316],[10,"PolarsFloatType",1997,11316],[6,"IsSorted",10802,11362],[10,"PolarsIterator",1206,11363],[6,"ChunkedArrayLayout",17,11317],[10,"NumCast",11323],[5,"Scalar",1997,11356],[1,"f64"],[6,"MetadataReadGuard",1263,11364],[5,"IMMetadata",1263,11365],[5,"Arc",4229,11366],[10,"MetadataTrait",1263,11367],[5,"RwLockReadGuard",11358],[5,"Int16Type",1997,11316],[1,"i16"],[1,"i128"],[5,"Range",11368],[5,"UInt16Type",1997,11316],[1,"u16"],[5,"Int8Type",1997,11316],[1,"i8"],[5,"UInt64Type",1997,11316],[1,"i32"],[5,"UInt8Type",1997,11316],[5,"Field",1997,11369],[10,"ParallelIterator",11353],[10,"IndexedParallelIterator",11353],[6,"QuantileInterpolOptions",4229,11370],[5,"RollingOptionsFixedWindow",4229,11371],[10,"PolarsOpsNumericType",11372],[10,"Sized",11332],[5,"ChunkId",4229,11373],[17,"IsStruct"],[5,"RandomState",11374],[5,"BytesHash",11375],[5,"OwnedRepr",11376],[1,"array"],[5,"Dim",11377],[5,"ArrayBase",11378],[5,"ViewRepr",11378],[6,"Either",11379],[5,"TypeId",11380],[5,"DataFrame",3565,11381],[5,"NullableIdxSize",4229,11373],[10,"FnOnce",11321],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",850,11382],[5,"AnonymousListBuilder",878,11383],[5,"AnonymousOwnedListBuilder",878,11383],[5,"ListBooleanChunkedBuilder",878,11384],[5,"ListPrimitiveChunkedBuilder",878,11385],[10,"ListBuilderTrait",878,11386],[10,"ChunkedBuilder",878,11387],[5,"ListStringChunkedBuilder",878,11388],[5,"ListBinaryChunkedBuilder",878,11388],[5,"ListNullChunkedBuilder",878,11389],[5,"BinViewChunkedBuilder",878,11390],[10,"ViewType",11391],[5,"BooleanChunkedBuilder",878,11392],[5,"NullChunkedBuilder",878,11393],[5,"PrimitiveChunkedBuilder",878,11394],[10,"Clone",11395],[5,"NullChunked",11396],[10,"NewChunkedArray",878,11387],[10,"Hasher",11397],[10,"ChunkedCollectInferIterExt",1186,11398],[10,"ChunkedCollectIterExt",1186,11398],[10,"Canonical",1200,11399],[10,"ChunkedCollectParIterExt",1202,11400],[10,"FromParIterWithDtype",1202,11400],[5,"BooleanArray",11401],[5,"BoolIterNoNull",1206,11363],[5,"FixedSizeListArray",11402],[5,"FixedSizeListIterNoNull",1206,11363],[5,"SomeIterator",1206,11363],[5,"MetadataEnv",1263,11403],[10,"MetadataCollectable",1263,11404],[5,"Iter",11405],[5,"IterNames",11405],[5,"File",11406],[5,"Mutex",11407],[6,"MetadataMerge",1263,11343],[5,"RwLock",11358],[5,"ObjectArray",1551,11326],[6,"ArrowDataType",1997,11408],[10,"Any",11380],[10,"Debug",11346],[5,"BitmapIter",11409],[6,"ZipValidity",11410],[5,"ObjectChunkedBuilder",1628,11411],[10,"AnonymousObjectBuilder",1651,11412],[5,"ObjectRegistry",1651,11412],[17,"FuncRet"],[10,"ChunkApply",1679,11413],[10,"ChunkApplyKernel",1679,11413],[10,"ChunkSort",1679,11413],[10,"ChunkUnique",1679,11413],[10,"ChunkCast",1679,11413],[6,"FillNullStrategy",1679,11413],[10,"ChunkCompare",10802,11413],[10,"ChunkExplode",1679,11413],[10,"ChunkFillNullValue",1679,11413],[10,"ChunkFilter",1679,11413],[10,"ChunkFull",1679,11413],[10,"ChunkFullNull",1679,11413],[10,"ChunkAnyValue",1679,11413],[10,"IsFirstDistinct",1679,11413],[10,"IsLastDistinct",1679,11413],[10,"ChunkAgg",1679,11413],[10,"ChunkQuantile",1679,11413],[10,"ChunkExpandAtIndex",1679,11413],[10,"Reinterpret",1679,11413],[10,"ChunkReverse",1679,11413],[10,"ChunkRollApply",1679,11413],[10,"ChunkSet",1679,11413],[10,"ChunkShift",1679,11413],[10,"ChunkShiftFill",1679,11413],[10,"SlicedArray",1679,11414],[10,"ChunkVar",1679,11413],[10,"ChunkTake",1679,11413],[10,"ChunkTakeUnchecked",1679,11413],[10,"ChunkBytes",1679,11413],[10,"ChunkZip",1679,11413],[10,"BinaryFnMut",1886,11415],[10,"StaticArray",1997,11416],[10,"TernaryFnMut",1886,11415],[10,"Error",11417],[10,"UnaryFnMut",1886,11415],[5,"PrimitiveArray",11418],[6,"SearchSortedSide",1926,11419],[5,"NoNull",4229,11420],[5,"RowsEncoded",11421],[5,"NaiveDateTime",11422],[6,"Tz",11423],[5,"NaiveTime",11424],[5,"CategoricalChunked",1997,11425],[5,"CategoricalChunkedBuilder",1997,11426],[10,"ArrayFromIter",1997,11427],[10,"ArrayFromIterDtype",1997,11427],[10,"AsRefDataType",1997,11335],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",11428],[10,"From",11352],[5,"BinaryViewArrayGeneric",11391],[6,"RevMapping",1997,11429],[10,"CategoricalMergeOperation",1997,11430],[10,"LogicalType",1997,11359],[6,"CategoricalOrdering",1997,11429],[5,"OwnedObject",1997,11356],[6,"UnknownKind",1997,11335],[5,"CompatLevel",1997,11335],[5,"CategoricalType",1997,11316],[6,"ArrowTimeUnit",1997],[10,"ArrayCollectIterExt",1997,11427],[5,"GlobalRevMapMerger",1997,11430],[10,"Into",11352],[10,"NumericNative",1997,11316],[5,"ArrowField",4229],[6,"IntegerType",11431],[6,"PrimitiveType",11432],[5,"TimeDelta",11433],[5,"NaiveDate",11434],[5,"LazyCompact",11435],[5,"SmartString",11436],[10,"GetAnyValue",1997,11356],[10,"IntoScalar",1997,11437],[5,"CatIter",1997,11425],[6,"Ordering",11438],[1,"u128"],[6,"PhysicalType",11431],[5,"StringCacheHolder",3449,11439],[5,"ErrString",3470,11318],[6,"PolarsWarning",3470,11440],[6,"ParquetError",11441],[5,"Error",11442],[5,"Utf8Error",11443],[5,"Error",11444],[5,"TryReserveError",11445],[6,"Error",11446],[10,"Display",11346],[5,"Schema",4229,11447],[10,"IntoSeries",10802,11448],[6,"NullStrategy",3565,11381],[6,"UniqueKeepStrategy",3565,11381],[5,"HashSet",11449],[5,"ArrowSchema",4229,11450],[5,"Row",4117,11451],[5,"GroupBy",3858,11452],[5,"DynamicGroupOptions",4229,11453],[5,"RangeFull",11368],[5,"RangeFrom",11368],[5,"RangeToInclusive",11368],[5,"RangeInclusive",11368],[5,"RangeTo",11368],[5,"RecordBatchIter",3565,11381],[5,"PhysRecordBatchIter",3565,11381],[5,"LazyFrame",4229,11454],[5,"RollingGroupOptions",4229,11453],[10,"RangeBounds",11368],[10,"IntoVec",4229,11420],[6,"IndexOrder",4229,11455],[5,"RecordBatchT",11456],[5,"StructArray",4229,11457],[5,"UnpivotArgs",3828,11458],[5,"Duration",4229,11459],[5,"GroupsIdx",3858,11325],[5,"UnitVec",11460],[6,"GroupByMethod",3858,11452],[5,"SlicedGroups",3858,11325],[5,"GroupsProxyParIter",3858,11325],[10,"UnindexedConsumer",11461],[6,"GroupsIndicator",3858,11325],[6,"IRAggExpr",11462],[10,"IntoGroupsProxy",3858,11463],[5,"Copied",11464],[5,"Zip",11465],[5,"GroupsProxyIter",3858,11325],[10,"IsFloat",11466],[10,"NativeType",11467],[10,"AggList",4101,11468],[10,"TakeExtremum",4101,11469],[10,"PhysicalAggExpr",4114,11470],[6,"AnyValueBuffer",4117,11471],[6,"AnyValueBufferTrusted",4117,11471],[5,"Node",11472],[6,"IR",11473],[5,"Arena",11472],[6,"AExpr",11462],[10,"JoinDispatch",4229,11474],[5,"JoinArgs",4229,11475],[10,"DfTake",4229,11476],[10,"DataFrameOps",4229,11477],[5,"CsvReader",4229,11478],[10,"PhysicalIoExpr",11479],[10,"MmapBytesReader",11480],[6,"Expr",4229,11481],[10,"LhsNumOps",11260,11324],[10,"NumOpsDispatch",11260,11324],[5,"LazyGroupBy",4229,11454],[10,"Allocator",11482],[5,"JoinBuilder",4229,11454],[10,"AnonymousScan",4229,11483],[5,"ScanArgsAnonymous",4229,11484],[10,"FunctionOutputField",4229,11485],[5,"SpecialEq",4229,11485],[6,"VisitRecursion",11486],[6,"FunctionExpr",4229,11487],[10,"ArgAgg",4229,11488],[5,"ArrayNameSpace",4229,11489],[5,"ListNameSpace",4229,11490],[10,"SeriesTrait",10802,11362],[5,"FieldsMapper",4229,11491],[5,"IpcStreamReader",4229,11492],[10,"Read",11493],[10,"SeriesUdf",4229,11485],[10,"AsBinary",4229,11494],[10,"StringMethods",9746,11495],[5,"BorrowedFd",11496],[10,"AsFd",11496],[10,"AsList",4229,11497],[10,"AsRawFd",11498],[6,"AggExpr",4229,11481],[10,"SeriesSealed",4229,11499],[10,"AsString",4229,11500],[20,"MaybeUninit",11501],[10,"StringNameSpaceImpl",4229,11502],[5,"OwnedBatchedCsvReader",4229,11503],[5,"CsvWriter",4229,11504],[5,"BatchedWriter",11504],[10,"Write",11493],[5,"IpcWriter",4229,11505],[5,"BatchedWriter",11505],[5,"ParquetReader",4229,11506],[5,"BatchedParquetReader",4229,11507],[5,"ParquetWriter",4229,11508],[5,"BatchedWriter",11509],[5,"BatchedCsvReader",4229,11503],[5,"BinaryNameSpace",9652,11510],[6,"Operator",4229,11481],[10,"RenameAliasFn",4229,11485],[5,"UserDefinedFunction",4229,11511],[10,"SeriesBinaryUdf",4229,11485],[5,"InProcessQuery",4229,11512],[5,"HashMap",11513],[5,"CategoricalNameSpace",4229,11514],[10,"RoundSeries",4229,11515],[10,"TemporalMethods",10684,11516],[10,"NumOpsDispatchChecked",11281,11339],[5,"LazyCsvReader",4229,11517],[5,"ScanArgsIpc",4229,11518],[5,"LazyJsonLineReader",4229,11519],[5,"ScanArgsParquet",4229,11520],[5,"RollingOptionsDynamicWindow",4229,11521],[5,"Bounds",4229,11522],[6,"ClosedWindow",4229,11523],[6,"Label",4229,11523],[6,"StartBy",4229,11523],[5,"Window",4229,11524],[5,"CsvReadOptions",4229,11525],[5,"CsvParseOptions",4229,11525],[6,"CsvEncoding",4229,11525],[6,"CommentPrefix",4229,11525],[6,"NullValues",4229,11525],[5,"CsvWriterOptions",4229,11526],[5,"SerializeOptions",4229,11526],[6,"QuoteStyle",4229,11526],[6,"JoinCoalesce",4229,11475],[5,"IpcScanOptions",4229,11527],[6,"JoinType",4229,11475],[5,"IpcWriterOptions",4229,11505],[6,"JoinValidation",4229,11475],[6,"IpcCompression",4229,11505],[5,"JsonWriterOptions",4229,11528],[5,"AsOfOptions",4229,11529],[6,"AsofStrategy",4229,11529],[5,"ParquetOptions",4229,11530],[6,"InterpolationMethod",4229,11531],[6,"ParallelStrategy",4229,11530],[6,"ClosedInterval",4229,11532],[6,"RankMethod",4229,11533],[5,"RankOptions",4229,11533],[5,"ParquetWriteOptions",4229,11534],[6,"ParquetCompression",4229,11534],[5,"GzipLevel",4229,11534],[5,"BrotliLevel",4229,11534],[5,"ZstdLevel",4229,11534],[6,"DslPlan",4229,11535],[5,"When",4229,11536],[5,"Then",4229,11536],[5,"ChainedWhen",4229,11536],[5,"ChainedThen",4229,11536],[6,"Excluded",4229,11481],[6,"BooleanFunction",4229,11537],[6,"CategoricalFunction",4229,11538],[6,"TemporalFunction",4229,11539],[6,"PowFunction",4229,11540],[6,"StringFunction",4229,11541],[6,"StructFunction",4229,11542],[5,"DatetimeArgs",4229,11543],[5,"DurationArgs",4229,11543],[5,"RollingCovOptions",4229,11544],[5,"StrptimeOptions",4229,11544],[5,"JoinOptions",4229,11544],[6,"WindowType",4229,11544],[6,"WindowMapping",4229,11544],[6,"NestedType",4229,11544],[5,"OptState",4229,11545],[6,"LiteralValue",4229,11546],[5,"AnonymousScanOptions",4229,11547],[5,"UnionArgs",4229,11547],[5,"StatisticsOptions",4229,11548],[5,"FileMetaData",4229,11549],[5,"RollingVarParams",4229,11550],[5,"RollingQuantileParams",4229,11550],[6,"NonExistent",4229,11551],[10,"LazyFileListReader",4229,11552],[5,"CloudOptions",9884,11553],[10,"Ord",11438],[6,"ColumnOrder",11554],[10,"BinaryNameSpaceImpl",4229,11555],[5,"JsonLineReader",4229,11556],[5,"PathBuf",11557],[10,"CrossJoin",4229,11558],[10,"ExprEvalExtension",4229,11559],[10,"DateMethods",9746,11560],[10,"DatetimeMethods",9746,11561],[10,"DurationMethods",9746,11562],[5,"IpcStreamWriterOption",4229,11492],[10,"BinaryUdfOutputField",4229,11485],[5,"CStr",11563],[10,"Default",11564],[5,"RowGroupMetaData",11565],[5,"ParquetStatistics",4229],[6,"NullBehavior",11287,11566],[5,"Weak",11366],[5,"DateLikeNameSpace",10250,11567],[1,"char"],[10,"FromIterator",11347],[10,"SchemaNamesAndDtypes",4229,11447],[10,"SeriesMethods",4229,11568],[10,"PartialEq",11438],[10,"Scalar",11569],[10,"ListNameSpaceExtension",4229,11570],[10,"Command",11571],[5,"Path",11557],[5,"StructNameSpace",4229,11572],[10,"SerReader",4229,11573],[10,"SerWriter",4229,11573],[5,"IpcReader",4229,11527],[5,"IpcStreamWriter",4229,11492],[5,"JsonWriter",4229,11528],[5,"JsonReader",4229,11528],[10,"UdfSchema",4229,11574],[6,"ListFunction",11575],[6,"ArrayFunction",11576],[6,"BinaryFunction",11577],[6,"RangeFunction",11578],[1,"never"],[5,"OsString",11579],[5,"OsStr",11579],[10,"ToOwned",11333],[5,"CString",11580],[5,"MutableStatistics",11581],[5,"MutableStructArray",11582],[5,"GrowableStruct",11583],[10,"FromData",10244,11584],[5,"Buffer",11585],[10,"FromDataUtf8",10244,11584],[10,"FromDataBinary",10244,11584],[5,"ListArray",11586],[6,"Ambiguous",4229,11551],[10,"NamedFromOwned",4229,11587],[10,"DataFrameJoinOps",4229,11588],[5,"FunctionOptions",11547],[10,"PartialOrd",11438],[6,"Context",11535],[10,"IndexOfSchema",4229,11447],[17,"DataType"],[5,"BoundsIter",4229,11524],[6,"ReaderBytes",11480],[10,"PolarsTemporalGroupby",4229,11453],[10,"Hash",11397],[10,"SeriesJoin",4229,11589],[10,"TimeMethods",9746,11590],[5,"NonZero",11591],[10,"IntoListNameSpace",4229,11570],[5,"FileMetaData",11592],[5,"StructValueIter",11593],[10,"AsofJoinBy",4229,11594],[10,"ListNameSpaceImpl",4229,11595],[5,"ExprNameNameSpace",4229,11596],[5,"KeyValue",11592],[10,"IntoLazy",4229,11454],[10,"Literal",4229,11546],[5,"Null",4229,11546],[10,"CloneToUninit",11395],[5,"RowIndex",11597],[10,"ChunkAggSeries",4229,11598],[10,"QuantileAggSeries",4229,11599],[10,"IndexToUsize",4229,11600],[10,"NamedFrom",4229,11587],[6,"RowGroupFetcher",11507],[5,"SplitNChars",4229,11601],[5,"Pin",11602],[5,"Request",11417],[10,"SeriesRank",4229,11533],[5,"BorrowedCursor",11603],[10,"VarInt",11604],[5,"IoSliceMut",11493],[10,"SeriesOpsTime",9746,11605],[10,"PolarsRound",4229,11606],[5,"AnonymousScanArgs",4229,11483],[10,"ChunkedSet",4229,11372],[5,"SchemaDescriptor",11607],[6,"SeekFrom",11493],[10,"VarAggSeries",4229,11608],[5,"StringNameSpace",11609],[10,"TakeChunked",4229,11476],[5,"IRPlan",11473],[10,"ToDummies",4229,11610],[10,"PolarsTruncate",4229,11611],[5,"AllocError",11482],[5,"SchemaInferenceResult",10651,11612],[10,"PolarsUpsample",4229,11613],[10,"VecHash",4229,11614],[6,"JsonFormat",4229,11528],[5,"BTreeMap",11615],[10,"WriteDataFrameToFile",11573],[5,"IoSlice",11493],[10,"ArrayNameSpace",9633,11616],[10,"AsArray",9633,11617],[6,"Buffer",9668,11618],[10,"AsString",9813,11495],[6,"Pattern",9813,11619],[5,"DatetimeInfer",9853,11620],[10,"StrpTimeParser",9853,11620],[17,"Error"],[10,"TryFromWithUnit",9853,11620],[6,"CloudType",9884,11553],[5,"AnonymousBuilder",10305,11621],[6,"RollingFunction",10547,11622],[6,"RollingFunctionBy",10577,11623],[5,"MutableNullArray",10620,11624],[5,"MutableBitmap",11625],[10,"AsSeries",10684,11516],[5,"Utf8Array",11626],[5,"SeriesIter",10802,11627],[5,"Rc",11628],[8,"FillNullLimit",1679],[10,"InitHashMaps",1997],[10,"InitHashMaps2",1997],[5,"TrueT",1997],[8,"PolarsResult",3470],[15,"IO",9565],[15,"Context",9565],[15,"Count",9559],[15,"Slice",9560],[8,"ChunkJoinOptIds",4229],[8,"DynArgs",4229],[8,"AllowedOptimizations",4229],[10,"ListFromIter",4229],[15,"Quantile",9438],[15,"Min",9438],[15,"Max",9438],[15,"IsBetween",10500],[15,"Any",10500],[15,"All",10500],[15,"GroupBy",9448],[15,"Union",9448],[15,"Sort",9448],[15,"Cache",9448],[15,"ExtContext",9448],[15,"DataFrameScan",9448],[15,"IR",9448],[15,"Select",9448],[15,"HStack",9448],[15,"Scan",9448],[15,"MapFunction",9448],[15,"Filter",9448],[15,"Distinct",9448],[15,"Slice",9448],[15,"Sink",9448],[15,"Join",9448],[15,"HConcat",9448],[15,"SortBy",9502],[15,"Filter",9502],[15,"Cast",9502],[15,"Sort",9502],[15,"Gather",9502],[15,"RenameAlias",9502],[15,"Ternary",9502],[15,"Function",9502],[15,"Window",9502],[15,"AnonymousFunction",9502],[15,"Slice",9502],[15,"BinaryExpr",9502],[15,"Round",10503],[15,"RoundSF",10503],[15,"Clip",10503],[15,"BackwardFill",10503],[15,"ForwardFill",10503],[15,"Random",10503],[15,"GatherEvery",10503],[15,"ValueCounts",10503],[15,"Rank",10503],[15,"ReplaceStrict",10503],[15,"CumCount",10503],[15,"CumSum",10503],[15,"CumProd",10503],[15,"CumMin",10503],[15,"CumMax",10503],[15,"Range",9562],[15,"ConcatHorizontal",10525],[15,"ConcatVertical",10525],[15,"ExtractGroups",10525],[15,"SplitExact",10525],[15,"Contains",10525],[15,"Find",10525],[15,"Replace",10525],[15,"DatetimeFunction",10539],[5,"Utf8Field",9668],[5,"CategoricalField",9668],[5,"DatetimeField",9668],[15,"Datetime",9742],[10,"Utf8FromIter",10798],[10,"BinaryFromIter",10798],[6,"BitRepr",10802]],"r":[[1,11629],[2,11629],[3,11629],[4,11629],[6,11439],[7,11629],[8,11629],[9,11629],[13,11629],[14,11629],[16,11439],[17,11317],[18,11317],[19,11317],[24,11630],[116,11317],[139,11317],[140,11317],[168,11317],[170,11317],[223,11317],[276,11317],[425,11317],[474,11317],[579,11317],[582,11317],[722,11317],[850,11382],[878,11383],[879,11383],[880,11390],[881,11390],[882,11392],[883,11387],[884,11388],[885,11384],[886,11386],[887,11389],[888,11385],[889,11388],[890,11387],[891,11393],[892,11394],[893,11390],[1030,11387],[1046,11386],[1074,11387],[1139,11383],[1140,11383],[1141,11388],[1142,11384],[1143,11386],[1144,11389],[1145,11385],[1146,11388],[1154,11386],[1156,11338],[1186,11398],[1187,11398],[1200,11399],[1202,11400],[1203,11400],[1206,11363],[1207,11363],[1208,11363],[1209,11363],[1245,11363],[1261,11631],[1262,11631],[1268,11365],[1273,11343],[1274,11404],[1275,11403],[1276,11343],[1277,11343],[1278,11343],[1279,11364],[1280,11367],[1551,11326],[1552,11326],[1553,11326],[1554,11326],[1566,11326],[1596,11326],[1597,11632],[1628,11411],[1651,11412],[1652,11412],[1653,11412],[1654,11412],[1666,11412],[1667,11412],[1668,11412],[1671,11412],[1673,11412],[1680,11413],[1681,11413],[1682,11413],[1683,11413],[1684,11413],[1685,11413],[1686,11413],[1687,11413],[1688,11413],[1689,11413],[1690,11413],[1691,11413],[1692,11413],[1693,11413],[1694,11413],[1695,11413],[1696,11413],[1697,11413],[1698,11413],[1699,11413],[1700,11413],[1701,11413],[1702,11413],[1703,11413],[1704,11413],[1705,11413],[1706,11413],[1709,11413],[1710,11413],[1719,11413],[1720,11414],[1722,11337],[1723,11337],[1736,11413],[1783,11413],[1786,11413],[1795,11413],[1798,11413],[1841,11413],[1847,11413],[1884,11413],[1886,11415],[1890,11415],[1891,11415],[1892,11415],[1893,11415],[1894,11415],[1895,11415],[1896,11415],[1897,11415],[1898,11415],[1899,11415],[1900,11415],[1901,11415],[1902,11415],[1903,11415],[1904,11415],[1905,11415],[1906,11415],[1907,11415],[1908,11415],[1909,11415],[1910,11415],[1911,11415],[1912,11415],[1913,11415],[1914,11415],[1915,11415],[1916,11415],[1917,11415],[1918,11415],[1919,11415],[1920,11415],[1921,11633],[1922,11633],[1923,11634],[1924,11634],[1925,11634],[1929,11419],[1931,11419],[1951,11419],[1957,11414],[1958,11635],[1959,11635],[1960,11635],[1961,11635],[1964,11636],[1965,11637],[1966,11637],[1967,11637],[1968,11637],[1969,11637],[1970,11637],[1971,11637],[1972,11637],[1973,11414],[1974,11337],[1975,11337],[1986,11638],[1987,11639],[1988,11639],[1989,11639],[1990,11638],[1991,11638],[1992,11640],[1993,11638],[1994,11639],[1995,11639],[1996,11639],[1998,11356],[2002,11316],[2003,11427],[2004,11427],[2005,11427],[2006,11408],[2008,11335],[2012,11316],[2014,11316],[2015,11316],[2017,11316],[2022,11316],[2023,11316],[2024,11425],[2027,11425],[2028,11426],[2029,11430],[2030,11429],[2031,11316],[2032,11335],[2033,11335],[2034,11335],[2035,11335],[2040,11641],[2041,11316],[2044,11642],[2045,11316],[2050,11643],[2051,11316],[2056,11644],[2057,11316],[2061,11316],[2062,11369],[2063,11369],[2066,11316],[2072,11316],[2073,11316],[2077,11316],[2078,11316],[2079,11356],[2081,11430],[2085,11645],[2086,11600],[2087,11645],[2088,11645],[2089,11646],[2090,11645],[2092,11316],[2093,11316],[2097,11316],[2098,11316],[2102,11316],[2103,11316],[2107,11316],[2108,11316],[2112,11316],[2113,11316],[2115,11437],[2126,11316],[2127,11316],[2129,11359],[2130,11359],[2142,11316],[2145,11316],[2147,11316],[2148,11356],[2152,11646],[2153,11646],[2154,11645],[2155,11646],[2156,11646],[2157,11316],[2158,11316],[2159,11316],[2160,11316],[2162,11429],[2163,11356],[2166,11416],[2170,11316],[2172,11316],[2177,11316],[2182,11647],[2183,11316],[2184,11360],[2185,11335],[2188,11316],[2192,11316],[2193,11316],[2197,11316],[2198,11316],[2202,11316],[2203,11316],[2207,11316],[2208,11316],[2212,11335],[2382,11430],[2395,11359],[2542,11335],[3061,11430],[3062,11430],[3066,11335],[3426,11425],[3427,11425],[3428,11426],[3429,11430],[3430,11429],[3432,11430],[3436,11429],[3437,11430],[3439,11430],[3440,11430],[3441,11425],[3442,11425],[3443,11429],[3448,11429],[3449,11439],[3455,11439],[3458,11439],[3466,11439],[3476,11318],[3483,11318],[3484,11318],[3485,11440],[3501,11318],[3514,11318],[3530,11440],[3537,11318],[3538,11318],[3539,11318],[3540,11318],[3541,11318],[3542,11440],[3543,11318],[3562,11648],[3563,11648],[3564,11648],[3566,11381],[3571,11381],[3572,11381],[3574,11381],[3575,11381],[3650,11381],[3681,11381],[3745,11381],[3828,11458],[3858,11325],[3861,11452],[3862,11452],[3864,11325],[3865,11325],[3866,11325],[3867,11325],[3868,11325],[3869,11325],[3872,11325],[3874,11463],[3886,11325],[3895,11452],[3967,11452],[3977,11452],[4101,11468],[4102,11469],[4103,11469],[4104,11469],[4105,11469],[4106,11469],[4107,11469],[4108,11469],[4109,11469],[4110,11469],[4114,11470],[4119,11471],[4120,11471],[4140,11451],[4174,11451],[4195,11451],[4209,11451],[4210,11451],[4211,11451],[4227,11649],[4228,11649],[4231,11481],[4238,11545],[4240,11551],[4243,11483],[4244,11483],[4245,11547],[4251,11356],[4252,11366],[4253,11488],[4256,11382],[4261,11316],[4262,11427],[4264,11427],[4265,11427],[4266,11489],[4267,11328],[4268,11408],[4270,11450],[4272,11494],[4273,11497],[4275,11529],[4276,11335],[4277,11500],[4279,11529],[4280,11594],[4281,11529],[4284,11650],[4290,11503],[4291,11507],[4296,11316],[4297,11390],[4300,11555],[4302,11316],[4303,11316],[4305,11316],[4306,11485],[4313,11316],[4314,11392],[4315,11537],[4316,11316],[4317,11325],[4320,11522],[4321,11524],[4323,11534],[4328,11425],[4332,11425],[4333,11426],[4334,11538],[4335,11430],[4336,11514],[4337,11429],[4338,11316],[4342,11536],[4343,11536],[4344,11413],[4345,11598],[4346,11413],[4347,11413],[4348,11413],[4349,11413],[4350,11413],[4351,11413],[4352,11413],[4353,11413],[4354,11413],[4355,11413],[4356,11413],[4357,11413],[4358,11373],[4359,11475],[4360,11413],[4361,11413],[4362,11413],[4363,11413],[4364,11413],[4365,11413],[4366,11413],[4367,11413],[4368,11413],[4369,11413],[4370,11413],[4371,11413],[4372,11317],[4373,11387],[4374,11398],[4375,11398],[4376,11372],[4378,11532],[4379,11523],[4387,11525],[4388,11335],[4400,11558],[4401,11525],[4402,11525],[4403,11525],[4404,11478],[4405,11504],[4406,11526],[4413,11335],[4414,11335],[4415,11381],[4416,11588],[4417,11477],[4421,11335],[4429,11641],[4430,11560],[4432,11316],[4436,11543],[4437,11642],[4439,11561],[4440,11316],[4447,11643],[4448,11316],[4450,11476],[4457,11535],[4461,11459],[4467,11543],[4468,11644],[4469,11562],[4470,11316],[4471,11550],[4472,11453],[4481,11481],[4484,11481],[4485,11559],[4486,11596],[4493,11650],[4494,11650],[4495,11316],[4496,11369],[4500,11369],[4501,11491],[4502,11596],[4503,11549],[4504,11651],[4506,11413],[4507,11413],[4517,11316],[4525,11316],[4526,11316],[4531,11316],[4532,11316],[4540,11584],[4541,11584],[4542,11584],[4546,11487],[4547,11485],[4551,11356],[4553,11485],[4555,11430],[4556,11452],[4558,11452],[4560,11325],[4561,11325],[4562,11325],[4563,11325],[4564,11325],[4565,11325],[4570,11534],[4580,11645],[4581,11650],[4587,11600],[4588,11645],[4589,11325],[4590,11373],[4591,11645],[4594,11512],[4596,11447],[4597,11455],[4598,11600],[4599,11646],[4600,11645],[4602,11475],[4605,11316],[4606,11316],[4611,11316],[4612,11316],[4617,11316],[4618,11316],[4623,11316],[4624,11316],[4629,11316],[4630,11316],[4633,11531],[4635,11463],[4636,11454],[4637,11570],[4638,11437],[4639,11448],[4640,11420],[4642,11505],[4643,11527],[4644,11527],[4645,11492],[4646,11492],[4647,11492],[4648,11505],[4649,11505],[4652,11413],[4656,11413],[4670,11475],[4671,11454],[4672,11475],[4673,11474],[4674,11544],[4676,11475],[4677,11475],[4680,11528],[4681,11556],[4683,11528],[4684,11528],[4685,11528],[4689,11523],[4691,11652],[4693,11652],[4694,11652],[4700,11517],[4701,11552],[4702,11454],[4703,11454],[4704,11519],[4711,11475],[4716,11324],[4723,11388],[4724,11384],[4725,11386],[4726,11316],[4728,11653],[4729,11490],[4730,11570],[4731,11595],[4732,11385],[4733,11388],[4734,11316],[4735,11546],[4737,11546],[4739,11359],[4742,11359],[4790,11546],[4795,11587],[4796,11587],[4808,11544],[4810,11387],[4812,11420],[4813,11551],[4825,11546],[4833,11525],[4834,11373],[4835,11373],[4836,11324],[4837,11339],[4838,11316],[4841,11316],[4843,11316],[4848,11481],[4849,11545],[4857,11503],[4858,11356],[4860,11654],[4861,11530],[4862,11534],[4863,11530],[4864,11506],[4866,11534],[4867,11508],[4870,11646],[4871,11646],[4872,11645],[4873,11646],[4874,11646],[4876,11316],[4877,11318],[4878,11316],[4879,11316],[4880,11363],[4881,11316],[4882,11326],[4883,11318],[4884,11606],[4885,11453],[4886,11611],[4888,11613],[4890,11540],[4892,11394],[4895,11599],[4896,11370],[4898,11526],[4906,11533],[4907,11533],[4908,11413],[4910,11485],[4918,11429],[4928,11544],[4931,11453],[4932,11521],[4933,11371],[4934,11550],[4935,11655],[4936,11550],[4940,11515],[4941,11656],[4946,11356],[4949,11484],[4950,11518],[4951,11520],[4952,11447],[4955,11447],[4956,11447],[4957,11419],[4962,11573],[4963,11573],[4964,11526],[4965,11320],[4967,11485],[4968,11589],[4969,11568],[4970,11605],[4971,11533],[4972,11499],[4973,11362],[4974,11485],[4987,11414],[4988,11325],[4996,11337],[4997,11337],[4998,11485],[5002,11601],[5004,11523],[5006,11416],[5007,11548],[5015,11439],[5017,11316],[5018,11390],[5020,11541],[5021,11495],[5022,11502],[5024,11316],[5031,11544],[5035,11457],[5036,11630],[5039,11542],[5040,11572],[5042,11316],[5050,11476],[5052,11539],[5053,11516],[5055,11536],[5063,11647],[5064,11590],[5066,11316],[5067,11360],[5068,11335],[5072,11610],[5086,11316],[5093,11316],[5094,11316],[5099,11316],[5100,11316],[5105,11316],[5106,11316],[5111,11316],[5112,11316],[5113,11574],[5117,11547],[5119,11381],[5122,11335],[5123,11458],[5126,11511],[5135,11608],[5136,11614],[5140,11536],[5142,11524],[5145,11544],[5146,11544],[5156,11534],[5248,11657],[5252,11657],[5261,11658],[5271,11452],[5273,11659],[5275,11660],[5286,11660],[5297,11661],[5303,11662],[5306,11663],[5319,11664],[5324,11664],[5327,11413],[5337,11665],[5361,11666],[5365,11667],[5369,11668],[5377,11662],[5379,11536],[5628,11669],[5636,11430],[5641,11667],[5652,11662],[5667,11670],[5670,11671],[5672,11671],[5674,11671],[5992,11672],[6001,11660],[6005,11673],[6006,11659],[6008,11674],[6020,11659],[6031,11674],[6033,11675],[6036,11674],[6037,11674],[6038,11675],[6039,11675],[6048,11653],[6049,11676],[6055,11677],[6056,11335],[6062,11678],[6064,11660],[6065,11678],[6067,11678],[6069,11678],[6071,11660],[6072,11678],[6079,11629],[6081,11663],[6082,11665],[6083,11543],[6085,11663],[6086,11663],[6087,11639],[6088,11639],[6089,11639],[6155,11653],[6156,11474],[6413,11581],[6415,11629],[6417,11679],[6559,11680],[6560,11662],[6565,11659],[6566,11659],[6568,11543],[6577,11459],[6578,11459],[6579,11447],[6839,11654],[6840,11654],[6841,11654],[6847,11452],[6871,11413],[6909,11662],[6913,11653],[6917,11413],[6922,11681],[7020,11452],[7024,11660],[7028,11675],[7244,11413],[7254,11662],[7256,11413],[7285,11654],[7301,11650],[7303,11650],[7314,11523],[7315,11523],[7395,11682],[7406,11683],[7407,11683],[7409,11684],[7420,11659],[7426,11600],[7427,11612],[7560,11663],[7561,11663],[7563,11685],[7564,11531],[7566,11685],[7567,11686],[7711,11532],[7713,11654],[7714,11687],[7722,11688],[7727,11689],[7730,11690],[7738,11667],[7741,11667],[7747,11676],[7781,11662],[7796,11662],[7808,11546],[7855,11430],[7856,11430],[7861,11661],[7872,11662],[7875,11662],[7883,11691],[7884,11650],[7885,11667],[7895,11667],[7901,11667],[7914,11335],[7925,11667],[7946,11665],[7984,11665],[7995,11692],[7996,11693],[8043,11694],[8066,11667],[8070,11662],[8071,11653],[8123,11318],[8124,11318],[8125,11318],[8126,11318],[8133,11588],[8144,11667],[8175,11660],[8186,11695],[8187,11696],[8189,11697],[8196,11697],[8197,11697],[8199,11683],[8202,11654],[8294,11669],[8297,11413],[8310,11670],[8350,11653],[8368,11413],[8385,11601],[8387,11601],[8405,11682],[8418,11665],[8419,11698],[8421,11698],[8423,11698],[8425,11698],[8427,11698],[8439,11667],[8462,11536],[8466,11663],[9036,11662],[9058,11653],[9217,11536],[9428,11699],[9436,11413],[9585,11468],[9586,11469],[9587,11469],[9588,11469],[9589,11469],[9590,11469],[9591,11469],[9592,11469],[9593,11469],[9594,11469],[9598,11415],[9602,11415],[9603,11415],[9604,11415],[9605,11415],[9606,11415],[9607,11415],[9608,11415],[9609,11415],[9610,11415],[9611,11415],[9612,11415],[9613,11415],[9614,11415],[9615,11415],[9616,11415],[9617,11415],[9618,11415],[9619,11415],[9620,11415],[9621,11415],[9622,11415],[9623,11415],[9624,11415],[9625,11415],[9626,11415],[9627,11415],[9628,11415],[9629,11415],[9630,11415],[9631,11415],[9632,11415],[9633,11616],[9634,11617],[9652,11510],[9669,11618],[9671,11618],[9674,11618],[9688,11618],[9720,11618],[9745,11514],[9746,11560],[9747,11561],[9748,11562],[9749,11521],[9750,11605],[9751,11495],[9752,11590],[9805,11700],[9813,11495],[9819,11619],[9820,11495],[9844,11495],[9853,11620],[9855,11620],[9856,11620],[9867,11620],[9886,11553],[9887,11553],[9922,11701],[9935,11553],[9936,11553],[9942,11356],[9946,11316],[9947,11427],[9948,11427],[9949,11427],[9950,11408],[9952,11335],[9956,11316],[9958,11316],[9959,11316],[9961,11316],[9966,11316],[9967,11316],[9968,11425],[9971,11425],[9972,11426],[9973,11430],[9974,11429],[9975,11316],[9976,11335],[9977,11335],[9978,11335],[9979,11335],[9984,11641],[9985,11316],[9988,11642],[9989,11316],[9994,11643],[9995,11316],[10000,11644],[10001,11316],[10005,11316],[10006,11369],[10007,11369],[10010,11316],[10016,11316],[10017,11316],[10021,11316],[10022,11316],[10023,11356],[10025,11430],[10029,11645],[10030,11600],[10031,11645],[10032,11645],[10033,11646],[10034,11645],[10036,11316],[10037,11316],[10041,11316],[10042,11316],[10046,11316],[10047,11316],[10051,11316],[10052,11316],[10056,11316],[10057,11316],[10059,11437],[10070,11316],[10071,11316],[10073,11359],[10074,11359],[10086,11316],[10089,11316],[10091,11316],[10092,11356],[10096,11646],[10097,11646],[10098,11645],[10099,11646],[10100,11646],[10101,11316],[10102,11316],[10103,11316],[10104,11316],[10106,11429],[10107,11356],[10110,11416],[10114,11316],[10116,11316],[10121,11316],[10126,11647],[10127,11316],[10128,11360],[10129,11335],[10132,11316],[10136,11316],[10137,11316],[10141,11316],[10142,11316],[10146,11316],[10147,11316],[10151,11316],[10152,11316],[10156,11335],[10169,11430],[10172,11359],[10177,11335],[10194,11430],[10195,11430],[10196,11335],[10214,11425],[10215,11425],[10216,11426],[10217,11430],[10218,11429],[10220,11430],[10224,11429],[10225,11430],[10227,11430],[10228,11430],[10229,11425],[10230,11425],[10231,11429],[10236,11429],[10237,11439],[10238,11439],[10239,11439],[10240,11439],[10241,11683],[10242,11683],[10243,11683],[10244,11584],[10245,11584],[10246,11584],[10250,11567],[10302,11470],[10305,11621],[10325,11633],[10326,11633],[10341,11537],[10344,11538],[10383,11487],[10426,11540],[10458,11541],[10466,11542],[10471,11539],[10496,11487],[10497,11487],[10498,11487],[10499,11487],[10541,11538],[10545,11540],[10551,11622],[10581,11623],[10607,11634],[10608,11634],[10609,11634],[10610,11531],[10613,11531],[10614,11686],[10615,11702],[10616,11703],[10617,11703],[10618,11703],[10619,11703],[10620,11624],[10651,11612],[10662,11612],[10667,11612],[10668,11612],[10681,11419],[10682,11419],[10683,11419],[10684,11516],[10685,11516],[10706,11414],[10709,11414],[10710,11635],[10711,11635],[10712,11635],[10713,11635],[10716,11636],[10717,11637],[10718,11637],[10719,11637],[10720,11637],[10721,11637],[10722,11637],[10723,11637],[10724,11637],[10725,11414],[10726,11337],[10727,11337],[10738,11500],[10739,11601],[10740,11502],[10759,11682],[10767,11601],[10769,11601],[10772,11682],[10778,11698],[10780,11698],[10782,11698],[10784,11698],[10786,11698],[10792,11511],[10798,11704],[10799,11704],[10803,11362],[10804,11413],[10806,11448],[10807,11362],[10811,11320],[10812,11627],[10813,11627],[10814,11362],[10824,11320],[10830,11320],[11019,11320],[11141,11320],[11236,11334],[11237,11334],[11260,11324],[11261,11324],[11262,11324],[11264,11324],[11268,11324],[11281,11339],[11282,11339],[11289,11566]],"b":[[28,"impl-Add-for-%26ChunkedArray%3CT%3E"],[29,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[30,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[31,"impl-Add-for-ChunkedArray%3CT%3E"],[32,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[33,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[34,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[35,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[36,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[37,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[38,"impl-Add-for-ChunkedArray%3CStringType%3E"],[39,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[41,"impl-AggList-for-ChunkedArray%3CStructType%3E"],[42,"impl-AggList-for-ChunkedArray%3CListType%3E"],[43,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[44,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[45,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[46,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[47,"impl-AggList-for-ChunkedArray%3CT%3E"],[48,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[51,"impl-ChunkedArray%3CFixedSizeListType%3E"],[52,"impl-ChunkedArray%3CListType%3E"],[53,"impl-ChunkedArray%3CListType%3E"],[54,"impl-ChunkedArray%3CFixedSizeListType%3E"],[58,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[59,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[60,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[61,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[62,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[63,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[65,"impl-ChunkedArray%3CFixedSizeListType%3E"],[66,"impl-ChunkedArray%3CListType%3E"],[68,"impl-ChunkedArray%3CFloat64Type%3E"],[69,"impl-ChunkedArray%3CFloat32Type%3E"],[72,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[73,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[74,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[75,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[76,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[77,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[78,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[79,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[80,"impl-ChunkedArray%3CT%3E"],[81,"impl-ChunkedArray%3CStringType%3E"],[82,"impl-ChunkedArray%3CBinaryType%3E"],[85,"impl-ChunkedArray%3CListType%3E"],[86,"impl-ChunkedArray%3CFixedSizeListType%3E"],[87,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[88,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[89,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[90,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[91,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[92,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[93,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[94,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[95,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[96,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[97,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[98,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[100,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[101,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[102,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[103,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[104,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[105,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[106,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[107,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[108,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[109,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[110,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[112,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[118,"impl-ChunkedArray%3CStringType%3E"],[119,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[123,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[124,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[127,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[128,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[129,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[130,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[131,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[132,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[133,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[134,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[143,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[152,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[157,"impl-ChunkedArray%3CStructType%3E"],[160,"impl-ChunkedArray%3CT%3E"],[161,"impl-Container-for-ChunkedArray%3CT%3E"],[180,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[181,"impl-Div-for-ChunkedArray%3CT%3E"],[182,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[183,"impl-Div-for-%26ChunkedArray%3CT%3E"],[190,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[191,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[192,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[193,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[194,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[195,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[196,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[197,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[198,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[199,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[200,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[201,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[202,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[203,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[204,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[205,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[206,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[207,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[208,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[209,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[210,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[211,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[215,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[216,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[217,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[218,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[219,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[220,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[221,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[224,"impl-Debug-for-ChunkedArray%3CT%3E"],[225,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[226,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[227,"impl-Debug-for-ChunkedArray%3CListType%3E"],[228,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[229,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[230,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[232,"impl-ChunkedArray%3CListType%3E"],[233,"impl-ChunkedArray%3CFixedSizeListType%3E"],[242,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[243,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[244,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[245,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[246,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[247,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[248,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[249,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[250,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[251,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[252,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[253,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[254,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[255,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[256,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[257,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[258,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[259,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[260,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[261,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[262,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[263,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[264,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[265,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[266,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[267,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[268,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[269,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[270,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[271,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[272,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[273,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[274,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[275,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[277,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[278,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[279,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[280,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[281,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[282,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[283,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[284,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[287,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[288,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[289,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[290,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[291,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[292,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[293,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[294,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[295,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[296,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[297,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[298,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[301,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[302,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[303,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[304,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[305,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[306,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[307,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[308,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[309,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[310,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[311,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[312,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[313,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[314,"impl-ChunkFullNull-for-ChunkedArray%3CStructType%3E"],[315,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[316,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[317,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[319,"impl-ChunkedArray%3CListType%3E"],[320,"impl-ChunkedArray%3CFixedSizeListType%3E"],[322,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[323,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[324,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[331,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[332,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[333,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[334,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[335,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[336,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[337,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[338,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[339,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[340,"impl-ChunkedArray%3CFixedSizeListType%3E"],[341,"impl-ChunkedArray%3CListType%3E"],[345,"impl-ChunkedArray%3CFixedSizeListType%3E"],[346,"impl-ChunkedArray%3CListType%3E"],[354,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[355,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[356,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[357,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[358,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[359,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[360,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[361,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[362,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[363,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[364,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[365,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[367,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[368,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[369,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[370,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[371,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[372,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[373,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[374,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[375,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[376,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[377,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[378,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[379,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[380,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[381,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[382,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[383,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[384,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[390,"impl-ChunkedArray%3CFixedSizeListType%3E"],[391,"impl-ChunkedArray%3CListType%3E"],[400,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[401,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[402,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[403,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[404,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[405,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[406,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[407,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[409,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[410,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-Container-for-ChunkedArray%3CT%3E"],[436,"impl-ChunkedArray%3CT%3E"],[441,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[442,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[443,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[444,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[445,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[446,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[447,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[448,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[449,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[450,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[451,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[452,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[453,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[454,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[455,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[456,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[457,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[458,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[459,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[460,"impl-ChunkedArray%3CBooleanType%3E"],[461,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[462,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[463,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[464,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[465,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[466,"impl-ChunkedArray%3CBooleanType%3E"],[467,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[468,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[469,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[470,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[471,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[472,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[480,"impl-ChunkedArray%3CBooleanType%3E"],[481,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[483,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[484,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[485,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[486,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[487,"impl-ChunkedArray%3CBooleanType%3E"],[488,"impl-ChunkedArray%3CT%3E"],[489,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[490,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[491,"impl-Mul-for-ChunkedArray%3CT%3E"],[492,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[495,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[496,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[497,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[499,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[500,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[501,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[502,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[503,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[504,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[505,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[506,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[507,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[508,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[509,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[510,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[511,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[512,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[513,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[514,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[515,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[516,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[517,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[518,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[520,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[521,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[522,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[523,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[524,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[525,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[526,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[527,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[528,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[529,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[530,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[531,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[532,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[533,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[534,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[535,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[536,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[537,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[538,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[539,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[540,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[542,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[543,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[544,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[545,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[546,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[547,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[548,"impl-ChunkExpandAtIndex%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[549,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[550,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[556,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[557,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[558,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[559,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[560,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[561,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[562,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[563,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[564,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[565,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[566,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[567,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[568,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[569,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[570,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[571,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[572,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[573,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[574,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[575,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[576,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[577,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[580,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[581,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[583,"impl-ChunkedArray%3CStringType%3E"],[584,"impl-ChunkedArray%3CListType%3E"],[585,"impl-ChunkedArray%3CStringType%3E"],[586,"impl-ChunkedArray%3CListType%3E"],[589,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[590,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[591,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[592,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[593,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[594,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[601,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[602,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[603,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[604,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[605,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[609,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[610,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[611,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[612,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[613,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[614,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[623,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[624,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[625,"impl-Rem-for-ChunkedArray%3CT%3E"],[626,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[629,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[630,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[631,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[632,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[633,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[634,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[635,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[636,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[641,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[642,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[643,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[644,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[645,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[646,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[647,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[648,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[649,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[650,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[651,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[652,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[653,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[654,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[655,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[661,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[662,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[663,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[664,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[665,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[666,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[667,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[668,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[669,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[670,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[671,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[672,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[673,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[674,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[675,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[676,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[678,"impl-Container-for-ChunkedArray%3CT%3E"],[679,"impl-ChunkedArray%3CT%3E"],[680,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[681,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[682,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[683,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[684,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[685,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[686,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[687,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[688,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[689,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[690,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[691,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[692,"impl-Container-for-ChunkedArray%3CT%3E"],[693,"impl-ChunkedArray%3CT%3E"],[695,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[696,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[697,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[699,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[700,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[701,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[702,"impl-Sub-for-ChunkedArray%3CT%3E"],[704,"impl-ChunkedArray%3CBooleanType%3E"],[705,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[706,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[707,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[708,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[710,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[711,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[714,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStructType%3E"],[715,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[716,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[717,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStructType%3E"],[718,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[719,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[720,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[721,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[726,"impl-ChunkedArray%3CFixedSizeListType%3E"],[727,"impl-ChunkedArray%3CListType%3E"],[728,"impl-ChunkedArray%3CListType%3E"],[729,"impl-ChunkedArray%3CT%3E"],[734,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[735,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[736,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[737,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[738,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[739,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[741,"impl-ChunkedArray%3CListType%3E"],[742,"impl-ChunkedArray%3CFixedSizeListType%3E"],[756,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[757,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[758,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[759,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[760,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[766,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[767,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[768,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[769,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[770,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[771,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[772,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[773,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[774,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[775,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[776,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[777,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[778,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[779,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[780,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[781,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[782,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[783,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[784,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[785,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[786,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[787,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[788,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[791,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[793,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[794,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[797,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[798,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[799,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[800,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[810,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[811,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[812,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[813,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[814,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[815,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[816,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[817,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[818,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[819,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[820,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[821,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[822,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[823,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[824,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[825,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[826,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[827,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[1025,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1026,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1301,"impl-MetadataProperties"],[1302,"impl-Flags-for-MetadataProperties"],[1303,"impl-Flags-for-MetadataFlags"],[1304,"impl-MetadataFlags"],[1369,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1370,"impl-Metadata%3CT%3E"],[1395,"impl-LowerHex-for-MetadataProperties"],[1396,"impl-Octal-for-MetadataProperties"],[1397,"impl-Debug-for-MetadataProperties"],[1398,"impl-Binary-for-MetadataProperties"],[1399,"impl-UpperHex-for-MetadataProperties"],[1400,"impl-Binary-for-MetadataFlags"],[1401,"impl-Octal-for-MetadataFlags"],[1402,"impl-LowerHex-for-MetadataFlags"],[1403,"impl-UpperHex-for-MetadataFlags"],[1404,"impl-Debug-for-MetadataFlags"],[1414,"impl-MetadataProperties"],[1415,"impl-Flags-for-MetadataProperties"],[1416,"impl-Flags-for-MetadataFlags"],[1417,"impl-MetadataFlags"],[1430,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1431,"impl-Metadata%3CT%3E"],[1474,"impl-Metadata%3CT%3E"],[1475,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1479,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1480,"impl-Metadata%3CT%3E"],[1557,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1558,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1592,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1593,"impl-ObjectArray%3CT%3E"],[1608,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1609,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1619,"impl-ObjectArray%3CT%3E"],[1620,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1622,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1623,"impl-ObjectArray%3CT%3E"],[1625,"impl-ObjectArray%3CT%3E"],[1626,"impl-Array-for-ObjectArray%3CT%3E"],[1629,"impl-ObjectChunkedBuilder%3CT%3E"],[1630,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1632,"impl-ObjectChunkedBuilder%3CT%3E"],[1633,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[2386,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2387,"impl-Logical%3CDurationType,+Int64Type%3E"],[2389,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2390,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2391,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2392,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2393,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2701,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2702,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2703,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2704,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2705,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2713,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2714,"impl-PartialEq-for-DataType"],[2721,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2722,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2723,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2724,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2725,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2726,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2759,"impl-Debug-for-AnyValue%3C\'a%3E"],[2760,"impl-Display-for-AnyValue%3C\'_%3E"],[2762,"impl-Display-for-DataType"],[2763,"impl-Debug-for-DataType"],[2766,"impl-Display-for-TimeUnit"],[2767,"impl-Debug-for-TimeUnit"],[2772,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2774,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2788,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2789,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2790,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2792,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2793,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2796,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2797,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2798,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2800,"impl-From%3C%26ArrowField%3E-for-Field"],[2802,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2826,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2827,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2849,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2850,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2851,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2852,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2853,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2856,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2857,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2858,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2859,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2860,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2896,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2897,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2898,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2899,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2900,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2901,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3005,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[3006,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[3007,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[3008,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[3009,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[3055,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3056,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3057,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3058,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3059,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3060,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3095,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3096,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3097,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3098,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3099,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3100,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3101,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3102,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3109,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3110,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3111,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3112,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3113,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3114,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3117,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3118,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3136,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3137,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3143,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3144,"impl-Logical%3CDurationType,+Int64Type%3E"],[3150,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3151,"impl-Logical%3CDateType,+Int32Type%3E"],[3152,"impl-Logical%3CTimeType,+Int64Type%3E"],[3167,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3168,"impl-Logical%3CDurationType,+Int64Type%3E"],[3216,"impl-Logical%3CDateType,+Int32Type%3E"],[3217,"impl-Logical%3CTimeType,+Int64Type%3E"],[3218,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3223,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3224,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3516,"impl-Debug-for-ErrString"],[3517,"impl-Display-for-ErrString"],[3518,"impl-Display-for-PolarsError"],[3519,"impl-Debug-for-PolarsError"],[3524,"impl-From%3CParquetError%3E-for-PolarsError"],[3525,"impl-From%3CError%3E-for-PolarsError"],[3526,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3527,"impl-From%3CError%3E-for-PolarsError"],[3528,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3529,"impl-From%3CError%3E-for-PolarsError"],[3659,"impl-Display-for-DataFrame"],[3660,"impl-Debug-for-DataFrame"],[3692,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3693,"impl-Index%3C%26str%3E-for-DataFrame"],[3694,"impl-Index%3Cusize%3E-for-DataFrame"],[3695,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3696,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3697,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3698,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3699,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3718,"impl-DataFrame"],[3719,"impl-Container-for-DataFrame"],[3726,"impl-DataFrame"],[3727,"impl-Container-for-DataFrame"],[3765,"impl-Container-for-DataFrame"],[3766,"impl-DataFrame"],[3770,"impl-Container-for-DataFrame"],[3771,"impl-DataFrame"],[3793,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3794,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3975,"impl-Display-for-GroupByMethod"],[3976,"impl-Debug-for-GroupByMethod"],[3982,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3984,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3985,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4019,"impl-IntoIterator-for-%26GroupsIdx"],[4020,"impl-IntoIterator-for-GroupsIdx"],[4022,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4023,"impl-IntoParallelIterator-for-GroupsIdx"],[5330,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[5331,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[5335,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[5336,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[5363,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5364,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[6132,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[6133,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6134,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6143,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6144,"impl-Default-for-Arc%3Cstr%3E"],[6145,"impl-Default-for-Arc%3CCStr%3E"],[6146,"impl-Default-for-Arc%3CT%3E"],[6620,"impl-PartialEq-for-Expr"],[6621,"impl-Expr"],[6624,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6625,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6641,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6642,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6643,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6649,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6650,"impl-PartialEq-for-StructArray"],[6931,"impl-Display-for-Duration"],[6932,"impl-Debug-for-Duration"],[6951,"impl-Debug-for-JoinType"],[6952,"impl-Display-for-JoinType"],[6954,"impl-Debug-for-JoinValidation"],[6955,"impl-Display-for-JoinValidation"],[6971,"impl-Debug-for-Expr"],[6972,"impl-Display-for-Expr"],[6974,"impl-Debug-for-Operator"],[6975,"impl-Display-for-Operator"],[6977,"impl-Display-for-BooleanFunction"],[6978,"impl-Debug-for-BooleanFunction"],[6979,"impl-Debug-for-CategoricalFunction"],[6980,"impl-Display-for-CategoricalFunction"],[6981,"impl-Debug-for-TemporalFunction"],[6982,"impl-Display-for-TemporalFunction"],[6983,"impl-Debug-for-PowFunction"],[6984,"impl-Display-for-PowFunction"],[6985,"impl-Debug-for-StringFunction"],[6986,"impl-Display-for-StringFunction"],[6987,"impl-Display-for-StructFunction"],[6988,"impl-Debug-for-StructFunction"],[6989,"impl-Display-for-FunctionExpr"],[6990,"impl-Debug-for-FunctionExpr"],[7003,"impl-Debug-for-Arc%3CT,+A%3E"],[7004,"impl-Pointer-for-Arc%3CT,+A%3E"],[7005,"impl-Display-for-Arc%3CT,+A%3E"],[7039,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7040,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7117,"impl-From%3Cf64%3E-for-Expr"],[7118,"impl-From%3Ci8%3E-for-Expr"],[7119,"impl-From%3Cu16%3E-for-Expr"],[7120,"impl-From%3Ci16%3E-for-Expr"],[7121,"impl-From%3CAggExpr%3E-for-Expr"],[7122,"impl-From%3Cf32%3E-for-Expr"],[7123,"impl-From%3Cu64%3E-for-Expr"],[7124,"impl-From%3Ci32%3E-for-Expr"],[7125,"impl-From%3Cbool%3E-for-Expr"],[7126,"impl-From%3Ci64%3E-for-Expr"],[7127,"impl-From%3C%26str%3E-for-Expr"],[7129,"impl-From%3Cu32%3E-for-Expr"],[7130,"impl-From%3Cu8%3E-for-Expr"],[7133,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7134,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7135,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7136,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7137,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7138,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7140,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7141,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7142,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7143,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7150,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7151,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7152,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7154,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7168,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7170,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7171,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7172,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7174,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7175,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7176,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7177,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7178,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7179,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7180,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7181,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7182,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7183,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7184,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7193,"impl-From%3CMutableStructArray%3E-for-StructArray"],[7194,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[7196,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[7197,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[7198,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[7200,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[7201,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[7202,"impl-From%3CArrowSchema%3E-for-Schema"],[7216,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7217,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7225,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7226,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7238,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7239,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8355,"impl-Array-for-StructArray"],[8356,"impl-StructArray"],[8364,"impl-Array-for-StructArray"],[8365,"impl-StructArray"],[8622,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[8623,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[8627,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[8628,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[9061,"impl-Array-for-StructArray"],[9062,"impl-StructArray"],[9310,"impl-LazyCsvReader"],[9311,"impl-LazyFileListReader-for-LazyCsvReader"],[9312,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9313,"impl-LazyJsonLineReader"],[9358,"impl-LazyFileListReader-for-LazyCsvReader"],[9359,"impl-LazyCsvReader"],[9360,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9361,"impl-LazyJsonLineReader"],[9400,"impl-Array-for-StructArray"],[9401,"impl-StructArray"],[9873,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[9874,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[9879,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[9880,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[10565,"impl-Display-for-RollingFunction"],[10566,"impl-Debug-for-RollingFunction"],[10595,"impl-Debug-for-RollingFunctionBy"],[10596,"impl-Display-for-RollingFunctionBy"],[10820,"impl-Add-for-%26Series"],[10821,"impl-Add-for-Series"],[10822,"impl-Add%3CT%3E-for-Series"],[10823,"impl-Add%3CT%3E-for-%26Series"],[10839,"impl-SeriesSealed-for-Series"],[10840,"impl-AsSeries-for-Series"],[10893,"impl-Div-for-Series"],[10894,"impl-Div-for-%26Series"],[10895,"impl-Div%3CT%3E-for-%26Series"],[10896,"impl-Div%3CT%3E-for-Series"],[10907,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10908,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10909,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10911,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10912,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10913,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10929,"impl-Display-for-Series"],[10930,"impl-Debug-for-Series"],[10936,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[10937,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[10938,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[10939,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[10940,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[10947,"impl-FromIterator%3C%26i8%3E-for-Series"],[10948,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[10949,"impl-FromIterator%3Ci32%3E-for-Series"],[10950,"impl-FromIterator%3C%26i64%3E-for-Series"],[10951,"impl-FromIterator%3C%26bool%3E-for-Series"],[10952,"impl-FromIterator%3Ci8%3E-for-Series"],[10953,"impl-FromIterator%3C%26u32%3E-for-Series"],[10954,"impl-FromIterator%3Cf32%3E-for-Series"],[10955,"impl-FromIterator%3Ci16%3E-for-Series"],[10956,"impl-FromIterator%3CString%3E-for-Series"],[10957,"impl-FromIterator%3C%26u16%3E-for-Series"],[10958,"impl-FromIterator%3C%26f64%3E-for-Series"],[10959,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[10960,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[10961,"impl-FromIterator%3Cu16%3E-for-Series"],[10962,"impl-FromIterator%3Cu32%3E-for-Series"],[10963,"impl-FromIterator%3C%26u8%3E-for-Series"],[10964,"impl-FromIterator%3Cu8%3E-for-Series"],[10965,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[10966,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[10967,"impl-FromIterator%3Cbool%3E-for-Series"],[10968,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[10969,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[10970,"impl-FromIterator%3Cu64%3E-for-Series"],[10971,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[10972,"impl-FromIterator%3C%26u64%3E-for-Series"],[10973,"impl-FromIterator%3Cf64%3E-for-Series"],[10974,"impl-FromIterator%3C%26i16%3E-for-Series"],[10975,"impl-FromIterator%3Ci64%3E-for-Series"],[10976,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[10977,"impl-FromIterator%3C%26str%3E-for-Series"],[10978,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[10979,"impl-FromIterator%3C%26f32%3E-for-Series"],[10980,"impl-FromIterator%3C%26i32%3E-for-Series"],[10981,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[10982,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[10983,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[10984,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[10985,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[10986,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[10987,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[10988,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[10989,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[10990,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[10991,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[10992,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[11004,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11005,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11006,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11008,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11009,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11010,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11051,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11052,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11053,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11055,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11056,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11057,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11066,"impl-Mul%3CT%3E-for-%26Series"],[11067,"impl-Mul%3CT%3E-for-Series"],[11068,"impl-Mul-for-Series"],[11069,"impl-Mul-for-%26Series"],[11074,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[11075,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[11076,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[11077,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[11078,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[11079,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[11080,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[11081,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[11082,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[11083,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[11084,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[11085,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[11086,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[11087,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[11088,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[11089,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[11090,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[11091,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[11092,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[11093,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[11094,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[11095,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[11096,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[11097,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[11098,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[11099,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[11100,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[11101,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[11102,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[11103,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[11104,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[11105,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[11106,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[11107,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[11108,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[11109,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[11110,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[11111,"impl-NamedFrom%3CT,+T%3E-for-Series"],[11112,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[11113,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[11114,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[11115,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[11116,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[11117,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[11118,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[11119,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[11120,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[11121,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[11122,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[11123,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[11124,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[11125,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[11126,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[11132,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11133,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11134,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11136,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11137,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11138,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11146,"impl-Rem-for-%26Series"],[11147,"impl-Rem%3CT%3E-for-Series"],[11148,"impl-Rem%3CT%3E-for-%26Series"],[11177,"impl-Sub%3CT%3E-for-Series"],[11178,"impl-Sub-for-Series"],[11179,"impl-Sub-for-%26Series"],[11180,"impl-Sub%3CT%3E-for-%26Series"],[11204,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11205,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11207,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11208,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAADcPgw/AD8MPxA/FD8YPxw/MD88P1A/VD/oP","e":"OzAAAAEAAIEgOgQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB0AOwAFAEUAAgBJAAoAWAAFAF8ADABtAAAAcAAEAHYAFgCOAAAAkAAQAKIAAAClAAMAqgABALAADQC/ABUA1wAHAOAACwDuAAEA8gAdABYBFQAuARMAQwEGAEsBDgBcAQEAYAEBAGMBHgCEAQIAjAEQAJ4BAwClAQIAqgEBAK0BBwC6ASEA4QEGAOoBCAD0ATUALQIVAEQCAgBIAgQATgIFAFgCAABaAhoAdgIHAIICEQCWAg8ApwIAAKkCDAC3Ag4AyQICAM4CAADRAgAA1AIBANsCAADfAgcA6QICAO0CDQD8AgAA/gIoACkDAAArAyMAUgM0AIkDCACWAxEAqwNcABUEEgAzBAcAPARJAIkEDwCaBAEAnQQZALgEAAC7BA4AzQQCANMEAgDYBBwA9gQJAAEFCgAXBQEAHgUgAEMFEgBYBQAAWgUJAGYFAwBsBQEAcAUNAIgFAQCNBQEAkwUHAJwFBwCxBQEAtQUAALgFAwDABQUAxwUEANMFCwDmBQQA7QUNAP0FBgAHBgcAEAYBABQGFgAsBgcANQYAADgGAQA7BgEAQAYQAFIGAABVBgAAVwYCAFsGAgBfBgEAYgYIAGwGAABuBgUAdgYBAHkGAAB7BgEAfgYDAIMGAwCIBgIAjAYDAJIGAACVBgAAnQYAAKIGAAClBgEAqgYBAK0GAACwBgAAuAYAAL4GAgDJBgYA0wYSAOgGBQDwBggA+wYDAAAHAQAEBwAABgcBAAwHBQAVBwEAHgcBACoHAAAsBwEALwcAADIHAAA0BwAAOAcAADoHAAA/BwwATgcCAF0HAABfBwcAaAcCAG4HAABwBwMAdQcBAHgHBQCEBxcAnQcBAKEHBACnBwMArgcHAMMHAwDIBwgA0gcEANkHAgDdBwUA5QcAAOcHDQD5BwEA/QcBAAMIAQAGCAEACQgDAA4IAAAQCAAAEwgBABcIAAAZCAEAHAgAAB4IAgAiCAwAMAgAADIIAQA1CAAANwgBADoIAAA8CAEAPwgAAEEIAQBECAMASwgAAE8IAQBTCAAAVggAAFgIAABaCAMAXwgAAGIICABsCAEAbwgFAHcIAQB7CAAAfQgCAIEIAQCHCAMAjAgBAI8IAACRCAEAlAgAAJYIAQCZCAAAmwgBAJ4IAACgCAEAowgAAKUIAACoCCUAzwgXAOgIaQBVCZEA6AkHAPIJmgCOCgYAlgoqAMIKEADVCgAA1woAAOUKAgDpCgEA7QoCAPEKAADzCgEACwsBAA4LAAAWCwAAGQsAABsLBQAiCwQAKAsFAC8LAAAxCxoAUQsNAGELLACPCwAAvAsIAMcLAADJCwEAzAsDANELAQDWCwAA2AsFAN8LAADiCwIA5wsDAOwLAADvCw0A/wsAAAIMDgASDAAAFQwMACMMDAAxDAAAMwwAADUMDQBEDAAATAwAAE4MAABTDBAAZgwAAGgMAgBtDCEAlAxmAPwMLwAtDQIAMQ02AGkNAQBsDQgAdg0AAHgNAQB7DQQAgQ0BAIYNAACIDQIAjA0AAI8NBACVDQQAmw0SAK8NEQDDDQAAxQ0JANINBADYDRUA8Q0AAPQNCgAADgIACA4WACEOEAA7DgEAPw4CAEMOAABFDgAASg4DAFMOAABiDgAAZA4AAGYOAQBtDgwAgA4CAIgOAACLDgAAkA4AAJQOAQChDgEApQ4AAKsOAAC0DgIAuA4AALsOAAC9DgEAxA4AAMYOAwDNDgYA1g4JAOEOAADmDgEA6g4EAPYODgAGDwIACg8AAAwPCQAXDwEAGg8DAB8PAwAkDwkALw8HADgPAQA7Dx0AWg8oAIQPBgCPDwAAkQ8CAJYPAACYDwMAng8AAKIPBwCyDw0AwQ8BAMgPAwDNDwEA0Q8CANYPAADYDx8A+w8MAAoQBQAREAcAGhAjAEAQDgBQEA8AYRAAAGQQAwBrEAYAdRAOAIYQBQCOEAAAkRAIAJsQAQCfEAQApRAFAKwQAACxEAkAvBABAMAQBADGEAEAyRAKANUQAADYEAAA2hAJAOUQAADnEAkA8hAEAPsQAAD+EAAABhECAA0RAAAQEQEAFhEKACIREgA4EQcAQREBAEQRBQBOEQQAVhEEAGARAwBlEQAAZxELAHURCgCCEQEAhhEAAIkRAACLEQUAkhEFAJkRBACfEQMAphECAKwRAACuEQEAshEAALQRBAC7EQ8AzBEAAM8RAQDSEQMA2BECAN4RFgD2EQkAAhIAAAQSAQAIEgAAChIBAA4SAAAQEgEAFBIAABYSBAAdEgIAIRIBACUSAAAoEgAAKhICAC4SAgAyEgoAPxIHAEgSAABKEgAAThIBAFISAABUEgAAVhIBAFkSAQBcEgEAYRIAAGMSDQB0EgUAexIHAIUSAgCJEgYAlBIBAJcSAACZEgEAnBIEAKISAwCnEgIAqxIAAK0SBACzEgAAtRIFALwSBADCEgEAxRIBAMgSAQDLEgEAzhIAANASAADTEgAA1hICANsSAwDgEgcA6hICAPESAADzEgUA+hIEAAATAAADEwAABRMDAAoTAgAOEwIAEhMAABQTDgAkExUAOxMTAFATCABaEwUAYxMBAGcTAABpEwUAcBMEAHYTAAB4EwIAfRMAAH8TAACDEwEAiBMHAJETAwCZEwYAoRMJAK0TAwCyEwgAvBMCAMETAgDIEwUAzxMSAOQTAADmEwEA6hMAAOwTAQDwEwAA8hMBAPYTAAD4EwMA/hMDAAMUAAAFFAEACxQJABYUAAAZFAYAIhQCACYUXACEFAIAixQAAI0UAACQFAUAmBQAAJ8UAACjFAAApRQAAKkUBQCzFAAAtxQAAL4UAADCFAAAzhQCANIUCADcFAAA3hQBAOEUAQDnFAEA6hQEAPAUAQD4FAoABRX2AP0VAQAAFgEAAxYAAAUWAgALFgAADxYAABMWAAAVFgAAFxYAAB0WAAAgFgEAIxYAAC0WTAB7FgwAiRbcAGcXAQBsFwEAcBcAAHQXAgB6FwoAiBcEAJIXAACUFwAAnhcBAKIXAACkFwAAqRcAAK4XAQC9FwAAwxcAAMgXAgDOFwAA0BcFANgXJwAEGAABBxkAAAwZAQAPGQMAFRkAABcZAwAfGQkAKhlgAIwZDgCgGQEApRkAAKgZAACsGQMAsRksAN8ZEgDzGQ0ABBqtALYaAAC9GgAAvxoCAMMaAADHGgAAzRoAAM8aAADYGgAA2xoAAOMaAADmGgIA7RoGAPUaAQD4GgAA+hoDAAIbAAAEGwAABhsBAAsbYwBwGwAAcxsAAIAbAQCiGwAArBsAALAbAADOGwoA2hsBAN4bBQDlGwMA7xsCAPMbAAD6GwAABhwAABQcAAAaHAEAHRwCACEcAgAlHAAAKxwAAC4cBAA0HAAAOhwBAD4cAgBEHAUASxwCAE8cAQBTHAIAVxwAAFkcAABbHAAAYBwAAGkcAABsHAEAbxwCAHQcAAB3HAEAfBwBAH8cAQCDHAQAjBwBAJAcAACbHAAAnRw/AOAcAwDoHAAA6hwAAOwcAwDyHAAA9BwAAPYcAQD5HAAA/BwAAAEdAgAGHX0Ahh0AAIsdAgCPHQEADB4AAA4eBgAYHgIAHB4FACQeAQAnHgIAKx4BAC4eAAAwHgAAMx4BAEAeAABCHgAARR4BAEgeAwBOHgIAXR4BAGAeAQBpHgAAax4BAG4eAAByHgIAeB4BAHseAAB+HgAAgx4CAIgeAQCMHgIAkB4DAJYeDgCqHgAAsB4BALceAAC6HgUAwx4AAMseAgDXHgAA4R4AAOceAQDrHgAA7x4BAPIeAAD1HgAA+h4AAPweAAD+HgAAAx8AAAcfAAAJHwIAEB8GAB0fCAArHwAALR8AADEfAAA3HwAAOR8EAEIfAQBFHwEASB8AAEsfCABWHwEAWR8AAFwfAQBsHwAAbx8BAHIfAQB8HwYAiB8CAJAfAQCXHwIAmx8BAKUfAACnHwMArB8FALMfAwC8HwMAwR8AAMUfAgDLHwAAzx8AANsfAADeHwEA4R8BAOQfAwDqHwUA8R8EAPwfAAACIAAACCAAAAogAAAPIAAAEyAAABUgAAAXIAEAOiAAAD8gAABJIAMATiAFAFYgAABfIAAAYyACAGcgAwBuIAAAcCABAHMgAQB2IAEAeSAAAH4gAwCFIAAAkCAAAJIgAACUIAAAmyAEAKQgAACmIAAAqiAAAKwgAQCxIAAAsyAAALkgAwC+IAcAxyAAAMkgAADNIAAA0yAAANYgAADcIAAA4yAKAPAgAgD1IAIAACEAAA8hAAARIQAAFCECABghAwAeIQEAISEAACQhAAAoIVwAhyEMAJUhAACZIQEAnSEKAKkhAACrIQEAriGMAD0iAABBInkAviIAAMAiAwDLIgAAziIBANMieABNIwAAWiMAAGEjBQBoIwAAayMAAG4jAAByIwAAeCMAAHojAAB8I3kA/SMDAAYkAAAJJAEADiQBABMkAAAVJAAAHSQAACEkAQAnJAAALSQAADckAAA+JAEASSQCAE8kAQBgJAEAZSQAAGgkAABrJAAAcSQBAHQkAwB8JAAAiSQAAI8kAACRJAAAlSQAAJ0kAAChJAAAsCQAALIkAQC5JAAAuyQBAMAkFADWJAEA3CQBAN8kSAAqJQAALCUAAC4lAQAxJQEANCUGADwlNwB2JQUAfSUJAIglAgCOJQAAkCUDAJUlAQCYJQUAoiUSALYlAQC5JQIAviUAAMElFgDZJRcA9SUEAP4lEwATJgYAKiYAADgmAgBOJgAAViYIAGMmAABlJg0AdCYCAHgmEgCMJgEAjyYPAKAmGAC7JgAAvSYCAMImCgDOJgEA0SYHANomBADhJgIA5SYFAO0mAADvJg0AAScBAAUnAQALJwEADicBABEnAwAWJwAAGCcAABsnAQAfJwAAIScBACQnAAAmJwIAKicMADgnAAA6JwEAPScAAD8nAQBCJwAARCcBAEcnAABJJwEATCcDAFMnAABXJwEAWycAAF4nAABgJwAAYicDAGcnAABqJwgAdCcBAHcnBQB/JwEAgycAAIUnAgCJJwEAjycDAJQnAQCXJwAAmScBAJwnAACeJwEAoScAAKMnAQCmJwAAqCcBAKsnAACtJwAAsCcSAMQnBgDNJwAA0CcRAOMnCADtJwEA8CcIAPonAAD8JwEAAigAAAQoBAANKAEAFigCABwoAAAeKAAAKCgAADcoAwA/KAoASygAAE0oCABYKO8ASSkBAEwpGQBnKQEAaikOAHspEgCPKQAAkSkXAKopAQCuKQAAsCkLAL0pAgDEKQAA1ykDAN4pBwDzKQUA+ykAAAQqAAAGKgEADSoGABUqAAAbKgoALyoFADYqAAA4KgMAPSoFAEUqBABLKgEATyoAAFUqBABeKgIAYioJAG8qAgBzKgAAdyoCAHsqBACEKhEAmSoBAJwqAACeKgAAoCoAAKIqAAClKgIAsSoDALkqBADAKgEAwyovAPYqAAD4KgAA/SoBAAErAQAFKwAACysBAA4rAwAWKwMAISsCACUrAAAnKwAAKisAAC0rAQAxKwEANisAADsrAwBAKwAAQysdAGIrFQB6KwEAfSsAAH8rAACCKwEAhisBAIsrAgCQKwEAkysAAJYrAgCcKwEAnysAAKErAACjKwAApysAAKorAwCzKwAAuysAAL0rAQDAKw4A0CsEANsrAADeKwMA4ysAAOYrCwDzKwAA9SsAAPcrBAD9KxYAFiwBABosEAAsLAEALywEAA=="}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMNMCNNNMMNNNNNNNNMMNMCMMCNNCMMCMMNNNNNNNNNNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHHKFFNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIKKKKRGFPIKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNONNOONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPPKKPEPGPPPIFEKPPPGEEIEKGPPGFFFPPPPEEPKPFPEPEEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHRTKFKINNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNMNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGEPPKGGPPPFFIKPNNNNNNNNCNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNMNNNNNNNMMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNNNKKKKKKFFFFNNHHHHHHHNHHEHNNNNNNNNMNNNNNNNHHNNHHNNNNNNNNNNNNNNNNNHHNNNNNNNNCNNNNNNNNNMNNNNNHHHHNNONNNNNNNNNNMNNMMHMNNNNENMHHHMHNNNNNNNHNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","equal","equal","equal_missing","equal_missing","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","for_each","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_nulls","head","init","init","init_rand","inner_dtype","interior_mut_metadata","into","into","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_reduce","mean","mean","median","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","slice","sort","sort_with","split_at","split_at","std","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","vzip","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_cheap_metadata","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","experimental_enabled","extend","extend","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_flags","get_flags","get_max_value","get_min_value","get_mut","get_sorted_flag","init","init","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value","max_value","max_value_opt","merge","min_value","min_value","min_value","min_value_opt","new","not","not","read","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_buffer","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast_leaf","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_scalar","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_offsets","last","leaf_dtype","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max","max_reduce","max_reduce","max_reduce","mean","median","median","median_reduce","median_reduce","merge_dtypes","min","min_reduce","min_reduce","min_reduce","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_logical","newest","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","oldest","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","precision","precision","quantile","quantile","quantile_reduce","quantile_reduce","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_reduce","std_reduce","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_reduce","sum_reduce","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","update","value","value","value_unchecked","value_within_range","values_iter","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zero","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clear","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks","iter_chunks_physical","len","max_horizontal","mean_horizontal","min_horizontal","mul","mul","mul","n_chunks","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice","slice_par","sort","sort_in_place","split_at","split_at","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unpivot","unpivot2","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","UnpivotArgs","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","index","init","into","on","streamable","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","None","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","Some","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgs","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_names_and_dtypes","get_unchecked","gt","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_raw_with_allocator","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","max_reduce","median_reduce","metadata","metadata","min_periods","min_reduce","min_reduce","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","prod_reduce","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","sum_reduce","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_project","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_reduce","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","DataType","IS_ARROW","IndexOfSchema","Schema","SchemaNamesAndDtypes","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","contains","default","deref","deref_mut","drop","ensure_matching_schema","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","get_names_and_dtypes","get_names_and_dtypes","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","merge_from_ref","new","new_inserting_at_index","remove","rename","reserve","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","BitRepr","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Large","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","amortized_iter","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","compute_len","decimal","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_metadata","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","init","into","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","iter_chunks","len","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_reduce","max_reduce","mean","mean","mean_reduce","median","median","median_reduce","median_reduce","min","min_reduce","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_list","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","slice","sort","sort_with","sort_with","split_at","split_at","std","std","std_reduce","std_reduce","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_mul_owned","try_set_metadata","try_sub_owned","type_id","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","var","var","var_reduce","var_reduce","vzip","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","Arg","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","flatten","fmt","fold_options","from","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","hash","implode_list","init","init","init","init","into","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","iter_chunks","len","materialize_dyn_int","n_chunks","new","new","next","next_back","rayon","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","to_owned","to_owned","trust_my_length","try_from","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[39,"polars_core::chunked_array"],[440,"polars_core::chunked_array::arithmetic"],[468,"polars_core::chunked_array::builder"],[576,"polars_core::chunked_array::builder::list"],[730,"polars_core::chunked_array::cast"],[760,"polars_core::chunked_array::collect"],[774,"polars_core::chunked_array::float"],[776,"polars_core::chunked_array::from_iterator_par"],[780,"polars_core::chunked_array::iterator"],[817,"polars_core::chunked_array::iterator::par"],[819,"polars_core::chunked_array::metadata"],[1109,"polars_core::chunked_array::object"],[1186,"polars_core::chunked_array::object::builder"],[1209,"polars_core::chunked_array::object::registry"],[1237,"polars_core::chunked_array::ops"],[1363,"polars_core::chunked_array::ops::arity"],[1398,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1400,"polars_core::chunked_array::ops::gather"],[1403,"polars_core::chunked_array::ops::search_sorted"],[1434,"polars_core::chunked_array::ops::sort"],[1441,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1442,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1450,"polars_core::chunked_array::ops::sort::options"],[1528,"polars_core::chunked_array::temporal"],[1529,"polars_core::chunked_array::temporal::conversion"],[1532,"polars_core::config"],[1536,"polars_core::datatypes"],[3025,"polars_core::datatypes::categorical"],[3166,"polars_core::datatypes::categorical::revmap"],[3221,"polars_core::datatypes::categorical::string_cache"],[3240,"polars_core::datatypes::revmap"],[3246,"polars_core::datatypes::string_cache"],[3250,"polars_core::error"],[3315,"polars_core::error::PolarsError"],[3319,"polars_core::error::constants"],[3322,"polars_core::export"],[3330,"polars_core::fmt"],[3362,"polars_core::frame"],[3635,"polars_core::frame::explode"],[3665,"polars_core::frame::group_by"],[3905,"polars_core::frame::group_by::GroupByMethod"],[3906,"polars_core::frame::group_by::GroupsProxy"],[3908,"polars_core::frame::group_by::aggregations"],[3921,"polars_core::frame::group_by::expr"],[3924,"polars_core::frame::row"],[4021,"polars_core::functions"],[4023,"polars_core::hashing"],[4071,"polars_core::prelude"],[4653,"polars_core::prelude::PolarsError"],[4657,"polars_core::prelude::default_arrays"],[4663,"polars_core::prelude::list"],[4686,"polars_core::prelude::null"],[4717,"polars_core::prelude::revmap"],[4723,"polars_core::prelude::slice"],[4726,"polars_core::prelude::string_cache"],[4730,"polars_core::prelude::utf8"],[4734,"polars_core::random"],[4735,"polars_core::schema"],[4816,"polars_core::series"],[5230,"polars_core::series::amortized_iter"],[5254,"polars_core::series::arithmetic"],[5279,"polars_core::series::arithmetic::checked"],[5287,"polars_core::series::ops"],[5315,"polars_core::utils"],[5461,"polars_core::utils::flatten"],[5466,"dyn_clone::sealed"],[5467,"num_traits"],[5468,"num_traits::cast"],[5469,"polars_error"],[5470,"polars_core::series::arithmetic::borrowed"],[5471,"polars_core::frame::group_by::proxy"],[5472,"core::option"],[5473,"core::iter::traits::iterator"],[5474,"core::ops::function"],[5475,"core::marker"],[5476,"polars_core::datatypes::dtype"],[5477,"alloc::string"],[5478,"polars_core::datatypes::aliases"],[5479,"polars_core::series::arithmetic::borrowed::checked"],[5480,"polars_arrow::array"],[5481,"alloc::vec"],[5482,"core::iter::traits::double_ended"],[5483,"core::fmt"],[5484,"core::iter::traits::collect"],[5485,"core::result"],[5486,"polars_utils::iter::fallible"],[5487,"polars_arrow::bitmap::immutable"],[5488,"rayon::iter"],[5489,"polars_arrow::trusted_len"],[5490,"polars_core::datatypes::any_value"],[5491,"polars_utils::index"],[5492,"std::sync::rwlock"],[5493,"polars_core::chunked_array::logical::decimal"],[5494,"core::iter::traits::exact_size"],[5495,"polars_core::series::series_trait"],[5496,"core::slice::iter"],[5497,"core::iter::adapters::map"],[5498,"polars_core::chunked_array::metadata::guard"],[5499,"polars_core::chunked_array::metadata::interior_mutable"],[5500,"alloc::sync"],[5501,"polars_core::chunked_array::metadata::md_trait"],[5502,"core::convert"],[5503,"core::ops::range"],[5504,"polars_core::datatypes::field"],[5505,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5506,"polars_core::chunked_array::ops::rolling_window"],[5507,"ahash::random_state"],[5508,"polars_utils::hashing"],[5509,"ndarray::aliases"],[5510,"either"],[5511,"core::any"],[5512,"polars_core::chunked_array::arithmetic::numeric"],[5513,"polars_core::chunked_array::builder::string"],[5514,"polars_arrow::array::binview"],[5515,"polars_core::chunked_array::builder::boolean"],[5516,"polars_core::chunked_array::builder::null"],[5517,"polars_core::chunked_array::builder::primitive"],[5518,"core::clone"],[5519,"polars_core::chunked_array::builder::list::anonymous"],[5520,"polars_core::chunked_array::builder::list::boolean"],[5521,"polars_core::chunked_array::builder::list::primitive"],[5522,"polars_core::chunked_array::builder::list::binary"],[5523,"polars_core::chunked_array::builder::list::null"],[5524,"alloc::boxed"],[5525,"core::hash"],[5526,"polars_arrow::array::boolean"],[5527,"polars_core::chunked_array::metadata::env"],[5528,"polars_core::chunked_array::metadata::collect"],[5529,"bitflags::iter"],[5530,"std::fs"],[5531,"std::sync::mutex"],[5532,"polars_arrow::datatypes"],[5533,"polars_arrow::bitmap::utils::iterator"],[5534,"polars_arrow::bitmap::utils::zip_validity"],[5535,"polars_arrow::offset"],[5536,"polars_arrow::array::static_array"],[5537,"core::error"],[5538,"polars_arrow::array::primitive"],[5539,"polars_arrow::legacy::array::slice"],[5540,"polars_row::row"],[5541,"polars_arrow::array::binary"],[5542,"chrono::naive::datetime"],[5543,"alloc::borrow"],[5544,"polars_arrow::array::static_array_collect"],[5545,"bytemuck::zeroable"],[5546,"polars_core::chunked_array::logical::categorical"],[5547,"polars_core::chunked_array::logical::categorical::merge"],[5548,"polars_core::chunked_array::logical"],[5549,"polars_core::datatypes::time_unit"],[5550,"polars_arrow::datatypes::physical_type"],[5551,"polars_arrow::types"],[5552,"core::borrow"],[5553,"polars_arrow::pushable"],[5554,"polars_core::datatypes::into_scalar"],[5555,"core::cmp"],[5556,"polars_core::chunked_array::logical::categorical::builder"],[5557,"polars_core::chunked_array::logical::categorical::revmap"],[5558,"polars_core::chunked_array::logical::categorical::string_cache"],[5559,"polars_error::warning"],[5560,"polars_core::series::from"],[5561,"polars_utils::aliases"],[5562,"polars_arrow::datatypes::schema"],[5563,"polars_core::chunked_array::ndarray"],[5564,"polars_arrow::record_batch"],[5565,"polars_arrow::array::struct_"],[5566,"polars_utils::idx_vec"],[5567,"rayon::iter::plumbing"],[5568,"polars_core::frame::group_by::into_groups"],[5569,"core::iter::adapters::copied"],[5570,"core::iter::adapters::zip"],[5571,"polars_arrow::legacy::kernels::rolling"],[5572,"polars_utils::float"],[5573,"polars_arrow::types::native"],[5574,"polars_core::frame::group_by::aggregations::agg_list"],[5575,"polars_core::frame::row::av_buffer"],[5576,"polars_core::hashing::identity"],[5577,"hashbrown::map"],[5578,"polars_core::hashing::vector_hasher"],[5579,"core::alloc"],[5580,"std::os::fd::owned"],[5581,"std::os::fd::raw"],[5582,"core::mem::maybe_uninit"],[5583,"polars_arrow::legacy::kernels::time"],[5584,"core::default"],[5585,"core::ffi::c_str"],[5586,"polars_arrow::scalar"],[5587,"std::io::error"],[5588,"simdutf8::basic"],[5589,"alloc::collections"],[5590,"regex::error"],[5591,"std::ffi::os_str"],[5592,"std::path"],[5593,"alloc::ffi::c_str"],[5594,"polars_arrow::legacy::array::default_arrays"],[5595,"polars_arrow::buffer::immutable"],[5596,"polars_arrow::array::list"],[5597,"polars_core::named_from"],[5598,"polars_core::chunked_array::ops::aggregate"],[5599,"polars_core::chunked_array::ops::aggregate::quantile"],[5600,"polars_arrow::legacy::index"],[5601,"core::pin"],[5602,"core::io::borrowed_buf"],[5603,"std::io"],[5604,"polars_core::chunked_array::ops::aggregate::var"],[5605,"alloc::collections::btree::map"],[5606,"polars_arrow::legacy::array::list"],[5607,"polars_arrow::legacy::array::null"],[5608,"polars_arrow::bitmap::mutable"],[5609,"polars_arrow::array::utf8"],[5610,"polars_core::series::iterator"],[5611,"alloc::rc"],[5612,"polars_arrow::legacy::utils"],[5613,"polars_core::utils::supertype"],[5614,"polars_arrow::legacy::trusted_len::rev"],[5615,"smartstring::config"],[5616,"smartstring"],[5617,"polars_core::chunked_array::object::extension"],[5618,"polars_error::constants"],[5619,"polars_arrow::legacy::prelude"],[5620,"polars_arrow::legacy::array"],[5621,"polars_arrow::legacy::array::utf8"],[5622,"polars_core::utils::any_value"],[5623,"polars_core::utils::schema"],[5624,"polars_core::utils::series"]],"if":"`````````````{{}b}``0``````````````{{}d}``````````````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}{f{Aj}}}Adn}{{{f{{l{Al}}}}}d}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{{l{j}}}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Bh{l{c}}}}{f{{l{c}}}}}b{{Bn{}{{Bj{Bl}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{An}{{C`{An}}}}Cd}}{{{f{{l{j}}}}c}{{l{j}}}{{Ch{Cf}{{C`{Ad}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{{l{Cj}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{Cl}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{An}{{C`{{An{e}}}}}}}Bn}{{{l{c}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}{f{Cb}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}}{{l{e}}}nBn}{{{f{{l{Cn}}}}c}{{l{Cn}}}{{Ch{{f{{Db{D`}}}}}{{C`{{f{{Db{D`}}}}}}}}}}{{{f{Bh{l{c}}}}e}bn{{Cb{}{{C`{}}}}Cd}}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{{l{c}}}}Dfg}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{{l{j}}}}{f{Cb}}}{{Af{Dj}}}}{{{f{{l{c}}}}g{f{Bh{Db{e}}}}}bn{}{{Cb{An{f{e}}}{{C`{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{c}}}}Dl}Dnn}{{{f{{l{c}}}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}n}{{{f{{l{c}}}}}{{Af{Dn}}}n}`{{{f{{l{Dd}}}}}Eb}{{{f{{l{c}}}}}{{f{{l{c}}}}}Bn}{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}BnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEd{}}00{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0``{{{f{{l{c}}}}e}{{l{g}}}n{{Cb{}{{C`{}}}}Cd}n}{{{f{{l{c}}}}{f{Df}}}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Df}}Ef}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Eh}{{{f{{l{c}}}}e}{{Af{Ad}}}EhAb}{{{f{{l{c}}}}}EjBn}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{El}}}}}}}Bn}{{{f{{l{c}}}}}{{f{{F`{En}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{F`{En}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Bn}0{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}`{{{f{Bh{l{c}}}}}b{Bnn}}`{{{f{{l{c}}}}}{{Af{{f{Db}}}}}n}{{{f{Bh{l{c}}}}{f{{l{c}}}}Fb}bBn}{{{f{Bh{l{c}}}}{f{{l{e}}}}Fb}bBnBn}{{{f{{l{c}}}}}{{`{{Fd{}{{B`{{f{Db}}}}}}}}}n}{{}{{l{c}}}Bn}{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{Elb}{{{f{Bh{l{c}}}}}bBn}1{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{c}}}}e}FfnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}10{{{f{Bh{l{c}}}}{f{{l{c}}}}}bn}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ff}}}{{Af{{l{c}}}}}{{Bn{}{{Fh{Bl}}{Fj{Bl}}}}}}{{{f{{l{c}}}}}{{An{El}}}Bn}`{{{f{{l{c}}}}{f{BhFl}}}Fnn}{{{f{{l{Al}}}}{f{BhFl}}}Fn}{{{f{{l{c}}}}e}bBn{{Ch{An}}}}{{{f{{l{j}}}}c}b{{Ch{{An{Cf}}}}}}{cc{}}{c{{l{e}}}G`{{Bn{}{{Gb{c}}}}}}1{{{f{Bf}}c}{{l{e}}}Gd{{Bn{}{{Gb{}}}}Bn}}{{{f{{l{c}}}}e}{{l{c}}}{{Bn{}{{Gb{}}}}Bn}Gd}{{{f{Bf}}{F`{En}}}{{l{c}}}Bn}{{{f{Bf}}{F`{En}}Df}{{l{c}}}Bn}{g{{Gf{ic}}}{}{}{{Gh{c}{{B`{e}}}}}{}}{c{{l{Al}}}{{Gd{}{{B`{{An{d}}}}}}}}{c{{l{e}}}{{Gd{}{{B`{{Gl{F`{An{Gj}}}}}}}}}n}{c{{l{e}}}{{Gd{}{{B`{An}}}}}n}{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{An}}}}}n}31{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{}}}}}n}`{c{{l{e}}}{{Gn{}{{B`{An}}}}}n}{{{f{Bf}}{f{Db}}}{{l{c}}}n}{{{f{Bf}}{f{{Db{An}}}}}{{l{c}}}n}{c{{l{e}}}{{H`{}{{B`{An}}}}}n}{{{f{Bf}}F`}{{l{c}}}n}{{{f{Bf}}F`{An{Gj}}}{{l{c}}}n}{{{f{Bf}}El}{{l{c}}}n}0{{{f{{l{c}}}}El}{{l{c}}}Bn}{{{f{Bf}}El{f{Df}}}Dj}{{{f{{l{c}}}}El}AnBn}{{{f{{l{c}}}}El}{{Af{Hb}}}n}{{{f{{l{c}}}}El}Hbn}{{{f{{l{j}}}}El}{{An{Ad}}}}{{{f{{l{c}}}}}{{An{Hd}}}Bn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}HfBn}{{{f{{l{j}}}}}Ad}{{{f{{l{c}}}}}AnBn}0{{{f{{l{{Hh{c}}}}}}El}{{An{{f{Hj}}}}}Hl}09{{{f{{l{c}}}}dd}{{Af{Aj}}}n}{{{f{{l{c}}}}EldEl}AjEd}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}{{{f{{l{c}}}}e}FfnAb}108{{{f{{l{c}}}}{An{El}}}{{l{c}}}Bn}{{}El}0{{ElHn{An{I`}}}{{l{c}}}n}{{{f{{l{j}}}}}{{f{Df}}}}{{{f{{l{c}}}}}{{Id{{Ib{c}}}}}Bn}{ce{}{}}0{{{l{If}}{An{El}}El}{{Af{Ih}}}}{{{l{If}}{An{El}}El}Ih}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}}{{`{IjIl{In{}{{B`{}}}}FdH`}}}n}{{{l{c}}}AdBn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}FfJ`}000{{{f{{l{c}}}}}FfBn}02{{{f{{l{c}}}}}JbBn}{{{f{{l{c}}}}}{{`{{Jd{}{{B`{An}}}}}}}Bn}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{{l{c}}}}}}}}}Bn}{{{f{{l{j}}}}}{{`{{Bd{}{{B`{Jf}}}}}}}}{{{f{{l{c}}}}}{{Jl{{Jh{En}}{Jj{{f{En}}}{{C`{{An{{f{Gj}}}}}}}}}}}Bn}`{{{f{{l{c}}}}}AnBn}{{{f{{l{c}}}}}{{An{El}}}Bn}{{{f{{l{c}}}}}{{Jn{c}}}Bn}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}{{{f{{l{c}}}}}ElBn}0{{{f{{l{c}}}}e}{{l{c}}}n{A`K`}}00{{{f{{l{c}}}}El}{{l{c}}}Bn}{{{f{{l{c}}}}e}FfnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}01{{{f{{l{c}}}}}Ann}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{c}}}}}Kbn}{{{f{{l{c}}}}}{{An{Kd}}}n}{{{f{{l{Al}}}}}{{An{Kd}}}}{{{f{{l{c}}}}}{{An{Kd}}}Ed}{{{f{{l{c}}}}}KbEd}{{{f{Bh{l{c}}}}{Ib{c}}}bBn}`{{{f{{l{c}}}}}{{Kf{c}}}Bn}{{{f{{l{c}}}}}{{f{{Kj{{Kh{c}}}}}}}Bn}{{{f{{l{c}}}}}{{An{{Kn{Kl}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{Kj{{Kh{c}}}}}}}Bn}{{{f{{l{c}}}}}{{Kj{{Kh{c}}}}}Bn};<{{{f{{l{c}}}}}{{An{Gl}}}n};{{{f{Bf}}{f{Db}}}{{l{c}}}n}{{{f{Bf}}{f{{Db{D`}}}}ElEl}{{l{Al}}}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}ElBn}{{{f{{l{c}}}}}{{Af{El}}}n}{{{f{{l{c}}}}}{{f{Bf}}}Bn}{{{f{Bf}}c}{{l{If}}}{{Lb{{Db{{An{L`}}}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Lb{{Db{{An{Hn}}}}}}}}{{{f{Bf}}c}{{l{Ld}}}{{Lb{{Db{{An{I`}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Lb{{Db{{An{d}}}}}}}}{{{f{Bf}}c}{{l{Lf}}}{{Lb{{Db{{An{Lh}}}}}}}}{{{f{Bf}}{Lj{Jf}}}{{l{Ll}}}}{{{f{Bf}}c}{{l{Al}}}{{Lb{{Db{d}}}}}}{{{f{Bf}}c}{{l{Dd}}}{{Lb{{Db{Dh}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{Lb{{Db{{F`{D`}}}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{Lb{{Db{{An{{F`{D`}}}}}}}}}}{{{f{Bf}}c}{{l{Ln}}}{{Lb{{Db{M`}}}}}}{{{f{Bf}}c}{{l{Ll}}}{{Lb{{Db{Jf}}}}}}{{{f{Bf}}{Lj{M`}}}{{l{Ln}}}}{{{f{Bf}}c}{{l{Dd}}}{{Lb{{Db{{An{Dh}}}}}}}}{{{f{Bf}}c}{{l{Ld}}}{{Lb{{Db{I`}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{Lb{{Db{Kd}}}}}}{{{f{Bf}}c}{{l{If}}}{{Lb{{Db{L`}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{Lb{{Db{{An{Kd}}}}}}}}{{{f{Bf}}c}{{l{Ll}}}{{Lb{{Db{{An{Jf}}}}}}}}{{{f{Bf}}c}{{l{Lf}}}{{Lb{{Db{Lh}}}}}}{{{f{Bf}}{Lj{Lh}}}{{l{Lf}}}}{{{f{Bf}}{Lj{I`}}}{{l{Ld}}}}{{{f{Bf}}c}{{l{Ln}}}{{Lb{{Db{{An{M`}}}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Lb{{Db{Hn}}}}}}{{{f{Bf}}}{{l{{Hh{c}}}}}Hl}{{{f{{l{c}}}}ElEl}{{l{c}}}n}{{{f{Bf}}{F`{c}}}{{l{{Hh{c}}}}}Hl}{{{f{Bf}}{F`{c}}Gj}{{l{{Hh{c}}}}}Hl}{{{f{Bf}}F`}{{l{c}}}n}{{{Kj{Mb}}{F`{En}}HdHd}{{l{c}}}Bn}{{{f{{l{c}}}}}{{l{c}}}J`}{{{f{{l{c}}}}e}FfnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}10{{{f{{l{c}}}}}ElBn}``{{{f{{l{j}}}}}{{`{{Md{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{Dd}}}}}{{`{{Md{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{{l{Dd}}}}}{{`{{Mf{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{Bh{l{j}}}}}{{`{{Mf{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{c}}}}}Kbn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}KdMh}{{Af{{An{Kd}}}}}Ed}{{{f{{l{c}}}}KdMh}{{Af{Kb}}}Ed}{{{f{Bf}}ElKd}{{Af{{l{Al}}}}}}{{{f{Bf}}ElKdKd}{{Af{{l{c}}}}}n}{{{f{Bf}}El}{{l{c}}}n}{{{f{Bf}}ElKdKd}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Mb}}}Bn}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}{f{Bf}}}bBn}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}Mj}{{Af{Ad}}}n}{{{f{{l{c}}}}Ele}{{Af{{l{c}}}}}J`{{Ch{{f{Bh{l{c}}}}}{{C`{An}}}}}}{{{f{{l{c}}}}Kddd{An{I`}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}Eldd{An{I`}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}eAn}{{Af{{l{c}}}}}n{{Gd{}{{B`{Hd}}}}}}{{{f{{l{c}}}}eg}{{Af{{l{c}}}}}n{{Gd{}{{B`{Hd}}}}}{{Cb{An}{{C`{An}}}}}}{{{f{{l{c}}}}{f{Ff}}An}{{Af{{l{c}}}}}n}{{{f{Bh{l{j}}}}}b}{{{f{Bh{l{c}}}}d}bBn}{{{f{Bh{l{j}}}}Df}b}{{{f{Bh{l{c}}}}Hd}bBn}{{{f{Bh{l{c}}}}Jb}bBn}{{{f{{l{c}}}}Jf}{{l{c}}}n}{{{f{{l{c}}}}JfAn}{{l{c}}}n}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}JfEl}{{l{c}}}Bn}0{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}Dl}{{l{c}}}n}{{{f{{l{c}}}}Jf}{{Gl{{l{c}}{l{c}}}}}Bn}0{{{f{{l{c}}}}D`}{{An{Kd}}}n}{{{f{{l{c}}}}D`}KbEd}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}Ann}{{{f{{l{Al}}}}}{{An{Hd}}}}{{{f{{l{c}}}}}Kbn}{{{f{{l{c}}}}{An{El}}}{{l{c}}}Bn}{{{f{{l{c}}}}{f{e}}}{{Af{{l{c}}}}}Bn{{Lb{{Db{Hd}}}}Ml}}{{{f{{l{c}}}}{f{Dn}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Bn{}{{Fh{Bl}}{Mn{Bl}}}}Bn}{{Lb{{Db{Hd}}}}Ml}}{{{f{{l{c}}}}{f{Dn}}}{{l{c}}}{{Bn{}{{Fh{Bl}}{Mn{Bl}}}}Bn}}`{{{f{{l{c}}}}dN`}{{F`{{F`{Nb}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}J`}{{{f{{l{Dd}}}}El}{{Af{Ad}}}}{{{f{Bh{l{j}}}}Df}b}{{{f{{l{j}}}}}{{Af{Nd}}}}{{{f{{l{c}}}}}{{Af{Nf}}}n}{{{f{c}}}e{}{}}{{{f{{l{Cn}}}}}Nh}{{{f{{l{c}}}}}{{F`{An}}}n}{{{f{{l{c}}}}}{{Nj{F`{F`{An}}}}}n}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{j}}}}c}{{Af{{l{j}}}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{{l{j}}}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gf{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gf{{An{e}}g}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gf{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gf{eg}}}}}}}Bn}{c{{Gf{e}}}{}{}}0{{{f{Bf}}g}{{Gf{{l{i}}e}}}G`{}{{Gd{}{{B`{{Gf{ce}}}}}}}{{Bn{}{{Gb{c}}}}Bn}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Af{{l{j}}}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Nl{}}0{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}El}{}Bn}{{{f{{l{c}}}}D`}{{An{Kd}}}n}{{{f{{l{c}}}}D`}KbEd}{ce{}{}}0{{{f{Bf}}c}{{l{e}}}G`{{Bn{}{{Gb{c}}}}Bn}}{{{f{{l{e}}}}c}{{l{e}}}G`{{Bn{}{{Gb{c}}}}Bn}}{{{f{{l{c}}}}{F`{En}}}{{l{c}}}Bn}{{{l{c}}{f{Bf}}}{{l{c}}}Bn}{{{f{{Db{Nn}}}}e}c{}{{O`{{f{Dn}}}{{C`{c}}}}}}{{{f{{l{c}}}}Jb}{{l{c}}}Bn}{{{l{c}}}en{}}{{{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}3210{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}452310543276543210452301{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Bn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{Ff}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}````{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}e{}{}{}}{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}c}e{}{}{}}{{c{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}e{}{}{}}{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}g{}{}{}}{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}c}g{}{}{}}{{c{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}g{}{}{}}{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}e{}{}{}}65654654650654654````````{{{f{c}}h}b{}}000{{{f{BhOj}}}b}{{{f{Bh{Ol{c}}}}}b{OnMl}}{{{f{BhA@`}}}b}{{{f{BhA@b}}}b}{{{f{Bh{A@d{c}}}}}bn}{{{f{Bh{Ol{c}}}}{An{e}}}b{OnMl}{{Lb{c}}}}{{{f{BhOj}}{An{c}}}b{}}{{{f{BhOj}}c}b{}}{{{f{Bh{Ol{c}}}}e}b{OnMl}{{Lb{c}}}}{{{f{BhA@`}}d}b}5{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{{Ol{c}}}}}{{Ol{c}}}{OnMl}}{{{f{A@`}}}A@`}{{{f{A@b}}}A@b}{{{f{{A@d{c}}}}}{{A@d{c}}}{nA@f}}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{c}}}b{}}000{El{{f{c}}}{}}000{El{{f{Bhc}}}{}}000{Elb}000{Oj{{l{c}}}Bn}{{{Ol{Bf}}}Nh}{{{Ol{{Db{D`}}}}}Eb}{A@hNh}{A@jEb}{A@`Ff}`{{{A@d{c}}}{{l{c}}}n}{cc{}}000{{{f{Bf}}e}A@l{}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}A@l{}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}{f{{Db{c}}}}}A@l{}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}A@l{}}{{}El}000{ce{}{}}000`{{{f{Bf}}El}{{Ol{c}}}{OnMl}}{{{f{Bf}}El}A@`}{{{f{Bf}}El}A@b}{{{f{Bf}}El}{{A@d{c}}}n}{{{f{BhOj}}}b}{{{f{BhA@`}}}b}{{{f{BhA@b}}}b}{{{f{Bh{A@d{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{Gf{e}}}{}{}}0000000{{{f{c}}}Nl{}}000;;;;````````{{{f{BhA@n}}{f{G`}}}b}{{{f{BhA@n}}}b}{{{f{BhAA`}}}b}{{{f{BhAAb}}c}b{{Bd{}{{B`{{An{d}}}}}}H`}}{{{f{Bh{AAd{c}}}}e}bn{{Bd{}{{B`{An}}}}H`}}{{{f{Bh{AAd{c}}}}e}bn{{Bd{}{{B`{}}}}H`}}{{{f{BhAAf}}}b}54{{{f{BhAAh}}}b}{{{f{BhAAj}}}b}{{{f{BhAAb}}}b}{{{f{BhAAl}}}b}{{{f{Bh{AAd{c}}}}}bn}{{{f{BhA@n}}{An{{f{G`}}}}}b}{{{f{BhA@n}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{BhAAf}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{Bh{AAd{c}}}}{An{{f{Db}}}}}bn}{{{f{BhAAf}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@n}}{f{Ad}}}{{Af{b}}}}{{{f{BhAA`}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAh}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAj}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAb}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAl}}{f{Ad}}}{{Af{b}}}}{{{f{Bh{AAd{c}}}}{f{Ad}}}{{Af{b}}}n}{{{f{Bh{AAd{c}}}}{f{Db}}}bn}{{{f{BhAAh}}c}b{{Bd{}{{B`{{An{{f{Bf}}}}}}}}H`}}{{{f{BhAAj}}c}b{{Bd{}{{B`{{An{{f{{Db{D`}}}}}}}}}}H`}}{{{f{BhAAh}}c}b{{Bd{}{{B`{{f{Bf}}}}}}}}{{{f{BhAAj}}c}b{{Bd{}{{B`{{f{{Db{D`}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000`{{}A@n}{{}AA`}{El{{f{c}}}{}}000000{El{{f{Bhc}}}{}}000000{Elb}000000{{{f{AAh}}}d}{{{f{AAj}}}d}{{{f{AAb}}}d}{{{f{{AAd{c}}}}}dn}{{{f{AAf}}}d}{{{f{AAh}}}{{f{Mb}}}}{{{f{AAj}}}{{f{Mb}}}}{{{f{AAb}}}{{f{Mb}}}}{{{f{{AAd{c}}}}}{{f{Mb}}}n}{{{f{AAf}}}{{f{Mb}}}}{{{f{BhA@n}}}Dj}{{{f{BhAA`}}}Dj}{{{f{BhAAl}}}Dj}{{{f{BhAAf}}}Dj}{cc{}}000000{{{f{Df}}ElEl{f{Bf}}}{{Af{{AAn{AAf}}}}}}{{}El}000000{{{f{BhAAh}}}En}{{{f{BhAAj}}}En}{{{f{BhAAb}}}En}{{{f{Bh{AAd{c}}}}}Enn}{{{f{BhAAf}}}En}{ce{}{}}000000{{{f{Bf}}El{An{Df}}}A@n}{{{f{Bf}}El{An{Df}}}AA`}{{{f{Bf}}ElEl}AAh}{{{f{Bf}}ElEl}AAj}{{{f{Bf}}ElEl}AAb}{{{f{Bf}}El}AAl}{{{f{Bf}}ElElDf}{{AAd{c}}}n}{{{f{Bf}}ElElDfDf}{{AAd{c}}}n}{c{{Gf{e}}}{}{}}0000000000000{{{f{c}}}Nl{}}000000:::::::````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Ef}}}Ef}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}Ef}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{Ef}}{f{Ef}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Ef}}{f{BhFl}}}Fn}{cc{}}{{{f{Ef}}{f{Bhc}}}bAB`}{{}El}{ce{}{}}{{{f{Ef}}}d}{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}4``{{ABb{f{Bf}}}{{l{c}}}Bn}{{ABd{f{{l{c}}}}}{{l{c}}}Bn}10{{ABd{f{Bf}}Df}{{l{c}}}Bn}0{{ABb{f{Bf}}}{{Gf{{l{c}}e}}}Bn{}}{{ABd{f{{l{c}}}}}{{Gf{{l{c}}e}}}Bn{}}10{{ABd{f{Bf}}Df}{{Gf{{l{c}}e}}}Bn{}}0`{ABfABf}``{{ABh{f{Bf}}Df}e{}{{ABj{c}}}}{{e{f{Bf}}Df}ABj{}{{Gn{}{{B`{c}}}}}}```{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0{Elb}0{cc{}}0{{}El}0{ce{}{}}000{{{f{ABl}}}ABn}{{{f{BhABn}}}{{An{c}}}{}}{{{f{Bh{AC`{c}}}}}{{An{e}}}Bd{}}1{{{f{Bh{AC`{c}}}}}{{An{e}}}Fd{}}`{{{f{ABn}}}{{Gl{El{An{El}}}}}}{{{f{{AC`{c}}}}}{{Gl{El{An{El}}}}}Bd}{c{{Gf{e}}}{}{}}000{{{f{c}}}Nl{}}088`````````````````````````{{{f{c}}h}b{}}0000{{}Fb}{{}Hf}{{FbFb}Fb}{{HfHf}Hf}{{{f{BhFb}}Fb}b}{{{f{BhHf}}Hf}b}3210{{{f{Fb}}}Lh}0{{{f{Hf}}}D`}05432{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000{{{f{{Kh{c}}}}}{{Kh{c}}}Bn}{{{f{{Ib{c}}}}}{{Ib{c}}}Bn}{{{f{ACb}}}ACb}{{{f{Fb}}}Fb}{{{f{Hf}}}Hf}{{{f{c}}{f{Bhe}}}b{}{}}0000{{{f{c}}}b{}}0000000{{{f{BhACd}}}b}0{FbFb}{HfHf}{{{f{Fb}}Fb}d}{{{f{Hf}}Hf}d}{{}{{Kh{c}}}Bn}{{}{{Ib{c}}}Bn}{{}Fb}{{}Hf}{El{{f{c}}}{}}{{{f{{Kf{c}}}}}{{f{e}}}Bn{}}111111{El{{f{Bhc}}}{}}000000{{FbFb}Fb}{{HfHf}Hf}{{}d}{{{f{Kl}}}{{An{Hd}}}}{{{Ib{c}}Hd}{{Ib{c}}}Bn}{{{f{{Ib{c}}}}}{{An{Hd}}}Bn}{{{Ib{c}}{An{Hd}}}{{Ib{c}}}Bn}{Elb}000000<;5{{{f{Fb}}{f{Fb}}}d}{{{f{Hf}}{f{Hf}}}d}7{{{f{BhFb}}c}b{{Gd{}{{B`{Fb}}}}}}{{{f{BhHf}}c}b{{Gd{}{{B`{Hf}}}}}}{{{Ib{c}}d}{{Ib{c}}}Bn}{{{Ib{c}}{An{d}}}{{Ib{c}}}Bn}{{{f{{Ib{c}}}}Fb}{{Ib{c}}}Bn}{{{f{{Ib{c}}}}Fb}{{Ib{e}}}BnBn}{{{Ib{c}}Hf}{{Ib{c}}}Bn}{{{Ib{c}}{An{Hf}}}{{Ib{c}}}Bn}{{{f{{Ib{c}}}}{f{BhFl}}}FnBn}{{{f{ACb}}{f{BhFl}}}Fn}{{{f{Fb}}{f{BhFl}}}Fn}0000{{{f{Hf}}{f{BhFl}}}Fn}0000{cc{}}000000{Lh{{An{Fb}}}}{D`{{An{Hf}}}}{LhFb}0{D`Hf}010{g{{Gf{ic}}}{}{}{{Gh{c}{{B`{e}}}}}{}}0{cFb{{Gd{}{{B`{Fb}}}}}}{cHf{{Gd{}{{B`{Hf}}}}}}{{{f{Bf}}}{{An{Fb}}}}{{{f{Bf}}}{{An{Hf}}}}{{{f{{Ib{c}}}}}{{An{Hd}}}Bn}{{{f{{Ib{c}}}}}dBn}{{{f{Hf}}}d}{{{f{Kl}}}Hf}{{{f{{Ib{c}}}}}HfBn}0{{{f{{Ib{c}}}}}{{An{f}}}Bn}0{{{f{Bh{Kh{c}}}}}{{f{Bh{Ib{c}}}}}Bn}{{{f{Hf}}}Jb}{{}El}000000{{{f{BhFb}}Fb}b}{{{f{BhHf}}Hf}b}{{FbFb}Fb}{{HfHf}Hf}{{{f{Fb}}Fb}d}{{{f{Hf}}Hf}d}{ce{}{}}000000{Fbc{}}{Hfc{}}{{{f{Fb}}}d}{{{f{Hf}}}d}{{{f{{Ib{c}}}}}dBn}21{{{f{{Ib{c}}}}}JbBn}111{{{f{Fb}}}{{ACf{Fb}}}}{{{f{Hf}}}{{ACf{Hf}}}}{{{f{Fb}}}{{ACh{Fb}}}}{{{f{Hf}}}{{ACh{Hf}}}}{{}d}{{}{{f{{ACl{ACj}}}}}}{{{f{Kl}}}{{An{Kb}}}}{{{Ib{c}}}{{Ib{c}}}Bn}{{{f{{Ib{c}}}}}{{An{Kb}}}Bn}{{{Ib{c}}An}{{Ib{c}}}Bn}{{{f{{Ib{c}}}}{Ib{c}}}{{ACn{c}}}Bn}4321{{{Ib{c}}}{{Kh{c}}}Bn}{FbFb}{HfHf}{{{f{{Kh{c}}}}}{{Kn{{Ib{c}}}}}Bn}{{{f{BhFb}}Fb}b}{{{f{BhHf}}Hf}b}{{{f{BhFb}}Fbd}b}{{{f{BhHf}}Hfd}b}{{{f{Bh{Ib{c}}}}{An{Hd}}}bBn}{{{f{Bh{Ib{c}}}}d}bBn}{{{f{BhHf}}d}b}{{{f{Bh{Ib{c}}}}Hf}bBn}{{{f{Bh{Ib{c}}}}An}bBn}033{{{f{Bh{Ib{c}}}}Jb}bBn}{{{f{BhHf}}Jb}b}{{{Ib{c}}Jb}{{Ib{c}}}Bn}{{{Ib{c}}{An{Jb}}}{{Ib{c}}}Bn}{{FbFb}Fb}{{HfHf}Hf}>=10{{{Kh{c}}}{{Ib{c}}}Bn}{{{f{c}}}e{}{}}0000{{{f{BhFb}}Fb}b}{{{f{BhHf}}Hf}b}{c{{Gf{e}}}{}{}}0000000000000{{{f{{Kh{c}}}}}{{An{{Kn{{Ib{c}}}}}}}Bn}{{{f{{Kh{c}}}}}{{An{{Id{{Ib{c}}}}}}}Bn}{{{f{c}}}Nl{}}00000098{{{f{{Kh{c}}}}}{{f{{AD`{Kl}}}}}Bn}{ce{}{}}000000{ACdACd}0{{{f{{Kh{c}}}}}{{Id{{Ib{c}}}}}Bn}````{{{f{c}}h}b{}}{{{f{{ADb{c}}}}El}{{Gl{{ADb{c}}{ADb{c}}}}}Hl}{e{{ADb{c}}}Hl{{Gd{}{{B`{{f{c}}}}}}}}{e{{ADb{c}}}Hl{{Gd{}{{B`{{An{{f{c}}}}}}}}}}{{ADde}g{}{{Gd{}{{B`{c}}}}}{}}0{{{f{Hj}}}{{f{ADf}}}}{{{f{{ADb{c}}}}}{{f{ADf}}}Hl}{{{f{Bh{ADb{c}}}}}{{f{BhADf}}}Hl}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`{{{f{{ADb{c}}}}El}dHl}{{{f{{ADb{c}}}}}{{ADb{c}}}{HlA@f}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{{ADb{c}}}}}{{f{ADd}}}Hl}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{{f{Hj}}}}{f{{f{Hj}}}}}d}{{{f{Hj}}{f{Hj}}}d}{{{f{{ADb{c}}}}{f{BhFl}}}Fn{HlADh}}{cc{}}{{ElADd}{{ADb{c}}}Hl}{{{f{{ADb{c}}}}El}{{An{{f{c}}}}}Hl}{{}ADd}{{{f{Gj}}{f{{ADb{c}}}}{f{{ADb{c}}}}}{{ADb{c}}}Hl}{{ADd{f{Gj}}cc}{{ADb{e}}}{}Hl}{{{f{Gj}}{f{{ADb{c}}}}e}{{ADb{c}}}Hl{}}{{{f{Gj}}c{f{{ADb{e}}}}}{{ADb{e}}}{}Hl}{{}El}{ce{}{}}{{{f{{ADb{c}}}}}eHl{}}{{{f{{ADb{c}}}}El}dHl}{{{f{c}}El}d{}}1{{{f{{ADb{c}}}}}{{ADl{egADj}}}Hl{}{}}{{{f{{ADb{c}}}}}{{ADl{{f{c}}{ADn{c}}ADj}}}Hl}{{{f{{ADb{c}}}}}ElHl}0`{db}{{{f{Bh{ADb{c}}}}{An{Gj}}}bHl}{{{f{Bh{ADb{c}}}}ElEl}bHl}{{{f{c}}ElEl}e{}{}}01{{{f{{ADb{c}}}}El}{{Gl{{AAn{G`}}{AAn{G`}}}}}Hl}0{{{f{Hj}}}{{AAn{Hj}}}}{{{f{{ADb{c}}}}}{{AAn{G`}}}Hl}{{{f{c}}}e{}{}}{g{{Gf{{ADb{c}}e}}}Hl{}{{Gd{}{{B`{{Gf{{f{c}}e}}}}}}}}{g{{Gf{{ADb{c}}e}}}Hl{}{{Gd{}{{B`{{Gf{{An{{f{c}}}}e}}}}}}}}{{ADdg}{{Gf{ie}}}{}{}{{Gd{}{{B`{{Gf{ce}}}}}}}{}}0{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}{{{f{Hj}}}{{f{Bf}}}}{{}{{f{Bf}}}}{{{f{{ADb{c}}}}}{{An{{f{Gj}}}}}Hl}{{{f{{ADb{c}}}}El}{{f{c}}}Hl}{{{f{{ADb{c}}}}El}eHl{}}1{{{f{{ADb{c}}}}}{{f{{Kj{{F`{c}}}}}}}Hl}{{{f{{ADb{c}}}}}{{ADn{c}}}Hl}{{{f{{ADb{c}}}}}eHl{}}{ce{}{}}{{{ADb{c}}{An{Gj}}}{{ADb{c}}}Hl}{{{f{{ADb{c}}}}{An{Gj}}}{{AAn{G`}}}Hl}1`{{{f{Bh{AE`{c}}}}}bHl}0{{{f{Bh{AE`{c}}}}{An{c}}}bHl}{{{f{Bh{AE`{c}}}}c}bHl}{{{f{Bh{AE`{c}}}}{f{ADf}}}bHl}{{{f{Bh{AE`{c}}}}{f{ADf}}}{{Af{b}}}Hl}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}{{AE`{c}}}Hl}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{AE`{c}}}{{AEb{c}}}Hl}{cc{}}{{}El}{ce{}{}}{{{f{Bf}}El}{{AE`{c}}}Hl}{{{f{Bh{AE`{c}}}}}AdHl}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}4````{{{f{BhAEd}}}b}{{{f{BhAEd}}{An{{f{ADf}}}}}b}{{{f{BhAEd}}{f{ADf}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`?>={{{f{AEf}}{f{BhFl}}}Fn}<{{{f{Bf}}El}{{AAn{AEd}}}}{{}AEh}{{}ADd}>={{}d}`{{AEjAEhADd}b}{{{f{BhAEd}}}Ad}==<{ce{}{}}``````````````````````````````````````````{{{f{c}}h}b{}}{{{f{{AEn{}{{AEl{c}}}}}}g}{{AEn{}{{AEl{c}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{c}}}}}}Cd}}{{{f{AF`}}{f{Cb}}}AF`}{{{f{AF`}}{f{Cb}}}{{l{c}}}Bn}{{{f{{AEn{}{{AEl{c}}}}}}i{f{Bh{Db{g}}}}}b{}{}{}{{Cb{{An{e}}{f{g}}}{{C`{g}}}}}}{{{f{{AEn{}{{AEl{c}}}}}}g}{{AEn{}{{AEl{c}}}}}{}{}{{Cb{e}{{C`{c}}}}Cd}}{{{f{AFb}}Dl}Dn}{{{f{AFb}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{AFd}}}{{Af{Dn}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AFf}}{f{Df}}}{{Af{Ad}}}}0{{{f{AFf}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{AFh}}}AFh}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{AFh}}{f{AFh}}}d}{{{f{{AFj{}{{B`{c}}}}}}e}c{}{}}0{{{f{AFl}}}{{Af{Ad}}}}{{{f{AFl}}}{{Af{{Gl{Ad{AFn{Jf}}}}}}}}`{{{f{AG`}}c}{{Af{AG`}}}{}}{{{f{AGb}}{f{Ff}}}{{Af{{l{c}}}}}Bn}`{{{f{AFh}}{f{BhFl}}}Fn}{cc{}}`{{{f{Bf}}cEl}AGd{}}{{{f{Bf}}El}AGf}`{{{f{AGh}}El}{{Af{Hb}}}}{{{f{AGh}}El}Hb}::{{{f{AFh}}{f{Bhc}}}bAB`}{{}El}{ce{}{}}{{{f{AGj}}}{{Af{Ff}}}}{{{f{AGl}}}{{Af{Ff}}}}??{{{f{AGn}}}{{An{c}}}{}}{{{f{AGn}}}{{An{Kd}}}}{{{f{AH`}}}{{An{c}}}{}}2{{{f{AGn}}}{{An{{Gl{cc}}}}}{}}{{{f{AFd}}}{{Af{El}}}}{{{f{AHb}}ElEl}{{l{c}}}Bn}{{{f{{AFj{}{{B`{c}}}}}}e}c{}{}}0{{{f{AFl}}}{{Af{{AFn{Jf}}}}}}{{{f{AH`}}KdMh}{{Af{{An{c}}}}}{}}{{{f{AHd}}}AHd}{{{f{AHf}}{f{Cb}}Mj}{{Af{Ad}}}}{{{f{AHh}}c{An{e}}}{{Af{AHh}}}{{Gd{}{{B`{Hd}}}}}{}}{{{f{AHh}}ci}{{Af{AHh}}}{{Gd{}{{B`{Hd}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{g}}}}}}}}`{{{f{AHh}}{f{Ff}}{An{c}}}{{Af{AHh}}}{}}{{{f{AHj}}Jf}{{l{c}}}Bn}{{{f{AHl}}Jfc}{{l{e}}}{}Bn}`{{{f{AFb}}d}{{l{c}}}Bn}{{{f{AFb}}Dl}{{l{c}}}Bn}{{{f{AHn}}D`}{{An{Kd}}}}{{{f{AGn}}}{{An{c}}}{}}{{{f{AI`}}{f{c}}}{{Af{AI`}}}Ml}{{{f{AIb}}{f{c}}}AIbMl}{{{f{AId}}}{{F`{{f{{Db{D`}}}}}}}}{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}{{{f{AFd}}}{{Af{AFd}}}}8{ce{}{}}`{{{f{AIf}}{f{Ff}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}BnBn{{Cb{ff}{{C`{}}}}}{{Cb{f}{{C`{}}}}}{{Cb{f}{{C`{}}}}}Bn}{{{l{c}}{l{e}}gik}{{l{m}}}BnBn{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBnG`{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Gb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}BnBn{{AIh{AnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}g}bBnBn{{Ch{AnAn}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBn{}{{Ch{}{{C`{g}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBn{G`AIj}{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Gb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBnG`{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Gb{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}BnBnG`{{Ch{}{{C`{g}}}}}{{Bn{}{{Gb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Af{Ad}}}BnBn{{Ch{ff}{{C`{{AAn{G`}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}BnBn{{Ch{ff}{{C`{{AAn{G`}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gf{{l{m}}i}}}BnBn{}{}{{Ch{AnAn}{{C`{{Gf{{An{g}}i}}}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}BnBnBn{{AIl{AnAnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gf{{l{m}}i}}}BnBnG`AIn{{Ch{ff}{{C`{{Gf{gi}}}}}}}{{Bn{}{{Gb{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bf}}}{{Gf{{l{m}}i}}}BnBnG`AIn{{Ch{ff}{{C`{{Gf{gi}}}}}}}{{Bn{}{{Gb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Gf{{l{c}}g}}}BnBnAIn{{Ch{ff}{{C`{{Gf{{AAn{G`}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Gf{{l{o}}k}}}BnBnBn{}{}{{Ch{AnAnAn}{{C`{{Gf{{An{i}}k}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gf{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gf{{An{e}}g}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gf{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gf{eg}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gf{{l{k}}g}}}Bn{G`AIj}AIn{{Ch{f}{{C`{{Gf{eg}}}}}}}{{Bn{}{{Gb{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Bn{{AJ`{An}}}Bn}{{{f{{l{c}}}}e}{{l{g}}}BnAJ`Bn}{{{f{{l{c}}}}g}{{l{i}}}BnG`{{Ch{f}{{C`{e}}}}}{{Bn{}{{Gb{e}}}}}}{{{l{c}}g}{{l{i}}}BnG`{{Ch{}{{C`{e}}}}}{{Bn{}{{Gb{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{G`AIj}{{Ch{f}{{C`{e}}}}}{{Bn{}{{Gb{e}}}}}}0{{{f{{l{c}}}}}Eln}0{{JbJb}Jb}{{{f{Dn}}Hd}{{Af{b}}}}{{{f{{AJb{Hd}}}}Hd}{{Af{b}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAJdd}{{F`{Hd}}}Bn{{Bd{}{{B`{An}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AJd}}}AJd}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}AJd}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{AJd}}{f{AJd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AJd}}{f{BhFl}}}Fn}{cc{}}{{{f{AJd}}{f{Bhc}}}bAB`}{{}El}{ce{}{}}{{{f{{Db{f}}}}cHde}{{F`{Hd}}}{{Bd{}{{B`{An}}}}}{{Cb{fElf}{{C`{d}}}}}}{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}4`{{El{f{Bh{F`{d}}}}}b}```{{{f{AJf}}ElEl}AJf}0{{El{f{{Db{Ad}}}}{f{BhE`}}}{{Af{{AJh{Dn}}}}}}{{{f{{Db{Ad}}}}{f{{Db{d}}}}{f{{Db{d}}}}}{{Af{AJj}}}}{{{f{{Db{Ad}}}}{f{{Db{d}}}}{f{{Db{d}}}}}{{Af{{AJl{Jf}}}}}}{{{f{Bf}}{f{{Db{Ad}}}}{f{{Db{d}}}}{f{{Db{d}}}}}{{Af{AJn}}}}{{{f{Bf}}{f{{Db{Ad}}}}}{{Af{AJn}}}}{{{f{Ad}}}{{Af{En}}}}{{{f{{Db{Ad}}}}}{{Af{AJj}}}}{{{f{{Db{Ad}}}}}{{Af{AJn}}}}0```{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{{f{Dl}}}Dl}{{{f{E`}}}E`}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{}Dl}{{}E`}{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0``{Elb}0{{{f{Dl}}{f{Dl}}}d}{{{f{E`}}{f{E`}}}d}{{{f{c}}{f{e}}}d{}{}}00000{{{f{Dl}}{f{BhFl}}}Fn}{{{f{E`}}{f{BhFl}}}Fn}{cc{}}{{{f{E`}}}Dl}{{{f{Dl}}}E`}2{{{f{Dl}}{f{Bhc}}}bAB`}{{{f{E`}}{f{Bhc}}}bAB`}{{}El}0{ce{}{}}0````{{}Dl}{{}E`}``{{{f{AJf}}ElEl}AJf}0{{{f{c}}}e{}{}}0{c{{Gf{e}}}{}{}}000{{{f{c}}}Nl{}}066{{Dld}Dl}{{E`d}E`}1010{{E`c}E`{{Gd{}{{B`{d}}}}}}210{DlDl}{E`E`}`{AK`Jf}00{{}d}>>0``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}000000000000000000000000000000{{{f{Dj}}}d}{{{f{Ih}}{f{Ih}}}c{}}{{{f{Ff}}{f{Ff}}}c{}}{{FfFf}c{}}{{NhNh}c{}}{{{f{Nh}}{f{Nh}}}c{}}{{{f{Nh}}{f{Bf}}}c{}}{{EbEb}c{}}{{{f{Eb}}{f{{Db{D`}}}}}c{}}{{{f{Eb}}{f{Eb}}}c{}}{{{f{Hb}}{f{Hb}}}Hb}{{{f{{l{c}}}}{f{Ad}}}{{Gf{AdAKb}}}{}}000000{{{f{Nh}}{f{Ad}}}{{Af{Ad}}}}{{{f{Eb}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ff}}{f{Ad}}}{{Af{Ad}}}}{{{f{Dj}}{f{Aj}}}Ad}{{{f{Ff}}{f{Aj}}}Ad}{{{f{Nh}}{f{Aj}}}Ad}{{{f{Eb}}{f{Aj}}}Ad}{{{f{{AEb{c}}}}{f{Aj}}}AdHl}{{{f{Ff}}}d}{{{f{Ff}}}{{An{d}}}}{{{f{Dj}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{Dj}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Dj}}c}Dj{{Cb{{An{Ad}}}{{C`{{An{Ad}}}}}}Cd}}{{{f{Ff}}c}Ff{{Cb{{An{d}}}{{C`{{An{d}}}}}}Cd}}{{{f{Nh}}c}Nh{{Cb{{An{{f{Bf}}}}}{{C`{{An{{AKd{Bf}}}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{An{{f{{Db{D`}}}}}}}{{C`{{An{{AKd{{Db{D`}}}}}}}}}}Cd}}{{{f{{AEb{c}}}}e}{{AEb{c}}}Hl{{Cb{{An{{f{c}}}}}{{C`{{An{c}}}}}}Cd}}{{{f{Dj}}c}Dj{{Ch{Cf}{{C`{Ad}}}}}}{{{f{Dj}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{AKf}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{AKh}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{Ff}}{f{Cb}}}Ff}{{{f{Nh}}{f{Cb}}}Nh}{{{f{Eb}}{f{Cb}}}Eb}{{{f{Ff}}{f{Cb}}}{{l{c}}}Bn}{{{f{Nh}}{f{Cb}}}{{l{c}}}Bn}{{{f{Eb}}{f{Cb}}}{{l{c}}}Bn}{{{f{Nh}}c}Nh{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{Eb}}c}Eb{{Ch{{f{{Db{D`}}}}}{{C`{{f{{Db{D`}}}}}}}}}}{{{f{Nh}}c}Nh{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{Dj}}{f{Cb}}}{{Af{Dj}}}}{{{f{Dj}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{Ad}}{f{c}}}{{C`{c}}}}}}{{{f{Ff}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{d}}{f{c}}}{{C`{c}}}}}}{{{f{Nh}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{{f{Bf}}}}{f{c}}}{{C`{c}}}}}}{{{f{Eb}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{{f{{Db{D`}}}}}}{f{c}}}{{C`{c}}}}}}{{{f{{AEb{c}}}}g{f{Bh{Db{e}}}}}bHl{}{{Cb{{An{{f{c}}}}{f{e}}}{{C`{e}}}}}}{{{f{Dj}}c}Dj{{Cb{Ad}{{C`{Ad}}}}Cd}}{{{f{Ff}}c}Ff{{Cb{d}{{C`{d}}}}Cd}}{{{f{Nh}}c}Nh{{Cb{{f{Bf}}}{{C`{{AKd{Bf}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{f{{Db{D`}}}}}{{C`{{AKd{{Db{D`}}}}}}}}Cd}}{{{f{{AEb{c}}}}e}{{AEb{c}}}Hl{{Cb{{f{c}}}{{C`{c}}}}Cd}}{{{f{Ff}}Dl}Dn}{{{f{Nh}}Dl}Dn}{{{f{Eb}}Dl}Dn}{{{f{AJn}}Dl}Dn}{{{f{Ff}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Nh}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Eb}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{AJn}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Ff}}}{{Af{Dn}}}}{{{f{Nh}}}{{Af{Dn}}}}{{{f{Eb}}}{{Af{Dn}}}}{{{f{{AEb{c}}}}}{{Af{Dn}}}Hl}{eAKj{}{{Gd{}{{B`{c}}}}}}0{{ADde}AKl{}{{Gd{}{{B`{c}}}}}}0{{{f{Kb}}}Hb}{{{f{Nh}}}Eb}{{{f{Hb}}}Hb}{{{f{Df}}}{{f{Df}}}}{{{f{Mb}}}{{f{Df}}}}{{{f{AKn}}}{{f{Df}}}}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}}{{An{{f{{Db{c}}}}}}}A@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{Dj}}{f{{l{c}}}}{f{{l{e}}}}g}DjBnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{Ff}}{f{Ff}}}c{}}{{FfFf}c{}}1001{{{f{c}}}{{f{e}}}{}{}}00000000000000000000000000000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}00000000000000000000000000000000000{Df{{AAn{Df}}}}{{{f{ALj}}{f{ALj}}c}{{Af{ALj}}}ALl}{{{f{ALn}}{f{Df}}}{{Af{Ad}}}}0{{{f{Hb}}{f{Df}}}Hb}{{{f{Df}}Df}Df}{{{f{Dj}}{f{Df}}}{{Af{Ad}}}}{{{f{Ff}}{f{Df}}}{{Af{Ad}}}}{{{f{Nh}}{f{Df}}}{{Af{Ad}}}}{{{f{Eb}}{f{Df}}}{{Af{Ad}}}}{{{f{AJn}}{f{Df}}}{{Af{Ad}}}}{{{f{ALn}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ih}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Dj}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ff}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Nh}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Eb}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{AJn}}{f{Df}}Ef}{{Af{Ad}}}}`{{{f{{l{c}}}}{f{Ad}}}{{Gf{AdAKb}}}{}}0000{{{f{AKf}}{f{Ad}}}{{Af{Ad}}}}{{{f{AKh}}{f{Ad}}}{{Af{Ad}}}}{{{f{{AM`{ce}}}}}{{AM`{ce}}}BnBn}{{{f{Kb}}}Kb}{{{f{AMb}}}AMb}{{{f{Hb}}}Hb}{{{f{AMd}}}AMd}{{{f{Df}}}Df}{{{f{AMf}}}AMf}{{{f{Mb}}}Mb}{{{f{AMh}}}AMh}{{{f{AMj}}}AMj}{{{f{AMl}}}AMl}{{{f{Lf}}}Lf}{{{f{Ld}}}Ld}{{{f{AMn}}}AMn}{{{f{AN`}}}AN`}{{{f{Ln}}}Ln}{{{f{Ll}}}Ll}{{{f{Cj}}}Cj}{{{f{Cl}}}Cl}{{{f{ANb}}}ANb}{{{f{ANd}}}ANd}{{{f{Dd}}}Dd}{{{f{Cn}}}Cn}{{{f{ANf}}}ANf}{{{f{Al}}}Al}{{{f{ANh}}}ANh}{{{f{ANj}}}ANj}{{{f{ANl}}}ANl}{{{f{ANn}}}ANn}{{{f{ADd}}}ADd}{{{f{AO`}}}AO`}{{{f{c}}{f{Bhe}}}b{}{}}000000000000000000000000000000{{{f{c}}}b{}}000000000000000000000000000000000000000000000000000000{{{f{BhMb}}Df}b}{AObe{}{{AKj{c}}AIj}}0{{AObADd}e{}{{AKl{c}}AIj}}0{{{f{Df}}}d}00{AOdDf}{{{f{Mb}}}{{f{Df}}}}{{}Hb}{{}AMd}{{}Df}{{}ADd}{El{{f{c}}}{}}{{{f{{AM`{ce}}}}}{{f{g}}}BnBn{}}11111111111111111111111111111111111{{{f{Bh{AM`{ce}}}}}{{f{Bhg}}}BnBn{}}{El{{f{Bhc}}}{}}00000000000000000000000000000000000{{{f{Ih}}{f{Ih}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gf{AdAKb}}}{}}000000{Elb}00000000000000000000000000000000000{{{f{ALn}}}{{f{Df}}}}{{{f{Ih}}}{{f{Df}}}}{{{f{Kb}}}{{f{Df}}}}{{{f{Hb}}}Df}`{{{f{Hb}}{f{Hb}}}d}{{{f{AMd}}{f{AMd}}}d}{{{f{Df}}{f{ADd}}}d}{{{f{Df}}{f{Df}}}d}{{{f{AMf}}{f{AMf}}}d}{{{f{Mb}}{f{Mb}}}d}{{{f{AMh}}{f{AMh}}}d}{{{f{ADd}}{f{ADd}}}d}{{{f{AO`}}{f{AO`}}}d}{{{f{Hb}}{f{Hb}}d}d}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Nh}}{f{Bf}}}Ff}{{{f{Nh}}{f{Nh}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}{{{f{Eb}}{f{{Db{D`}}}}}Ff}543201{{{f{c}}{f{e}}}d{}{}}00000000000000000000000{{{f{Dj}}}{{Af{{Gl{Ad{AFn{Jf}}}}}}}}{{{f{{AM`{ce}}}}}MbBnBn}{{{f{Ff}}d}{{Af{Ff}}}}{{{f{Eb}}{f{{Db{D`}}}}}{{Af{Eb}}}}{{{f{Nh}}{f{Ff}}}{{Af{{l{Dd}}}}}}{{{f{Eb}}{f{Ff}}}{{Af{{l{Cn}}}}}}{{{f{{AEb{c}}}}{f{Ff}}}{{Af{{l{{Hh{c}}}}}}}Hl}{{ALl{f{AOf}}{f{AOf}}}{{Af{AOf}}}}{{{f{Dj}}{f{BhFl}}}Fn}{{{f{Nh}}{f{BhFl}}}Fn}{{{f{Eb}}{f{BhFl}}}Fn}{{{f{{AEb{c}}}}{f{BhFl}}}FnHl}{{{f{AMb}}{f{BhFl}}}Fn}{{{f{Hb}}{f{BhFl}}}Fn}0{{{f{AMd}}{f{BhFl}}}Fn}{{{f{Df}}{f{BhFl}}}Fn}0{{{f{AMf}}{f{BhFl}}}Fn}{{{f{Mb}}{f{BhFl}}}Fn}{{{f{AMh}}{f{BhFl}}}Fn}0{{{f{ADd}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{AO`}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{Dj}}c}b{{Ch{{An{Cf}}}}}}{cc{}}0000000{{{f{{Db{D`}}}}}Hb}{dHb}{{{f{Bf}}}Hb}{{{An{c}}}Hb{{AOj{Hb}}}}4{cHbAOl}55{HbDf}{{{f{ADd}}}Df}{{{f{Hb}}}Df}88{{{f{Hb}}}Mb}{{{f{AOn}}}Mb}:{{{f{AO`}}}AMh};;;;;;;;;;;;;;;;;;;;{B@`ADd}{B@bADd}=={{{f{ADd}}d}Df}{eDj{{B@d{Ad}}}{{Gd{}{{B`{c}}}}}}{cDj{{Gd{}{{B`{{An{{AAn{G`}}}}}}}}}}{cDj{{Gd{}{{B`{{An{Ad}}}}}}}}{cFf{{Gd{}{{B`{d}}}}}}{eNh{{Lb{Bf}}}{{Gd{}{{B`{{An{c}}}}}}}}{eNh{{`{Bf}}}{{Gd{}{{B`{c}}}}}}{eEb{{Lb{{Db{D`}}}}}{{Gd{}{{B`{{An{c}}}}}}}}{eEb{{`{{Db{D`}}}}}{{Gd{}{{B`{c}}}}}}{e{{AEb{c}}}Hl{{Gd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{{An{d}}}}}}}}{{{f{Bf}}e}Nh{{Lb{Bf}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Eb{{Lb{{Db{D`}}}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}{{AEb{c}}}Hl{{Bd{}{{B`{{An{c}}}}}}}}:<98756{eAJn{{`{{Db{D`}}}}}{{Gd{}{{B`{c}}}}}}{eAJn{{Lb{{Db{D`}}}}}{{Gd{}{{B`{{An{c}}}}}}}}6{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{d}}}}}}{{{f{Bf}}e}Nh{{Lb{Bf}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}Eb{{Lb{{Db{D`}}}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}{{AEb{c}}}Hl{{Bd{}{{B`{c}}}}}}{{B@fDf}Mb}{cDj{{Gn{}{{B`{{An{Ad}}}}}}}}{cFf{{Gn{}{{B`{d}}}}}}{cFf{{Gn{}{{B`{{An{d}}}}}}}}{eNh{{Lb{Bf}}IjIl}{{Gn{}{{B`{{An{c}}}}}}}}{eNh{{`{Bf}}IjIlB@h}{{Gn{}{{B`{c}}}}}}{eEb{{Lb{{Db{D`}}}}IjIl}{{Gn{}{{B`{{An{c}}}}}}}}{eEb{{`{{Db{D`}}}}IjIlB@h}{{Gn{}{{B`{c}}}}}}{{c{f{Bf}}Df}Dj{{Gn{}{{B`{{An{Ad}}}}}}}}{{{f{Bf}}{f{{Db{d}}}}}Ff}{{{f{Bf}}{f{{Db{c}}}}}Nh{{Lb{Bf}}}}{{{f{Bf}}{f{{Db{c}}}}}Eb{{Lb{{Db{D`}}}}}}{{{f{Bf}}{f{{Db{c}}}}}{{AEb{c}}}Hl}{{{f{Bf}}{f{{Db{{An{d}}}}}}}Ff}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Nh{{Lb{Bf}}}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Eb{{Lb{{Db{D`}}}}}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}{{AEb{c}}}Hl}{cFf{{H`{}{{B`{{An{d}}}}}}}}{{{F`{c}}ADd}{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}A@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{F`{c}}ADd}{{AIj{}{{AL`{e}}{ALb{c}}{ALd{g}}}}}{ALf{ALh{e}}}A@f{{Fd{}{{B`{e}}}}H`IjIl}}{{ElcADd}{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}A@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{Bf}}{f{Ad}}El}Dj}{{{f{Bf}}dEl}Ff}{{{f{Bf}}{f{Bf}}El}Nh}{{{f{Bf}}{f{{Db{D`}}}}El}Eb}{{{f{Bf}}{f{{Db{D`}}}}El}AJn}{{{f{Bf}}cEl}{{AEb{c}}}Hl}{{ElADd}{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}A@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{Bf}}El}Dj}{{{f{Bf}}El}Ff}{{{f{Bf}}El}Nh}{{{f{Bf}}El}Eb}{{{f{Bf}}El}AJn}{{{f{Bf}}El}{{AEb{c}}}Hl}{{{f{Bf}}El{f{Df}}}Dj}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}El}{{An{c}}}A@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{Ih}}El}{{Af{Hb}}}}{{{f{ALn}}El}{{Af{Hb}}}}0{{{f{Dj}}El}{{Af{Hb}}}}{{{f{Ff}}El}{{Af{Hb}}}}{{{f{Nh}}El}{{Af{Hb}}}}{{{f{Eb}}El}{{Af{Hb}}}}{{{f{AJn}}El}{{Af{Hb}}}}{{{f{{AEb{c}}}}El}{{Af{Hb}}}Hl}{{{f{Ih}}El}Hb}{{{f{ALn}}El}Hb}0{{{f{Dj}}El}Hb}{{{f{Ff}}El}Hb}{{{f{Nh}}El}Hb}{{{f{Eb}}El}Hb}{{{f{AJn}}El}Hb}{{{f{{AEb{c}}}}El}HbHl}{{{f{Dj}}El}{{An{Ad}}}}{{}Df}00000000000000000000000{{{f{Dj}}}Ad}{{{f{{AEb{c}}}}El}{{An{{f{Hj}}}}}Hl}0{{{f{Hb}}}{{An{{f{Bf}}}}}}{{{f{B@j}}El}Hb}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}El}{{An{c}}}A@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{Dj}}}El}{{{f{Nh}}}El}{{{f{AJn}}}El}{{{f{Dj}}dd}{{Af{Aj}}}}{{{f{Ff}}dd}{{Af{Aj}}}}{{{f{Nh}}dd}{{Af{Aj}}}}{{{f{Eb}}dd}{{Af{Aj}}}}{{{f{AJn}}dd}{{Af{Aj}}}}{{{f{{AEb{c}}}}dd}{{Af{Aj}}}Hl}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Nh}}{f{Nh}}}Ff}{{{f{Nh}}{f{Bf}}}Ff}{{{f{Eb}}{f{{Db{D`}}}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}543201{{{f{Hb}}{f{Bhc}}}bAB`}{{{f{AMd}}{f{Bhc}}}bAB`}{{{f{Df}}{f{Bhc}}}bAB`}{{{f{Mb}}{f{Bhc}}}bAB`}{{{f{AMh}}{f{Bhc}}}bAB`}{{{f{ADd}}{f{Bhc}}}bAB`}{{{f{AO`}}{f{Bhc}}}bAB`}{{{f{Hb}}{f{Bhc}}d}bAB`}{DfDf}{{}El}00000000000000000000000000000000000{{{f{Dj}}}{{f{Df}}}}{{{f{Df}}}{{An{{f{Df}}}}}}{{{f{ADd}}}{{An{{f{ADd}}}}}}{ce{}{}}00000000000000000000000000000000000{{B@l{An{El}}El}{{Af{Ih}}}}{{B@l{An{El}}El}Ih}{{{f{Dj}}}c{}}{{{f{Ff}}}c{}}{{{f{Nh}}}c{}}{{{f{Eb}}}c{}}{{{f{AJn}}}c{}}{{{f{{AEb{c}}}}}eHl{}}{{B@nDf}{{Af{Kb}}}}{IhAd}{B@lAd}{{Kb{f{Bf}}}Ad}{Hb{{Af{Hb}}}}{{{f{Df}}}d}00{{{f{Hb}}}d}111010111110101011110111101{{{f{ADd}}}d}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}}{{ADl{cgADj}}}A@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{Dj}}}{{`{{Bd{}{{B`{Jf}}}}}}}}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}}{{An{c}}}A@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{Df}}}{{f{Df}}}}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Nh}}{f{Bf}}}Ff}{{{f{Nh}}{f{Nh}}}Ff}{{{f{Eb}}{f{{Db{D`}}}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}543210{{{f{ALj}}{f{ALj}}}{{Af{{Gl{ALjALj}}}}}}{{DjDj}{{Af{{Gl{DjDj}}}}}}{{{f{Df}}{f{Df}}}{{Af{d}}}}{{{f{AMd}}}{{An{Df}}}}{{{f{Ff}}}{{An{d}}}}{{{f{Ff}}}Kb}{{{f{Nh}}}Kb}{{{f{Eb}}}Kb}{{{f{Ff}}}{{An{Kd}}}}{{{f{AKf}}}{{An{Hn}}}}{{{f{AKh}}}{{An{Kd}}}}{{{f{AKf}}}Kb}{{{f{AKh}}}Kb}{{{f{Df}}{f{Df}}}{{Af{Df}}}}9876{{{f{Bf}}{f{{Db{D`}}}}ElEl}Ff}{{{f{Ih}}{f{Ih}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gf{AdAKb}}}{}}000000{{{f{Nh}}}{{Af{El}}}}{{{f{Eb}}}{{Af{El}}}}{{{f{Mb}}}{{f{B@f}}}}`{{}c{}}00{{{f{Bf}}c}Nh{{Lb{{Db{{AKd{Bf}}}}}}}}{{{f{Bf}}c}Nh{{Lb{{Db{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Nh{{Lb{{Db{{An{{AKd{Bf}}}}}}}}}}{{{f{Bf}}c}Nh{{Lb{{Db{{f{Bf}}}}}}}}{{{f{Bf}}c}Eb{{Lb{{Db{{AKd{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Eb{{Lb{{Db{{An{{AKd{{Db{D`}}}}}}}}}}}}{{{f{Bf}}c}Eb{{Lb{{Db{{An{{f{{Db{D`}}}}}}}}}}}}{{{f{Bf}}c}Eb{{Lb{{Db{{f{{Db{D`}}}}}}}}}}{{{f{Bf}}{f{{Db{c}}}}}{{AEb{c}}}Hl}{{{f{Bf}}e}{{AEb{c}}}Hl{{Lb{{Db{{An{c}}}}}}}}{{DfHb}Kb}{{{f{Bf}}Df}Mb}{{{f{Bf}}}{{AEb{c}}}Hl}{{{f{Dj}}ElEl}Dj}{{{f{Ff}}ElEl}Ff}{{{f{Nh}}ElEl}Nh}{{{f{Eb}}ElEl}Eb}{{{f{AJn}}ElEl}AJn}{{{f{{AEb{c}}}}ElEl}{{AEb{c}}}Hl}{{{f{Bf}}{F`{c}}}{{AEb{c}}}Hl}{{{f{Bf}}{F`{c}}Gj}{{AEb{c}}}Hl}{{{l{c}}}{{AM`{ec}}}BnBn}{{}AMf}{{{f{Ff}}}c{}}{Ffc{}}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Nh}}{f{Nh}}}Ff}{{{f{Nh}}{f{Bf}}}Ff}{{{f{Eb}}{f{{Db{D`}}}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}542301{{{f{Dj}}}{{Af{{AFn{Jf}}}}}}9{{{f{Dj}}}{{`{{Md{}{{B`{{An{Ad}}}}}}}}}}{{{f{Nh}}}{{`{{Md{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{BhDj}}}{{`{{Mf{}{{B`{{An{Ad}}}}}}}}}}{{{f{Nh}}}{{`{{Mf{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{Hb}}{f{Hb}}}{{An{BA`}}}}{{{f{AMh}}{f{AMh}}}{{An{BA`}}}}{{{f{Ih}}}{{An{El}}}}{{{f{{AM`{ANhIf}}}}}{{An{El}}}}{{{f{AKf}}KdMh}{{Af{{An{Hn}}}}}}{{{f{AKh}}KdMh}{{Af{{An{Kd}}}}}}{{{f{AKf}}KdMh}{{Af{Kb}}}}{{{f{AKh}}KdMh}{{Af{Kb}}}}{{{f{Bf}}ElKd}{{Af{Ff}}}}{{{f{{l{c}}}}{f{Ad}}}{{Gf{AdAKb}}}{}}000000{{{f{Dj}}}Dj}{{{f{Ff}}}Ff}{{{f{Nh}}}Nh}{{{f{Eb}}}Eb}{{{f{AJn}}}AJn}{{{f{{AEb{c}}}}}{{AEb{c}}}Hl}`{{{f{Ih}}}El}{{{f{{AM`{ANhIf}}}}}El}{{{f{Ff}}c{An{d}}}{{Af{Ff}}}{{Gd{}{{B`{Hd}}}}}}{{{f{Nh}}c{An{{f{Bf}}}}}{{Af{Nh}}}{{Gd{}{{B`{Hd}}}}}}{{{f{Eb}}c{An{{f{{Db{D`}}}}}}}{{Af{Eb}}}{{Gd{}{{B`{Hd}}}}}}{{{f{Ff}}ce}{{Af{Ff}}}{{Gd{}{{B`{Hd}}}}}{{Cb{{An{d}}}{{C`{{An{d}}}}}}}}{{{f{Nh}}ce}{{Af{Nh}}}{{Gd{}{{B`{Hd}}}}}{{Cb{{An{{f{Bf}}}}}{{C`{{An{Dh}}}}}}}}{{{f{Eb}}ce}{{Af{Eb}}}{{Gd{}{{B`{Hd}}}}}{{Cb{{An{{f{{Db{D`}}}}}}}{{C`{{An{{F`{D`}}}}}}}}}}{{{f{Ff}}{f{Ff}}{An{d}}}{{Af{Ff}}}}{{{f{Nh}}{f{Ff}}{An{{f{Bf}}}}}{{Af{Nh}}}}{{{f{Eb}}{f{Ff}}{An{{f{{Db{D`}}}}}}}{{Af{Eb}}}}{{{f{BhDj}}}b}{{{f{BhDj}}Df}b}{{{f{BhMb}}B@f}b}{{{f{Dj}}Jf}Dj}{{{f{Ff}}Jf}Ff}{{{f{Nh}}Jf}Nh}{{{f{Eb}}Jf}Eb}{{{f{AJn}}Jf}AJn}{{{f{{AEb{c}}}}Jf}{{AEb{c}}}Hl}{{{f{Dj}}Jf{An{{f{Ad}}}}}Dj}{{{f{Ff}}Jf{An{d}}}Ff}{{{f{Nh}}Jf{An{{f{Bf}}}}}Nh}{{{f{Eb}}Jf{An{{f{{Db{D`}}}}}}}Eb}{{{f{AJn}}Jf{An{{f{{Db{D`}}}}}}}AJn}{{{f{{AEb{c}}}}Jf{An{{Hh{c}}}}}{{l{{Hh{c}}}}}Hl}{{{f{Ff}}d}Ff}{{{f{Nh}}d}Nh}{{{f{Eb}}d}{{l{Cn}}}}{{{f{AJn}}d}AJn}{{{f{Ff}}Dl}{{l{Al}}}}{{{f{Nh}}Dl}{{l{Dd}}}}{{{f{Eb}}Dl}{{l{Cn}}}}{{{f{AJn}}Dl}AJn}{{{f{AKf}}D`}Kb}{{{f{AKh}}D`}Kb}{{{f{Hb}}{f{Df}}}{{An{Hb}}}}`{{{f{Ih}}{f{Ih}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gf{AdAKb}}}{}}000000{{{f{Ff}}}{{An{Hd}}}}{{{f{Ff}}}Kb}{{{f{Eb}}}Kb}{{{f{Nh}}{f{Dn}}}Nh}{{{f{Nh}}{f{c}}}Nh{{Lb{{Db{Hd}}}}Ml}}{{{f{Eb}}{f{c}}}Eb{{Lb{{Db{Hd}}}}Ml}}{{{f{Eb}}{f{Dn}}}Eb}{{{f{Df}}AMf}ADd}{{{f{Mb}}AMf}AOn}{AMhAO`}{{{f{Df}}{f{Bf}}AMf}AOn}{AMh{{f{Bf}}}}{{{f{Nh}}El}{{Af{Ad}}}}{{{f{BhDj}}Df}b}{{{f{ADd}}}{{f{ADd}}}}{{{f{Dj}}}{{Af{Nd}}}}{{{f{c}}}e{}{}}000000000000000000000000000000{{{f{Df}}}Df}{{{f{ADd}}}BAb}{{{f{c}}}Dh{}}00{{{f{Eb}}}Nh}{{{f{Hb}}{f{Hb}}}d}{{{f{Dj}}c}{{Af{Dj}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{Dj}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{g{{Gf{AKje}}}{}{}{{Gd{}{{B`{{Gf{ce}}}}}}}}0{{ADdg}{{Gf{AKle}}}{}{}{{Gd{}{{B`{{Gf{ce}}}}}}}}0{AOb{{Gf{eg}}}{}{{AKj{c}}AIj}{}}0{{AObADd}{{Gf{eg}}}{}{{AKl{c}}AIj}{}}0{{{f{Hb}}}{{Af{c}}}K`}{c{{Gf{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000{{{f{Hb}}{f{Df}}}{{Af{Hb}}}}{{{f{Df}}AMf}{{Af{ADd}}}}{{{f{Dj}}{f{{l{c}}}}e}{{Af{Dj}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Nl{}}00000000000000000000000000000000000{{{f{ADd}}}ADd}{{{f{Ff}}}{{Af{Ff}}}}{{{f{Nh}}}{{Af{Nh}}}}{{{f{Eb}}}{{Af{Eb}}}}{{{f{{AEb{c}}}}}{{Af{{l{{Hh{c}}}}}}}Hl}{{{f{BhKb}}Hb}b}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}El}cA@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{Kb}}}{{f{Hb}}}}1{{{f{Df}}Hb}d}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}}gA@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{AKf}}D`}Kb}{{{f{AKh}}D`}Kb}{{{f{Ff}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{BAd}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{BAf}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{AOf}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{BAh}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{BAj}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{BAl}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{BAn}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{BB`}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{B@l}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{AKf}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{AKh}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{Nh}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{Eb}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{AJn}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{{AEb{c}}}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}Hl}{{{f{Ff}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{BAd}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{BAf}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{AOf}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{BAh}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{BAj}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{BAl}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{BAn}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{BB`}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{B@l}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{AKf}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{AKh}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{Nh}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{Eb}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{AJn}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{{AEb{c}}}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}Hl}{ce{}{}}00000000000000000000000000000000000{Elc{}}0{El{{BBb{ce}}}{}{}}{{{f{{Db{Nn}}}}e}c{}{{O`{{f{Dn}}}{{C`{c}}}}}}{{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}{An{Gj}}}{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}A@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{Df}}}Hb}{{{f{Dj}}{f{{l{c}}}}e}DjBn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}```````````{{{f{c}}h}b{}}{{{f{ALj}}}d}{{ALjd}ALj}{{{f{BhBBd}}{An{{f{Bf}}}}}b}{{{f{BhALj}}{f{ALj}}}{{Af{b}}}}{{{f{BhBBd}}}b}{{{f{BhBBd}}{f{Bf}}}b}{{{f{ALj}}Dl}Dn}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{ALj}}{f{ALj}}c}{{Af{ALj}}}ALl}{{{f{ALj}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{ALj}}}ALj}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{}BBf}{El{{f{c}}}{}}000{El{{f{Bhc}}}{}}000{{BBdc}ALj{{Gd{}{{B`{{An{{f{Bf}}}}}}}}}}{Elb}000{{{f{ALj}}}{{f{Df}}}}{{{f{ALj}}{f{Bf}}}c{}}{{{f{ALj}}{f{ALj}}}c{}}{{{f{ALj}}{f{Nh}}}c{}}120{{ALl{f{AOf}}{f{AOf}}}{{Af{AOf}}}}{BBdALj}{BBf{{Kj{BBh}}}}{cc{}}000{{AOf{Kj{BBh}}dBBj}ALj}{{AOfBBj}ALj}{{{f{Nh}}{f{AOd}}BBj}{{Af{ALj}}}}{{{f{Bf}}dElBBj}ALj}{{{f{ALj}}El}{{Af{Hb}}}}{{{f{ALj}}El}Hb}{{{f{ALj}}}{{f{{Kj{BBh}}}}}}=;<;<={{}El}000{ce{}{}}0000{ALjAd}{{{f{ALj}}}d}0{{{f{ALj}}}BBl}{{{f{ALj}}}El}{{{f{ALj}}{f{Nh}}}c{}}{{{f{ALj}}{f{Bf}}}c{}}{{{f{ALj}}{f{ALj}}}c{}}210{{{f{ALj}}{f{ALj}}}{{Af{{Gl{ALjALj}}}}}}{{DjDj}{{Af{{Gl{DjDj}}}}}}{{{f{ALj}}}Kb}{{{f{BhBBf}}{f{{Kj{BBh}}}}}{{Af{b}}}}1{{{f{ALj}}}{{Af{El}}}}{{{f{ALj}}}{{f{Bf}}}}{{{f{Bf}}ElBBj}BBd}{{{Kj{BBh}}}BBf}{{{f{BhBBl}}}{{An{c}}}{}};9:;9:<{{{f{ALj}}}{{f{AOf}}}}{{{f{BhBBd}}{f{Bf}}}{{Gl{Lhd}}}}`{{{f{BBl}}}{{Gl{El{An{El}}}}}}{{{f{ALj}}d}ALj}{{{f{ALj}}Dl}ALj}`{{{f{ALj}}AMfd}En}{{{f{ALj}}{f{AOd}}BBn}ALj}{{{f{ALj}}}{{Af{ALj}}}}{{{f{ALj}}}ALj}{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0000000{{{f{c}}}Nl{}}0004{{{f{ALj}}}d}{{{f{ALj}}}{{Af{BC`}}}}{ce{}{}}000``````{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{AOdBBh}{{{f{BBj}}}BBj}{{{f{BBh}}}BBh}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{}BBj}{{}BBh}{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0{Elb}0{{{f{BBj}}{f{BBj}}}d}{{{f{BBh}}{f{Bf}}}{{An{Lh}}}}{{{f{BBj}}{f{BhFl}}}Fn}{{{f{BBh}}{f{BhFl}}}Fn}{cc{}}0{{{f{BBh}}Lh}{{f{Bf}}}}{{{f{BBh}}}{{f{AOd}}}}{{{f{BBh}}Lh}{{An{{f{Bf}}}}}}{{}El}0{ce{}{}}0{{{f{BBh}}}d}0{{{f{BBh}}}El}{{{f{BBh}}{f{BBh}}}d}{{{f{c}}}e{}{}}0{c{{Gf{e}}}{}{}}000{{{f{c}}}Nl{}}066`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}BCb}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{{}b}{Elb}{{{f{BhBCb}}}b}2{cc{}}6{{}El}{ce{}{}}<<;{{}d}1```````660````````````````````````{{{f{BCd}}}{{f{Bf}}}}<<;;`99{{{f{BCd}}}f}9977`{{{f{BCf}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{BCd}}{f{BhFl}}}{{Gf{bAOh}}}}077{cBCd{{AOj{{AKd{Bf}}}}}}{{}{{Jj{{f{Bf}}BCf}{{C`{b}}}}}}8877{cAKbAIn}````{{{Jj{{f{Bf}}BCf}{{C`{b}}}}}b}{cAKbBCh}{{{f{c}}}Dh{}}{c{{Gf{e}}}{}{}}000{{{f{c}}}Nl{}}0==``````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BCj}}}BCj}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{BhFl}}L`El}Fn}{cc{}}{{}BCl}{{}BCj}{{}{{An{El}}}}{{}Dh}{{}d}{{}El}{ce{}{}}{{{An{BCl}}}b}{BCjb}{{{An{El}}}b}2{{{An{d}}}b}{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}7```````````{{{f{c}}h}b{}}00{{{f{BhBC`}}{F`{Ad}}{f{BCn}}}{{Af{b}}}}{{{f{BC`}}{f{Cb}}}{{F`{Ad}}}}0{{{f{BC`}}{f{Ff}}}{{Af{BC`}}}}{{{f{BC`}}{f{{Db{B@f}}}}}{{Af{BC`}}}}0{{{f{BC`}}JfEl}BC`}{{{f{BC`}}{f{BC`}}}c{}}{{BC`{f{Ad}}}c{}}{{{f{BC`}}{f{Ad}}}c{}}{{{f{BhBC`}}}{{f{BhBC`}}}}{{{f{BhBC`}}{f{Bf}}e}{{Af{{f{BhBC`}}}}}BD`{{O`{{f{Ad}}}{{C`{c}}}}}}{{{f{BhBC`}}Ele}{{Af{{f{BhBC`}}}}}BD`{{O`{{f{Ad}}}{{C`{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{BC`}}}{{`{{Bd{}{{B`{El}}}}}}}}{{{f{BC`}}}BC`}{{{f{BDb}}}BDb}{{{f{BDd}}}BDd}2{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{c}}}b{}}0000{{{f{BC`}}{f{Bf}}}{{Af{{f{Ad}}}}}}{{{f{BC`}}e}{{Af{{F`{{f{Ad}}}}}}}{{Lb{Bf}}}{{Gd{}{{B`{c}}}}}}{{}BDd}{{}BC`}{El{{f{c}}}{}}0000{El{{f{Bhc}}}{}}0000{{{f{BC`}}{f{Ad}}}c{}}{{BC`{f{Ad}}}c{}}{{{f{BC`}}{f{BC`}}}c{}}{Elb}0000{{{f{BC`}}{f{Bf}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{Bf}}}{{Af{Ad}}}}{{{f{BC`}}{f{{Db{c}}}}}BC`{{Lb{Bf}}}}{{{f{BC`}}{f{{BDf{{f{Bf}}}}}}}BC`}{{{f{BC`}}{An{{f{{Db{c}}}}}}}{{Af{BC`}}}{{Lb{Bf}}}}{{{f{BC`}}}{{F`{Df}}}}<{{{f{BDh}}}BC`}{{{f{BCn}}}BC`}{{{f{BDd}}{f{BDd}}}d}{{{f{BC`}}{f{BC`}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{BC`}}}El}`{{{f{BC`}}e}{{Af{BC`}}}{{Lb{Bf}}}{{Gd{}{{B`{c}}}}}}{{{f{BC`}}{F`{Ad}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{BC`}}}{{Af{b}}}}{{{f{BC`}}}{{F`{Mb}}}}{{{f{BC`}}AFh}{{Af{BC`}}}}{{{f{BC`}}{f{Ff}}}{{Af{BC`}}}}{{{f{BDb}}{f{BhFl}}}Fn}{{{f{BDd}}{f{BhFl}}}Fn}{{{f{BC`}}{f{BhFl}}}Fn}0{cc{}}0000{g{{Gf{ic}}}{}{}{{Gh{c}{{B`{e}}}}}{}}{cBC`{{Gd{}{{B`{Ad}}}}}}{{{f{{Db{BDj}}}}}{{Af{BC`}}}}{{{f{{Db{BDj}}}}{f{BCn}}}{{Af{BC`}}}}{{c{f{BCn}}}{{Af{BC`}}}{{Bd{}{{B`{{f{BDj}}}}}}}}{{{f{BC`}}El}{{An{{F`{Hb}}}}}}{{{f{BC`}}{f{Bf}}}{{An{El}}}}{{{f{BC`}}}{{F`{{f{Bf}}}}}}{{{f{BC`}}}{{F`{B@f}}}}{{{f{BC`}}}{{f{{Db{Ad}}}}}}{{{f{BhBC`}}}{{f{Bh{F`{Ad}}}}}}{{{f{BC`}}El}{{Af{BDj}}}}{{{f{BC`}}El{f{BhBDj}}}{{Af{b}}}}{{{f{BC`}}El{f{BhBDj}}}b}{{{f{BC`}}}{{An{{Af{Df}}}}}}`{{{f{BC`}}e}{{Af{BDl}}}{{Lb{Bf}}}{{Gd{}{{B`{c}}}}}}0{{{f{BC`}}{F`{Ad}}dd}{{Af{BDl}}}}{{{f{BDd}}{f{Bhc}}}bAB`}{{{f{BhBC`}}{An{N`}}}{{Af{BAh}}}}{{{f{BC`}}{An{El}}}BC`}{{{f{BC`}}}El}{{{f{BC`}}{f{{Db{Ad}}}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{{Db{Ad}}}}}{{Af{{f{BhBC`}}}}}}{{{f{BhBC`}}{f{{Db{Ad}}}}}{{f{BhBC`}}}}{{{f{BC`}}{BDn{El}}}{{f{c}}}{}}{{{f{BC`}}BE`}{{f{c}}}{}}{{{f{BC`}}{f{Bf}}}{{f{c}}}{}}{{{f{BC`}}{Lj{El}}}{{f{c}}}{}}{{{f{BC`}}{BEb{El}}}{{f{c}}}{}}{{{f{BC`}}{BEd{El}}}{{f{c}}}{}}{{{f{BC`}}El}{{f{c}}}{}}{{{f{BC`}}{BEf{El}}}{{f{c}}}{}}{{}El}0000{{{f{BhBC`}}Elc}{{Af{{f{BhBC`}}}}}BD`}{ce{}{}}000000{{{f{BC`}}}{{Af{Ff}}}}{{{f{BC`}}}d}1{{{f{BC`}}}{{Jh{Ad}}}}{{{f{BC`}}AMfd}BEh}{{{f{BC`}}}{{`{{Bd{}{{B`{BC`}}}}}}}}{{{f{BC`}}}BEj}{{{f{BC`}}}El}{{{f{BC`}}}{{Af{{An{Ad}}}}}}{{{f{BC`}}BDb}{{Af{{An{Ad}}}}}}1{{BC`{f{Ad}}}c{}}{{{f{BC`}}{f{BC`}}}c{}}{{{f{BC`}}{f{Ad}}}c{}}55{{{F`{c}}}{{Af{BC`}}}BD`}{{{F`{Ad}}}BC`}{{{F`{Ad}}}{{Af{BC`}}}}{{{f{BhBEh}}}{{An{c}}}{}}{{{f{BhBEj}}}{{An{c}}}{}}{{{f{BC`}}}BC`}{{{f{BC`}}cd}{{Af{{F`{BC`}}}}}{{BEl{Dh}}}}0{{BC`e}{{Af{c}}}{}{{Cb{BC`}{{C`{{Af{c}}}}}}}}{{{f{BhBC`}}e}{{Af{c}}}{}{{Cb{{f{BhBC`}}}{{C`{{Af{c}}}}}}}}{{BC`gc}{{Af{e}}}{}{}{{Cb{BC`c}{{C`{{Af{e}}}}}}}}{{{f{BhBC`}}}{{An{Ad}}}}{{{f{BC`}}{f{BC`}}}d}><={{{f{BhBC`}}{f{Bf}}{f{Bf}}}{{Af{{f{BhBC`}}}}}}{{{f{BhBC`}}{f{Bf}}c}{{Af{{f{BhBC`}}}}}BD`}{{{f{BhBC`}}Elc}{{Af{{f{BhBC`}}}}}BD`}19`{{{f{BC`}}{f{Ad}}dd{An{I`}}}{{Af{BC`}}}}0{{{f{BC`}}Eldd{An{I`}}}{{Af{BC`}}}}{{{f{BC`}}}BCn}{{{f{BC`}}{f{BC`}}}{{Af{b}}}}{{{f{BC`}}e}{{Af{BC`}}}{{Lb{Bf}}}{{Gd{}{{B`{c}}}}}}{{{f{BC`}}El}{{An{{f{Ad}}}}}}{{{f{BC`}}c}{{Af{BC`}}}{{BEn{El}}}}2{{{f{BC`}}c}{{Af{{F`{Ad}}}}}{{BEl{B@f}}}}{{{f{BC`}}e{f{BF`}}}{{Af{BC`}}}{{Lb{Bf}}}{{Gd{}{{B`{c}}}}}}{{{f{BC`}}e{f{BCn}}}{{Af{BC`}}}{{Lb{Bf}}}{{Gd{}{{B`{c}}}}}}{{{f{BhBC`}}{f{{Db{c}}}}}{{Af{b}}}{{Lb{Bf}}}}{{{f{BC`}}}{{Gl{ElEl}}}}{{{f{BC`}}Jf}BC`}{{{f{BC`}}}d}{{{f{BhBC`}}}b}{{{f{BEh}}}{{Gl{El{An{El}}}}}}{{{f{BEj}}}{{Gl{El{An{El}}}}}}{{{f{BC`}}JfEl}BC`}00{{{f{BC`}}cE`}{{Af{BC`}}}{{BEl{B@f}}}}{{{f{BhBC`}}cE`}{{Af{{f{BhBC`}}}}}{{BEl{B@f}}}}{{{f{BC`}}Jf}{{Gl{BC`BC`}}}}0{{{f{BhBC`}}}{{`{{Bd{}{{B`{BC`}}}}}}}}{{BC`Eld}{{F`{BC`}}}}{{{f{BC`}}{f{Ad}}}c{}}{{BC`{f{Ad}}}c{}}{{{f{BC`}}{f{BC`}}}c{}}{{{f{BC`}}BDb}{{Af{{An{Ad}}}}}}{{{f{BC`}}{An{El}}}BC`}{{{f{BC`}}{f{Dn}}}{{Af{BC`}}}}{{{f{BC`}}{f{Dn}}}BC`}{{{f{BC`}}{f{Dn}}d}BC`}{{{f{BC`}}BFb}{{Af{Nd}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Dh{}}{{{f{BhBC`}}{An{{f{Bf}}}}{An{{Nj{Dh{F`{Dh}}}}}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{Bf}}e}{{Af{{f{BhBC`}}}}}BD`{{O`{{f{Ad}}}{{C`{{Af{c}}}}}}}}{{{f{BhBC`}}Ele}{{Af{{f{BhBC`}}}}}BD`{{O`{{f{Ad}}}{{C`{{Af{c}}}}}}}}{c{{Gf{e}}}{}{}}0000{{{Gl{BFd{f{{Db{AOn}}}}}}}{{Af{BC`}}}}{BFf{{Af{BC`}}}}{{c{f{BCn}}}{{Af{BC`}}}{{Bd{}{{B`{{Af{{f{BDj}}}}}}}}}}{{{f{BC`}}{f{Bf}}}{{Af{El}}}}44444{{{f{c}}}Nl{}}0000{{{f{BC`}}{An{{f{{Db{Dh}}}}}}BDd{An{{Gl{JfEl}}}}}{{Af{BC`}}}}{{{f{BC`}}d{An{{f{{Db{Dh}}}}}}BDd{An{{Gl{JfEl}}}}}{{Af{BC`}}}}1{{{f{BC`}}ce}{{Af{BC`}}}{{BEl{B@f}}}{{BEl{B@f}}}}{{{f{BC`}}BFh}{{Af{BC`}}}}{{{f{BC`}}{f{BC`}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{BC`}}}{{Af{{f{BhBC`}}}}}}{ce{}{}}0000{{{f{BC`}}}El}{{{f{BhBC`}}c}{{Af{{f{BhBC`}}}}}BD`}{{{f{BhBC`}}c{f{BCn}}}{{Af{{f{BhBC`}}}}}BD`}{{{f{BhBC`}}Ad}{{f{BhBC`}}}}{{{f{BC`}}{f{Bf}}{An{Hd}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{Bf}}{An{Hd}}}{{f{BhBC`}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BFh}}}BFh}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{}BFh}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{BFh}}{f{BFh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BFh}}{f{BhFl}}}Fn}{cc{}}{{{f{BFh}}{f{Bhc}}}bAB`}`{{}El}{ce{}{}}``{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}``3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BDl}}}{{Af{BC`}}}}`{{{f{BFj}}}{{f{{Db{BFl}}}}}}{{{f{BDl}}c}{{Af{BC`}}}{{Ch{BC`}{{C`{{Af{BC`}}}}}}IjIl}}{{{f{Aj}}}Dj}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000{{{f{BFj}}}BFj}{{{f{Aj}}}Aj}{{{f{BDl}}}BDl}{{{f{BFn}}}BFn}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{c}}}b{}}0000;{{}BFj}{{}Aj}{El{{f{c}}}{}}000{{{f{BG`}}}{{f{c}}}{}}1111{El{{f{Bhc}}}{}}0000000`{{BGbe}{}{}{{BGd{c}}}}{Elb}000{{{f{BhBFj}}}b}1111{{{f{BFj}}{f{BFj}}}d}{{{f{Aj}}{f{Aj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BGf}}}Hd}{{{f{BFj}}}{{f{{Db{Hd}}}}}}{{{f{BDl}}}{{Af{BC`}}}}{{{f{BhBFj}}}{{f{Bh{F`{Hd}}}}}}{{{f{BFj}}{f{BhFl}}}Fn}{{{f{Aj}}{f{BhFl}}}Fn}{{{f{BDl}}{f{BhFl}}}Fn}{{{f{BFn}}{f{BhFl}}}Fn}0{{{f{Bf}}BFn}Dh}{cc{}}000{{{F`{BGh}}}BFj}1{{{F`{{F`{BGh}}}}}BFj}{{{F`{{Gl{{F`{Hd}}{F`{BFl}}}}}}}BFj}3{BFjAj}44{g{{Gf{ic}}}{}{}{{Gh{c}{{B`{e}}}}}{}}{cBFj{{Gd{}{{B`{BGh}}}}}}{cBFj{{Gn{}{{B`{BGh}}}}}}{{{f{Aj}}El}BGf}{{{f{BDl}}}{{f{Aj}}}}{{{f{BhBDl}}}{{f{BhAj}}}}{{{f{Aj}}}Dn}{{{f{BGj}}dd}{{Af{Aj}}}}0{{{f{BDl}}}{{Af{BC`}}}}{{{f{BhAj}}}{{f{BhBFj}}}}{{}El}0000000{ce{}{}}0000000{AjBFj}1{{{f{BFj}}}c{}}{BFjc{}}301{{{f{BGf}}}d}{{{f{Aj}}}d}{{{f{BFj}}}d}{{{f{BFj}}}{{BGn{{BGl{{Jh{Hd}}}}{Jh{BFl}}}}}}{{{f{Aj}}}BH`}{{{f{BDl}}}{{F`{Ad}}}}{{{f{BDl}}{An{{Gl{JfEl}}}}}{{F`{Ad}}}}={{{f{BGf}}}El}{{{f{Aj}}}El}?????{{{F`{Hd}}{F`{BFl}}d}BFj}{{{f{BC`}}{F`{Ad}}Aj{An{{F`{Dh}}}}}BDl}{{{f{BhBH`}}}{{An{c}}}{}}{{{f{BhBH`}}El}{{An{c}}}{}}{{{f{BDl}}c}{{Af{BC`}}}{{Cb{BC`}{{C`{{Af{BC`}}}}}}IjIl}}{{{f{c}}}{}{}}{{{f{Aj}}}BGb}{{{f{BDl}}KdMh}{{Af{BC`}}}}{{BDle}BDl{{Lb{Bf}}}{{Gd{}{{B`{c}}}}}}{{{f{Aj}}JfEl}BG`}{{{f{BhBFj}}}b}{{{f{BhAj}}}b}{{{f{BDl}}D`}{{Af{BC`}}}}{{{f{BDl}}}{{Af{BC`}}}}{Aj{{F`{Hd}}}}0{BDlAj}{{{f{BhBDl}}}Aj}{{{f{c}}}e{}{}}000{{{f{c}}}Dh{}}{c{{Gf{e}}}{}{}}000000000000000{{{f{c}}}Nl{}}0000000{AjAj}{{{f{Aj}}}{{f{BFj}}}}{{{f{Aj}}}{{f{BHb}}}};{ce{}{}}0000000`````{{{f{BFj}}c}Ad{{Cb{{Gl{Hd{f{BFl}}}}}{{C`{An}}}}IjIl}}{{{f{BFj}}c}Ad{{Cb{{Gl{Hd{f{BFl}}}}}{{C`{}}}}IjIl}}{{{f{{Db{{BHd{Hd}}}}}}c}Ad{{Cb{{BHd{Hd}}}{{C`{An}}}}IjIl}}{{{f{{Db{{BHd{Hd}}}}}}c}Ad{{Cb{{BHd{Hd}}}{{C`{}}}}IjIl}}{{{f{{Db{c}}}}eBHf}{{AJb{c}}}{BHhBHj}{{Bd{}{{B`{{Gl{HdHd}}}}}}H`}}{{{f{{Db{c}}}}{f{Gj}}eBHf}{{AJb{c}}}{BHhBHj}{{Bd{}{{B`{{Gl{HdHd}}}}}}H`}}{{{f{{l{c}}}}HdHd}{{l{c}}}Bn}{{{f{BHb}}{f{{Db{En}}}}}d}{{{f{BHl}}{f{Aj}}}Ad}{{BHnBHn}BHn}0`{{{f{BI`}}{f{BC`}}{f{Aj}}}{{Af{Ad}}}}{{{f{BI`}}}{{Af{{f{Bf}}}}}}```````````````````````{{{f{c}}h}b{}}00{{{f{BhBIb}}Hb}{{An{b}}}}{{{f{BhBId}}{f{Hb}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BIb}}}BIb}{{{f{BId}}}BId}{{{f{BDj}}}BDj}{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{c}}}b{}}00{{{f{{Db{c}}}}}Df{{B@d{Df}}}}{{}BDj}{El{{f{c}}}{}}00{El{{f{Bhc}}}{}}00{Elb}00{{{f{BDj}}{f{BDj}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BDj}}{f{BhFl}}}Fn}{cc{}}{{{Gl{{f{Df}}El}}}BIb}{{{Gl{{f{Df}}El}}}BId}22{{eEl}BCn{{AOj{Df}}}{{Bd{}{{B`{{F`{{Gl{Dhc}}}}}}}}}}{{}El}00{ce{}{}}00{BIbAd}{BIdAd}{{{f{Df}}El}BIb}{{{f{Df}}El}BId}{{{F`{Hb}}}BDj}{{{f{BhBIb}}El}Ad}{{{f{BhBId}}El}Ad}{{{f{{Db{BDj}}}}{An{El}}}{{Af{BCn}}}}0{{{f{{Db{BDj}}}}{An{El}}}{{Af{{F`{Df}}}}}}{{{f{c}}}e{}{}}00{c{{Gf{e}}}{}{}}00000{{{f{c}}}Nl{}}00<<<{{{f{{Db{BC`}}}}}{{Af{BC`}}}}0`````{{I`I`}I`}{{{f{{Db{BC`}}}}{An{N`}}}{{Af{{Gl{{F`{BAh}}N`}}}}}}{{{f{{AJl{Jf}}}}N`{f{Bh{F`{I`}}}}}b}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{}BIf}{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0{Elb}0{{{f{BIf}}}I`}{{{f{BIh}}{f{BhFl}}}Fn}{cc{}}0{{{f{BIh}}{f{Bhc}}}bAB`}``{{}El}0{ce{}{}}0{{{f{Bh{BIj{BIhce}}}}HdI`{f{BC`}}gi}b{}BIl{{Cb{}{{C`{c}}}}}{{Ch{{f{Bhc}}}}}}{c{{Gf{e}}}{}{}}000{{{f{c}}}Nl{}}0{{{f{BIn}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}0{{{f{BIn}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}055{{{f{BhBIf}}{f{{Db{D`}}}}}b}{{{f{BhBIf}}M`}b}{{{f{BhBIf}}Jf}b}{{{f{BhBIf}}Lh}b}{{{f{BhBIf}}I`}b}``````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000{{{f{{Kj{ce}}}}}{{f{e}}}{}BJ`}{{{f{{Kj{c}}}}}BJb{BJdMl}}{{{f{{Kj{ce}}}}}{}MlBJ`}{{{f{{Kj{c}}}}}M`BJf}{{{f{{Kj{ce}}}}}{{f{c}}}MlBJ`}{{{Kj{{Db{{BJh{c}}}}e}}}{{Kj{{Db{c}}e}}}{}BJ`}{{{Kj{{BJh{c}}e}}}{{Kj{ce}}}{}BJ`}{{{f{c}}}{{f{e}}}{}{}}0003000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000000000{{{f{ALj}}{f{ALj}}c}{{Af{ALj}}}ALl}{{{f{{Kj{c}}}}}{{An{{f{AIn}}}}}{AInMl}}`{{{f{BJj}}{f{Ad}}}{{Af{Ad}}}}{{{f{BJj}}c}{{Af{Ad}}}Ab}{{{f{Nn}}}Nn}{{{f{BJl}}}BJl}{{{f{{Kj{ce}}}}}{{Kj{ce}}}Ml{BJ`A@f}}{{{f{Mj}}}Mj}{{{f{BFb}}}BFb}{{{f{AOn}}}AOn}{{{f{BDh}}}BDh}{{{f{Mh}}}Mh}{{{f{BJn}}}BJn}{{{f{BK`}}}BK`}{{{f{BKb}}}BKb}{{{f{c}}{f{Bhe}}}b{}{}}0000000000{{{f{c}}}b{}}00000000000000000{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}BA`{BKdMl}BJ`}{AObe{}{{AKj{c}}AIj}}0{{AObADd}e{}{{AKl{c}}AIj}}0{{{f{c}}{f{e}}}BA`{}{}}{{AKbBCd}AKb}{AKbAKb}{{{f{G`}}{f{ADd}}}{{AAn{G`}}}}{{{f{AOn}}}{{f{ADd}}}}```{{}b}{cbBJ`}{{}{{Kj{{Db{c}}}}}{}}{{}{{Kj{Bf}}}}{{}{{Kj{c}}}BKf}{{}{{Kj{BKh}}}}{{}Mj}{{}BFb}{{}AOn}{{}BDh}{{}Mh}`{El{{f{c}}}{}}00{{{f{{Kj{ce}}}}}{{f{c}}}MlBJ`}1111111111{El{{f{Bhc}}}{}}000000000000{{{f{{Kj{c}}}}}{{f{Bf}}}{AInMl}}`{{{Kj{ADfc}}}{{Gf{{Kj{ec}}{Kj{ADfc}}}}}BJ`{ADfIjIl}}{{{Kj{ADfc}}}{{Kj{ec}}}BJ`{ADfIjIl}}{{{f{{Kj{ce}}}}}{{BKj{ce}}}Ml{A@fBJ`}}{Elb}00{{{f{Bh{Kj{ce}}}}}bMlBJ`}1111111111{{{f{Nn}}{f{Nn}}}d}{{{f{{Kj{G`}}}}{f{G`}}}d}{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}d{BKlMl}BJ`}{{{f{{Kj{BKn}}}}{f{BKn}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{BFb}}{f{BFb}}}d}{{{f{AOn}}{f{AOn}}}d}{{{f{BDh}}{f{BDh}}}d}{{{f{Mh}}{f{Mh}}}d}{{{f{BKb}}{f{BKb}}}d}{{{f{c}}{f{e}}}d{}{}}00000000000000000000{BJl{{Gl{LhLh}}}}`{{BDhc}BDh{{Cb{El{f{AOn}}}{{C`{d}}}}}}{{ALl{f{AOf}}{f{AOf}}}{{Af{AOf}}}}{{{f{Bh{Kj{ACj}}}}}{{Gf{bBL`}}}}{{{f{AKb}}{f{BhFl}}}{{Gf{bAOh}}}}0{{{f{Nn}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{BJl}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{{Kj{ce}}}}{f{BhFl}}}{{Gf{bAOh}}}MlBJ`}{{{f{{Kj{ce}}}}{f{BhFl}}}{{Gf{bAOh}}}{ADhMl}BJ`}{{{f{{Kj{ce}}}}{f{BhFl}}}{{Gf{bAOh}}}{BChMl}BJ`}{{{f{Mj}}{f{BhFl}}}Fn}{{{f{BFb}}{f{BhFl}}}Fn}{{{f{AOn}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{BDh}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{Mh}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{BJn}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{BK`}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{BKb}}{f{BhFl}}}{{Gf{bAOh}}}}`{BL`AKb}{BLbAKb}{BLdAKb}{BLfAKb}{cc{}}0{LhNn}1{{{AKd{c}}}{{Kj{c}}}{BLhMl}}{BLj{{Kj{BLl}}}}{c{{Kj{c}}}{}}{BLnc{}}{{{AAn{ce}}}{{Kj{ce}}}MlBJ`}{{{BHd{c}}}{{Kj{{Db{c}}}}}{}}7{{{Kj{Bf}}}{{Kj{{Db{D`}}}}}}{{{f{Bf}}}{{Kj{Bf}}}}{Dh{{Kj{Bf}}}}{BM`{{Kj{BMb}}}}{{{f{BKh}}}{{Kj{BKh}}}}{{{f{BLl}}}{{Kj{BLl}}}}{{{f{{Db{c}}}}}{{Kj{{Db{c}}}}}A@f}{{{f{BMb}}}{{Kj{BMb}}}}{BMd{{Kj{BKh}}}}{{{F`{ce}}}{{Kj{{Db{c}}e}}}{}{BJ`A@f}}{cc{}}0000{{{F`{AOn}}}BDh}1111{{c{An{Gj}}}BMf{}}{{{BMh{Jf}}{BMh{D`}}{An{Gj}}}BMj}{{{BMh{Jf}}{BMh{D`}}{An{Gj}}}BMl}{g{{Gf{ic}}}{}{}{{Gh{c}{{B`{e}}}}}{}}{e{{Kj{{Db{c}}}}}{}{{Gd{}{{B`{c}}}}}}{{gEl}{{BMn{Jf}}}Lb{{Gd{}{{B`{{An{c}}}}}}}{{Gd{}{{B`{{An{e}}}}}}}}0{e{{BMn{Jf}}}{{Gd{}{{B`{{An{d}}}}}}}{{Gd{}{{B`{{An{c}}}}}}}}{{gADd}{{BMn{Jf}}}BHj{{Gd{}{{B`{{An{c}}}}}}}{{Gd{}{{B`{{An{e}}}}}}}}2{e{{Kj{{Db{c}}}}}Ij{{Gn{}{{B`{c}}}}}}{{}{{Kj{c}}}Ml}{c{{Kj{ec}}}BJ`Ml}{{{f{Bf}}}{{Gf{BN`}}}}{{{f{Bf}}c}BNb{}}{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}d{BNdMl}BJ`}{{{f{Bh{Kj{ce}}}}}{{An{{f{Bhc}}}}}MlBJ`}{{{f{Bh{Kj{ce}}}}}{{f{Bhc}}}MlBJ`}{{{f{BDh}}}{{F`{{f{Bf}}}}}}{{{f{BDh}}}{{F`{{Gl{{f{Bf}}c}}}}}{}}{{{f{En}}El}Hb}5{{{f{{Kj{ce}}}}{f{Bhg}}}b{BNfMl}BJ`AB`}{{{f{BFb}}{f{Bhc}}}bAB`}{{{f{AOn}}{f{Bhc}}}bAB`}{{{f{Mh}}{f{Bhc}}}bAB`}{{{f{BKb}}{f{Bhc}}}bAB`}{{{f{Nn}}}Lh}{{}b}{cb{A@fBJ`}}{{{f{BDh}}{f{Bf}}}{{An{El}}}}{{{f{{Db{Lh}}}}}{{`{{Bd{}{{B`{El}}}}}}}}{{}El}000000000000`{{{f{BhBJl}}}{{f{BhI`}}}}`{ce{}{}}000000000000{{{Kj{ce}}}{{An{c}}}{}BJ`}{{{Kj{ce}}}{}MlBJ`}{{{Kj{ce}}}{{Gl{e}}}MlBJ`}{{{Kj{BNh}}}Ad}{{{f{BDh}}}d}{{{f{BJl}}}d}{{{f{Nn}}}d}`{{{f{{Kj{ACj}}}}}d}{{{f{c}}}d{}}1{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}d{BNdMl}BJ`}{{{f{BDh}}}El}`1{{{f{ALj}}{f{ALj}}}{{Af{{Gl{ALjALj}}}}}}{{DjDj}{{Af{{Gl{DjDj}}}}}}{{{f{Bh{Kj{ce}}}}}{{f{Bhc}}}{BNjMl}{BJ`A@f}}{{{f{BNl}}}Kb}0{{{f{BNn}}}Kb}```11`{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}d{BKlMl}BJ`}{{BO`El}{{An{El}}}}{{{f{Bf}}c}BOb{}}{c{{Kj{c}}}{}}{{cADdd}AOn{{AOj{Dh}}}}{e{{Kj{c}}}{}{{O`{{f{{BKj{c}}}}}{{C`{c}}}}}}{{ce}{{Kj{ce}}}{}BJ`}{{}{{Kj{{BJh{c}}}}}{}}{c{{Kj{{BJh{e}}c}}}BJ`{}}{El{{Kj{{Db{{BJh{c}}}}}}}{}}{{Elc}{{Kj{{Db{{BJh{e}}}}c}}}BJ`{}}3210`{{}Nn}{{}BJl}{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}{{An{BA`}}}{BNdMl}BJ`}{c{{BOd{{Kj{c}}}}}{}}{{ce}{{BOd{{Kj{ce}}}}}{}BJ`}`````{{{f{BNl}}}Kb}0{{{f{{Kj{c}}}}{f{BhBOf}}}b{AInMl}}{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}dMlBJ`}{{{f{BNn}}KdMh}{{Af{Kb}}}}{{{f{Bh{Kj{ACj}}}}{f{Bh{Db{D`}}}}}{{Gf{ElBL`}}}}{{{f{Bh{Kj{ACj}}}}BOh}{{Gf{bBL`}}}}{{{f{Bh{Kj{ACj}}}}{f{Bh{F`{D`}}}}}{{Gf{ElBL`}}}}{{{f{Bh{Kj{ACj}}}}{f{BhDh}}}{{Gf{ElBL`}}}}{{{f{Bh{Kj{ACj}}}}{f{Bh{Db{BOj}}}}}{{Gf{ElBL`}}}}`{{{f{Bh{Kj{ACj}}}}BOl}{{Gf{I`BL`}}}}`{{{f{AJf}}ElEl}AJf}0{{{f{{Kj{c}}}}}{{An{{f{AIn}}}}}{AInMl}}{{{f{BOn}}D`}Kb}{{LhLh}BJl}`{{{f{{Kj{ce}}}}}ElMlBJ`}>>{{{f{Nn}}}{{An{Lh}}}}{{{f{c}}}e{}{}}0000000000{{{f{c}}}Dh{}}0{AOb{{Gf{eg}}}{}{{AKj{c}}AIj}{}}0{{AObADd}{{Gf{eg}}}{}{{AKl{c}}AIj}{}}0{c{{Gf{e}}}{}{}}000{{{Kj{{Db{c}}e}}}{{Gf{{Kj{{BHd{c}}e}}}}}{}BJ`}1111111111111111111111{{BO`El}{{Gf{ElAKb}}}}{c{{Gf{{Kj{c}}C@`}}}{}}{{ce}{{Gf{{Kj{ce}}C@`}}}{}BJ`}{{}{{Gf{{Kj{{BJh{c}}}}C@`}}}{}}{c{{Gf{{Kj{{BJh{e}}c}}C@`}}}BJ`{}}10{c{{Gf{{BOd{{Kj{c}}}}C@`}}}{}}{{ce}{{Gf{{BOd{{Kj{ce}}}}C@`}}}{}BJ`}{{{f{BDh}}{f{{Db{El}}}}}{{Gf{BDhAKb}}}}{{{Kj{ce}}}{{Gf{c{Kj{ce}}}}}{}BJ`}{{{f{c}}}Nl{}}000000000000{{{Kj{ce}}}cA@fBJ`}`{{{f{BOn}}D`}Kb}{ce{}{}}000000000000{{{f{{Kj{ce}}}}}ElMlBJ`}``{{AOn{C@b{DhDh}}}AOn}{{BDh{C@b{DhDh}}}BDh}{{{f{Bh{Kj{ACj}}}}{f{{Db{D`}}}}}{{Gf{ElBL`}}}}{{{f{Bh{Kj{ACj}}}}{f{{Db{C@d}}}}}{{Gf{ElBL`}}}}```````{{c{An{Gj}}}BMf{}}{{{BMh{Jf}}{BMh{D`}}{An{Gj}}}BMj}{{{BMh{Jf}}{BMh{D`}}{An{Gj}}}BMl}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{C@f{An{{f{ADd}}}}}{{Gf{{BMn{Jf}}AKb}}}}{cc{}}{{}El}{ce{}{}}{{{f{C@f}}}d}{ElC@f}{{{f{C@f}}}{{f{{Db{Jf}}}}}}{{{f{BhC@f}}{f{G`}}}b}{{{f{BhC@f}}}b}{{{f{BhC@f}}{f{{Db{{AAn{G`}}}}}}}b}1{{{f{BhC@f}}{An{{f{G`}}}}}b}{C@f{{C@h{Jf}}}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}:`{{{f{c}}h}b{}}{{{f{C@j}}}{{f{ADf}}}}{{{f{BhC@j}}}{{AAn{G`}}}}{{{f{BhC@j}}}{{f{BhADf}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{C@j}}}C@j}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{C@j}}}{{f{ADd}}}}{{}C@j}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{BhC@j}}El}b}{{{f{C@j}}{f{BhFl}}}{{Gf{bAOh}}}}{cc{}}{{}El}{ce{}{}}{{{f{C@j}}}El}{ElC@j}{{{f{BhC@j}}}b}70{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}{{{f{C@j}}}{{An{{f{C@l}}}}}}7```````{{{f{AJf}}ElEl}AJf}0`{{}b}0{{}d}``{{eElEl}{{C@n{Jf}}}{{Lb{Bf}}}{{Bd{}{{B`{c}}}}}}{{eElEl}{{AJl{Jf}}}{{Lb{{Db{D`}}}}}{{Bd{}{{B`{c}}}}}}{I`b}``````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BCn}}}BCn}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{BCn}}{f{Bf}}}d}{{}BCn}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{c}}{f{c}}}{{Af{b}}}CA`}{{{f{BCn}}{f{BCn}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCn}}{f{BhFl}}}Fn}{{{f{{Db{Ad}}}}}BCn}{{{f{BDh}}}BCn}{cc{}}{BDhBCn}{{{f{BDj}}}BCn}{CAbBCn}{{{f{CAb}}}BCn}{g{{Gf{ic}}}{}{}{{Gh{c}{{B`{e}}}}}{}}{eBCn{{AOj{Mb}}}{{Gd{}{{B`{c}}}}}}{{{f{BCn}}{f{Bf}}}{{An{{f{Df}}}}}}{{{f{BCn}}El}{{An{{Gl{{f{B@f}}{f{Df}}}}}}}}{{{f{BhBCn}}El}{{An{{Gl{{f{BhB@f}}{f{BhDf}}}}}}}}{{{f{BCn}}{f{Bf}}}{{An{Mb}}}}{{{f{BCn}}{f{Bf}}}{{An{{Gl{El{f{B@f}}{f{Df}}}}}}}}{{{f{CAd}}}{{F`{{f{Bf}}}}}}{{{f{BCn}}}{{F`{{f{Bf}}}}}}{{{f{{CA`{}{{CAf{c}}}}}}}{{F`{{Gl{{f{Bf}}c}}}}}{ADhBKl}}{{{f{BCn}}}{{F`{{Gl{{f{Bf}}c}}}}}{}}{{{f{BCn}}{f{Bhc}}}bAB`}{{{f{CAd}}{f{Bf}}}{{An{El}}}}{{{f{BCn}}{f{Bf}}}{{An{El}}}}{{}El}{{{f{BhBCn}}ElB@fDf}{{Af{{An{Df}}}}}}{ce{}{}}{BCnc{}}{{{f{BCn}}}d}{{{f{BCn}}}{{`{{Bd{}{{B`{{Gl{{f{B@f}}{f{Df}}}}}}}}}}}}{{{f{BCn}}}{{`{{In{}{{B`{{f{Df}}}}}}}}}}{{{f{BhBCn}}}{{`{{In{}{{B`{{f{BhDf}}}}}}}}}}{{{f{BCn}}}{{`{{In{}{{B`{Mb}}}}}}}}{{{f{BCn}}}{{`{{In{}{{B`{{f{B@f}}}}}}}}}}{{{f{BCn}}}El}{{{f{BhBCn}}BCn}b}{{{f{BhBCn}}{f{BCn}}}b}{{}BCn}{{{f{BCn}}ElB@fDf}{{Af{BCn}}}}{{{f{BhBCn}}{f{Bf}}}{{An{Df}}}}{{{f{BhBCn}}{f{Bf}}B@f}{{An{B@f}}}}{{{f{BhBCn}}El}b}{{{f{BhBCn}}{f{Bf}}Df}{{An{Df}}}}{{{f{BhBCn}}ElDf}{{An{Df}}}}4{{{f{BhBCn}}El}{{An{{Gl{B@fDf}}}}}}{{{f{BCn}}AMf}BDh}{{{f{c}}}e{}{}}{{{f{BhBCn}}{f{BCn}}}{{Af{d}}}}{c{{Gf{e}}}{}{}}{{{f{BCn}}{f{Bf}}}{{Af{{f{Df}}}}}}{{{f{BCn}}El}{{Af{{Gl{{f{B@f}}{f{Df}}}}}}}}{{{f{BCn}}{f{Bf}}}{{Af{Mb}}}}{{{f{BCn}}{f{Bf}}}{{Af{{Gl{El{f{B@f}}{f{Df}}}}}}}}{{{f{BhBCn}}{f{Bf}}}{{Af{{f{BhDf}}}}}}{{{f{CAd}}{f{Bf}}}{{Af{El}}}}6{{{f{c}}}Nl{}}{ce{}{}}{ElBCn}{{{f{BhBCn}}B@fDf}{{An{Df}}}}`````````````````{{{f{c}}h}b{}}0{{{f{Bf}}{F`{En}}{f{ADd}}}{{Af{Ad}}}}{{{f{Bf}}{F`{En}}{f{ADd}}{An{{f{CAh}}}}}{{Af{Ad}}}}{{{f{Ad}}c}e{A`K`}{}}{{AdAd}c{}}{{Adc}e{A`K`}{}}{{{f{Ad}}{f{Ad}}}c{}}`{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{BNh}}Dl}Dn}0{{{f{BNh}}}{{Af{Dn}}}}0`{{{f{Ad}}El}{{f{En}}}}{{{f{BNh}}}{{f{ADf}}}}{{{f{BhBNh}}}{{f{BhADf}}}}0{{{f{Ad}}}Dj}{{{f{BhBNh}}}{{f{Bh{l{c}}}}}Bn}{{{f{BNh}}}{{f{{l{c}}}}}Bn}{{{f{Ad}}}{{f{BNh}}}}{{{f{BhBNh}}}{{Af{El}}}}0{{{f{BhAd}}}{{Af{El}}}}{{{f{Ad}}}{{Af{{f{Eb}}}}}}{{{f{Ad}}}{{Af{{f{AJn}}}}}}{{{f{BNh}}{f{Ad}}}{{Af{Ad}}}}00000{{{f{Ad}}}{{Af{{f{Ff}}}}}}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{BNh}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}0{{{f{Ad}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{ALj}}}}}}77{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}c}{{Af{Ad}}}Ab}{{{f{BNh}}}Ej}{{{f{Ad}}}{{`{{Bd{}{{B`{El}}}}}}}}{{{f{BNh}}}{{f{{F`{En}}}}}}{{{f{BhBNh}}}{{f{Bh{F`{En}}}}}}{{{f{BhAd}}}{{f{Bh{F`{En}}}}}}{{{f{Ad}}}Ad}{{{f{Jb}}}Jb}1{{{f{BNh}}}{{Kj{BNh}}}}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{{f{BhAd}}}b}{{{f{Ad}}}{{Af{{f{Ih}}}}}}{{}Ad}{El{{f{c}}}{}}00{{{f{Ad}}}{{f{c}}}{}}1{El{{f{Bhc}}}{}}000{{Adc}e{A`K`}{}}{{AdAd}c{}}{{{f{Ad}}c}e{A`K`}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}{f{Ad}}}{{Af{Kd}}}}{Elb}000{{{f{BNh}}}Ad}0{{{f{BNh}}}{{f{Df}}}}0{{{f{Jb}}{f{Jb}}}d}{{{f{Ad}}{f{Ad}}}d}{{{f{Ad}}c}{{Af{Ff}}}AOl}{{{f{Ad}}{f{Bf}}}{{Af{Ff}}}}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}{{{f{Ad}}c}eAOl{}}1{{{f{Ad}}{f{Bf}}}c{}}55{{{f{c}}{f{e}}}d{}{}}00{{{f{Ad}}}El}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{Ad}}HbEl}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AKf}}}}}}{{{f{Ad}}}{{Af{{f{AKh}}}}}}{{{f{BNh}}}{{AKd{Mb}}}}0{{{f{Ad}}AFh}{{Af{Ad}}}}{{{f{BNh}}{f{Ff}}}{{Af{Ad}}}}{{{f{Jb}}{f{BhFl}}}Fn}{{{f{Ad}}{f{BhFl}}}Fn}0{{{f{Ad}}}Dh}{cc{}}00{{{l{c}}}AdBn}1{{{f{Bf}}{f{{Db{Hb}}}}d}{{Af{Ad}}}}{{{f{Bf}}{f{{Db{Hb}}}}{f{Df}}d}{{Af{Ad}}}}{{{f{Bf}}En}{{Af{Ad}}}}{{{f{Bf}}{F`{En}}}{{Af{Ad}}}}{{{f{Bf}}{F`{En}}{f{Df}}}Ad}{g{{Gf{ic}}}{}{}{{Gh{c}{{B`{e}}}}}{}}{cAd{{Gd{}{{B`{{An{Jf}}}}}}}}{cAd{{Gd{}{{B`{M`}}}}}}{cAd{{Gd{}{{B`{d}}}}}}{cAd{{Gd{}{{B`{{f{Jf}}}}}}}}{cAd{{Gd{}{{B`{{An{I`}}}}}}}}{cAd{{Gd{}{{B`{I`}}}}}}{cAd{{Gd{}{{B`{{f{Lh}}}}}}}}{cAd{{Gd{}{{B`{{An{d}}}}}}}}{cAd{{Gd{}{{B`{{f{Kd}}}}}}}}{cAd{{Gd{}{{B`{{An{Kd}}}}}}}}{cAd{{Gd{}{{B`{{f{I`}}}}}}}}{cAd{{Gd{}{{B`{{An{M`}}}}}}}}{cAd{{Gd{}{{B`{Kd}}}}}}{cAd{{Gd{}{{B`{{f{d}}}}}}}}{cAd{{Gd{}{{B`{{An{Hn}}}}}}}}{cAd{{Gd{}{{B`{{An{Lh}}}}}}}}{cAd{{Gd{}{{B`{{f{M`}}}}}}}}{cAd{{Gd{}{{B`{{f{Hn}}}}}}}}{cAd{{Gd{}{{B`{Lh}}}}}}{cAd{{Gd{}{{B`{Jf}}}}}}{cAd{{Gd{}{{B`{{f{Bf}}}}}}}}{cAd{{Gd{}{{B`{Dh}}}}}}{cAd{{Gd{}{{B`{Hn}}}}}}{{{f{Bf}}{F`{Jf}}}Ad}{{{f{Bf}}{F`{Hn}}}Ad}{{{f{Bf}}{F`{M`}}}Ad}{{{f{Bf}}{F`{Kd}}}Ad}{{{f{Bf}}{F`{I`}}}Ad}{{{f{Bf}}{F`{L`}}}Ad}{{{f{Bf}}{F`{Lh}}}Ad}{{{f{Bf}}El{f{Df}}}Ad}{{{f{Ad}}ElEl}Ad}{{{f{BNh}}El}{{Af{Hb}}}}{{{f{Ad}}}El}{{{f{Ad}}}Hf}{{{f{Ad}}}Ad}{{{f{BNh}}}{{An{{Kn{Kl}}}}}}0{{{f{BNh}}El}{{An{{f{Hj}}}}}}0{{{f{BNh}}ElEl}{{An{{f{Hj}}}}}}0{{{f{BNh}}El}Hb}0{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}{{{f{Ad}}c}{{Af{Ff}}}AOl}{{{f{Ad}}{f{Bf}}}{{Af{Ff}}}}21{{{f{Ad}}{f{Bf}}}c{}}{{{f{BNh}}}d}{{{f{Jb}}{f{Bhc}}}bAB`}{{{f{Ad}}{An{El}}}Ad}{{{f{Ad}}}{{Af{{f{BAl}}}}}}{{{f{Ad}}}{{Af{{f{BAn}}}}}}{{{f{Ad}}}{{Af{{f{BB`}}}}}}{{{f{Ad}}}{{Af{{f{BAj}}}}}}{{{f{Ad}}}{{Af{{f{Dn}}}}}}`{{{f{Ad}}}{{Af{Dj}}}}{{}El}000{ce{}{}}000{AdBC`}1{BD`Ad}{AdAd}=={{{f{Ad}}}{{Af{Ff}}}}000{{{f{BNh}}}Ff}0{{}d}00{{{f{Ad}}}Jb}{{{f{Ad}}}CAj}{{{f{Ad}}}{{`{{Bd{}{{B`{Ad}}}}}}}}{{{f{BNh}}}El}{{{f{Ad}}}El}{{{f{BNh}}El}Ad}0{{{f{Ad}}}{{Af{{f{Dj}}}}}}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}{{{f{Ad}}c}{{Af{Ff}}}AOl}{{{f{Ad}}{f{Bf}}}c{}}120{{{f{Ad}}}{{Af{{An{c}}}}}K`}{{{f{BNh}}}{{Af{Kb}}}}0{{{f{BNh}}}{{An{Kd}}}}0{{{f{Ad}}}Kb}1122322{{{f{Ad}}c}e{A`K`}{}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`K`}{}}>>={{{f{BNh}}}{{Af{El}}}}0{{{f{BNh}}}{{f{Bf}}}}{{{f{Bf}}c}Ad{{Lb{{Db{I`}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{M`}}}}}}{{{f{Bf}}{Lj{M`}}}Ad}{{{f{Bf}}{Lj{Lh}}}Ad}{{{f{Bf}}c}Ad{{Lb{{Db{{AKd{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{{An{M`}}}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{Ad}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{{An{{f{{Db{D`}}}}}}}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{{An{d}}}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{d}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{{An{Dh}}}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{Dh}}}}}}{{{f{Bf}}{Lj{I`}}}Ad}{{{f{Bf}}c}Ad{{Lb{{Db{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{Lh}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{{An{I`}}}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{{An{Ad}}}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{L`}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{{An{{AKd{Bf}}}}}}}}}}{{{f{Bf}}c}AdBD`}{{{f{Bf}}c}Ad{{Lb{{Db{{An{Lh}}}}}}}}{{{f{Bf}}{Lj{Jf}}}Ad}{{{f{Bf}}{f{Ad}}}Ad}{{{f{Bf}}c}Ad{{Lb{{Db{{An{{AKd{{Db{D`}}}}}}}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{Jf}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{{An{Kd}}}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{{F`{D`}}}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{{An{{F`{D`}}}}}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{Kd}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{{An{L`}}}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{{AKd{Bf}}}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{{An{Jf}}}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{{f{Bf}}}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{{f{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{Hb}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{{An{Hn}}}}}}}}{{{f{Bf}}c}Ad{{Lb{{Db{Hn}}}}}}{{{f{Bf}}{f{Df}}}Ad}{{{f{BNh}}ElEl}Ad}{{{f{Bf}}El}Ad}{{{f{BhCAj}}}{{An{c}}}{}}{{{f{Ad}}{f{Bf}}}{{Af{Ff}}}}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}{{{f{Ad}}c}{{Af{Ff}}}AOl}1{{{f{Ad}}c}eAOl{}}{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}}{{Af{{f{`}}}}}}{{{f{BNh}}}El}`{{{f{Ad}}}CAl}{{{f{Ad}}}{{Af{Kb}}}}{{{f{BNh}}KdMh}{{Af{Kb}}}}0{{{f{BNh}}}Ad}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`K`}{}}{{Adc}e{A`K`}{}}{{{f{BhBNh}}{f{Bf}}}b}{{{f{BhAd}}{f{Bf}}}{{f{BhAd}}}}{{{f{Ad}}{f{{Db{Jf}}}}}{{Af{Ad}}}}6{JbJb}{{{f{BNh}}{f{Cb}}Mj}{{Af{Ad}}}}0{{{f{Ad}}Kddd{An{I`}}}{{Af{Ad}}}}{{{f{Ad}}Eldd{An{I`}}}{{Af{Ad}}}}{{{f{Ad}}El}Ad}{{{f{BhAd}}Jb}b}{{{f{BNh}}Jf}Ad}{{{f{BhBNh}}}b}0{{{f{BhAd}}}b}{{{f{Ad}}{An{I`}}}Ad}{{{f{CAj}}}{{Gl{El{An{El}}}}}}{{{f{BNh}}JfEl}Ad}{{{f{Ad}}JfEl}Ad}{{{f{Ad}}Dl}{{Af{Ad}}}}{{{f{BNh}}Dl}{{Af{Ad}}}}0{{{f{BNh}}Jf}{{Gl{AdAd}}}}{{{f{Ad}}Jf}{{Gl{AdAd}}}}{{{f{BNh}}D`}{{An{Kd}}}}0{{{f{BNh}}D`}{{Af{Kb}}}}0{{{f{Ad}}}{{Af{{f{Nh}}}}}}{{{f{Ad}}El}{{Af{{AKd{Bf}}}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`K`}{}}{{Adc}e{A`K`}{}}{{{f{Ad}}}{{Af{c}}}K`}{{{f{BNh}}}{{Af{Kb}}}}0{{{f{Ad}}}{{Af{Kb}}}}{{{f{Ad}}{An{El}}}Ad}{{{f{BNh}}{f{Dn}}}{{Af{Ad}}}}{{{f{BNh}}{f{{Db{Hd}}}}}{{Af{Ad}}}}{{{f{BNh}}{f{{Db{Hd}}}}}Ad}{{{f{BNh}}{f{Dn}}}Ad}{{{f{Ad}}{f{{Db{Hd}}}}}Ad}{{{f{Ad}}ElAMf}En}{{{f{Ad}}}{{Af{Ad}}}}{{{f{c}}}e{}{}}0{{{f{Ad}}}{{AKd{Ad}}}}{{{f{c}}}Dh{}}{{AdAd}{{Af{Ad}}}}{c{{Gf{e}}}{}{}}00{{{Gl{{f{AOn}}En}}}{{Af{Ad}}}}1{{{Gl{{f{Bf}}En}}}{{Af{Ad}}}}{{{Gl{{f{AOn}}{F`{En}}}}}{{Af{Ad}}}}{{{Gl{{f{Bf}}{F`{En}}}}}{{Af{Ad}}}}44445{{{f{BhAd}}{Ib{c}}}dBn}6{{{f{c}}}Nl{}}000{{{f{Ad}}}{{Af{{f{BAf}}}}}}{{{f{Ad}}}{{Af{{f{AOf}}}}}}{{{f{Ad}}}{{Af{{f{BAh}}}}}}{{{f{Ad}}}{{Af{{f{BAd}}}}}}{{{f{BNh}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{Ad}}}}{{{f{BNh}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{BNh}}D`}{{An{Kd}}}}0{{{f{BNh}}D`}{{Af{Kb}}}}0{ce{}{}}000{{Ad{f{Bf}}}Ad}{{{f{Ad}}c}Ad{A`K`}}{{{f{Ad}}{f{Ff}}{f{Ad}}}{{Af{Ad}}}}``{{{f{c}}h}b{}}{{{f{Cf}}}{{f{Ad}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Cf}}}Cf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{Cf}}}Ad}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{cc{}}{{}El}{ce{}{}}{{{CAn{Ad}}}Cf}{{{f{BhCf}}{f{BhEn}}}b}{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}5{{{f{BhCf}}{f{BhEn}}e}c{}{{Cb{{f{Cf}}}{{C`{c}}}}}}````{{{CB`{}{{C`{c}}}}{f{Ad}}}c{}}{{{f{CBb}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ah}}}}{f{Ad}}}{{Af{Ad}}}}0`2100210021002100``{{{f{BJj}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Eh}}}}{f{Ad}}}{{Af{Ad}}}}0{{{f{BJj}}c}{{Af{Ad}}}Ab}{{{f{{l{Eh}}}}c}{{Af{Ad}}}Ab}0```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{CBd}}}CBd}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}CBd}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{CBd}}{f{CBd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CBd}}{f{BhFl}}}Fn}{cc{}}{{{f{CBd}}{f{Bhc}}}bAB`}{{}El}{ce{}{}}{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}3``````````{{{f{c}}h}b{}}05{{{F`{BC`}}}{{Af{BC`}}}}{c{{Af{BC`}}}{{Gd{}{{B`{BC`}}}}}}{cBC`{{Gd{}{{B`{BC`}}}}}}{c{{An{BC`}}}{{Gd{}{{B`{BC`}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Gl{{AKd{{l{c}}}}{AKd{{l{e}}}}}}}BnBn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Gl{{AKd{{l{c}}}}{AKd{{l{e}}}}{AKd{{l{g}}}}}}}BnBnBn}{{{f{BhCBf}}}d}{c{{Af{Df}}}{{Gd{}{{B`{{f{Hb}}}}}}}}{c{{Af{{Gl{DfEl}}}}}{{Gd{}{{B`{{f{Hb}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{An{Gj}}}BnBn}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{CBh}}}{{`{{Bd{}{{B`{El}}}}}}}}{{{f{CBj}}}CBj}{{{f{{CBl{ec}}}}}{{CBl{ec}}}A@f{A@f{Bd{}{{B`{c}}}}}}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{{f{{l{c}}}}{f{{l{c}}}}}{{Gl{{AKd{{l{c}}}}{AKd{{l{c}}}}}}}Bn}{{{f{Ad}}{f{Ad}}}{{Gl{AdAd}}}}{CBfe{}{{CBn{c}}}}{CBfe{}{{CC`{c}}}}{c{{Af{BC`}}}{{Gd{}{{B`{{f{BC`}}}}}}}}{cBC`{{Gd{}{{B`{{f{BC`}}}}}}}}{{{f{BhCBf}}{f{c}}}dBKl}{{}CBj}{El{{f{c}}}{}}{{{f{{CCb{c}}}}}{{f{e}}}{}{}}1{{{f{{AJh{c}}}}}{{f{e}}}{}{}}22{El{{f{Bhc}}}{}}0{{{f{Bh{AJh{c}}}}}{{f{Bhe}}}{}{}}11{Elb}000{cBCn{{Gd{}{{B`{Df}}}}}}{c{{Af{Df}}}{{Gd{}{{B`{{f{Df}}}}}}}}{{{f{{CCb{Ad}}}}{f{{CCb{Ad}}}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{CBj}}{f{BhFl}}}Fn}{{{f{BhCBf}}cg}{{An{c}}}{}{}{{Ch{ce}{{C`{c}}}}}}{cc{}}000{g{{Gf{ic}}}{}{}{{Gh{c}{{B`{e}}}}}{}}{c{{AJh{{l{e}}}}}{{Gd{}{{B`{}}}}}n}{c{{AJh{Ff}}}{{Gd{}{{B`{d}}}}}}{eCC`{}{{Gd{}{{B`{c}}}}}}21{c{{AJh{{l{e}}}}}{{Gn{}{{B`{}}}}}n}{c{{AJh{Ff}}}{{H`{}{{B`{d}}}}}}{c{{AJh{{l{e}}}}}{{H`{}{{B`{}}}}}n}{{{f{Df}}{f{Df}}}{{An{Df}}}}{{{f{Df}}{f{Df}}CBj}{{An{Df}}}}{{{f{AMh}}{f{AMh}}}AMh}{{{f{Ad}}{f{Ad}}}{{Af{b}}}}{{{f{{CCb{Ad}}}}{f{Bhc}}}bAB`}{{{f{CBj}}{f{Bhc}}}bAB`}`{{}El}000{ce{}{}}000{{{AJh{c}}}c{}}1{BEl{{F`{c}}}{}}{c{{F`{{CCf{CCd}}}}}{}}{c{{F`{Dh}}}{}}{{{f{CBh}}}{{`{{Bd{}{{B`{CBh}}}}}}}}{{{f{CBh}}}El}{L`Hb}1{c{{AJh{c}}}{}}{{eEl}{{CBl{ec}}}{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CBl{ec}}}}}An{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CBl{ec}}}}}An{}{{Bd{}{{B`{c}}}}Fd}}`{{{f{{CBl{ec}}}}}{{Gl{El{An{El}}}}}{}{{Bd{}{{B`{c}}}}}}{{{f{CBh}}JfEl}CBh}{{{f{{Db{c}}}}JfEl}{{f{{Db{c}}}}}{}}{{{f{c}}El}{{F`{c}}}CBh}0{{{f{CBh}}Jf}{{Gl{CBhCBh}}}}{{{f{BC`}}Eld}{{F`{BC`}}}}{{{f{c}}}e{}{}}0{{CBfEl}{{CBl{CBfc}}}{}}{c{{Gf{e}}}{}{}}000{{{f{Df}}{f{Df}}}{{Af{Df}}}}1111{{{f{c}}}Nl{}}000{ce{}{}}000{{{f{Df}}e}c{}{{Cb{{f{BhCf}}}{{C`{c}}}}}}{{{f{{Db{{F`{c}}}}}}}{{Gl{El{F`{El}}}}}{}}{{{f{BC`}}}{{`{{Bd{}{{B`{BC`}}}}}}}}{{{f{{Db{c}}}}}{{AJb{Hd}}}{{Lb{{Db{Nn}}}}IjIl}}{{{f{{Db{e}}}}}{{F`{c}}}{IjIlCd}{{Lb{{Db{c}}}}}}{{{f{Ad}}}{{F`{Ad}}}}","D":"JDl","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5466],[5,"ListType",1536],[5,"ChunkedArray",39],[10,"PolarsNumericType",1536],[10,"Num",5467],[10,"ToPrimitive",5468],[5,"Series",4816],[8,"PolarsResult",4071,5469],[10,"NumOpsDispatchInner",5254,5470],[6,"GroupsProxy",3665,5471],[5,"BooleanType",1536],[6,"Option",5472],[17,"Item"],[8,"ArrayBox",5230],[10,"Iterator",5473],[1,"str"],[0,"mut"],[17,"IsNested"],[5,"FalseT",1536],[10,"PolarsDataType",1536],[17,"Output"],[10,"Fn",5474],[10,"Copy",5475],[5,"AmortSeries",5230],[10,"FnMut",5474],[5,"Float32Type",1536],[5,"Float64Type",1536],[5,"BinaryType",1536],[1,"u8"],[1,"slice"],[5,"StringType",1536],[6,"DataType",1536,5476],[5,"String",5477],[8,"ListChunked",1536],[5,"SortOptions",1450],[8,"IdxCa",1536,5478],[5,"SortMultipleOptions",1450],[8,"BinaryChunked",1536],[10,"PolarsIntegerType",1536],[6,"CastOptions",730],[10,"NumOpsDispatchCheckedInner",5279,5479],[8,"ChunkLenIter",39],[1,"usize"],[8,"ArrayRef",4071,5480],[5,"Vec",5481],[5,"MetadataProperties",819],[10,"DoubleEndedIterator",5482],[8,"BooleanChunked",1536],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",5483],[8,"Result",5483],[10,"Array",5480],[17,"Array"],[10,"IntoIterator",5484],[6,"Result",5485],[10,"FallibleIterator",5486],[5,"Bitmap",5487],[1,"tuple"],[10,"IntoParallelIterator",5488],[10,"TrustedLen",5489],[6,"AnyValue",1536,5490],[8,"IdxSize",4071,5491],[5,"MetadataFlags",819],[5,"ObjectType",1536],[10,"PolarsObjectSafe",1109],[10,"PolarsObject",1109],[1,"f32"],[1,"u64"],[5,"Metadata",819],[5,"RwLockWriteGuard",5492],[5,"Int128Type",1536],[8,"DecimalChunked",1536,5493],[10,"Send",5475],[10,"Sync",5475],[10,"ExactSizeIterator",5494],[10,"PolarsFloatType",1536],[6,"IsSorted",4816,5495],[10,"PolarsIterator",780],[1,"i64"],[5,"Iter",5496],[1,"fn"],[5,"Map",5497],[6,"ChunkedArrayLayout",39],[10,"NumCast",5468],[5,"Scalar",1536,5490],[1,"f64"],[6,"MetadataReadGuard",819,5498],[5,"IMMetadata",819,5499],[5,"Arc",4071,5500],[10,"MetadataTrait",819,5501],[5,"RwLockReadGuard",5492],[1,"i128"],[10,"AsRef",5502],[5,"UInt64Type",1536],[5,"UInt32Type",1536],[1,"u32"],[5,"Range",5503],[5,"Int64Type",1536],[5,"Int32Type",1536],[1,"i32"],[5,"Field",1536,5504],[10,"ParallelIterator",5488],[10,"IndexedParallelIterator",5488],[6,"QuantileInterpolOptions",4071,5505],[5,"RollingOptionsFixedWindow",4071,5506],[10,"Sized",5475],[17,"IsStruct"],[5,"RandomState",5507],[5,"BytesHash",5508],[8,"Array2",5509],[8,"ArrayView1",5509],[8,"StringChunked",1536],[6,"Either",5510],[5,"TypeId",5511],[5,"NullableIdxSize",4071,5491],[10,"FnOnce",5474],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",440,5512],[10,"ChunkedBuilder",468],[5,"BinViewChunkedBuilder",468,5513],[10,"ViewType",5514],[5,"BooleanChunkedBuilder",468,5515],[5,"NullChunkedBuilder",468,5516],[5,"PrimitiveChunkedBuilder",468,5517],[10,"Clone",5518],[8,"StringChunkedBuilder",468,5513],[8,"BinaryChunkedBuilder",468,5513],[10,"NewChunkedArray",468],[5,"AnonymousListBuilder",576,5519],[5,"AnonymousOwnedListBuilder",576,5519],[5,"ListBooleanChunkedBuilder",576,5520],[5,"ListPrimitiveChunkedBuilder",576,5521],[10,"ListBuilderTrait",576],[5,"ListStringChunkedBuilder",576,5522],[5,"ListBinaryChunkedBuilder",576,5522],[5,"ListNullChunkedBuilder",576,5523],[5,"Box",5524],[10,"Hasher",5525],[10,"ChunkedCollectInferIterExt",760],[10,"ChunkedCollectIterExt",760],[10,"Canonical",774],[10,"ChunkedCollectParIterExt",776],[10,"FromParIterWithDtype",776],[5,"BooleanArray",5526],[5,"BoolIterNoNull",780],[5,"SomeIterator",780],[5,"MetadataEnv",819,5527],[10,"MetadataCollectable",819,5528],[5,"Iter",5529],[5,"IterNames",5529],[5,"File",5530],[5,"Mutex",5531],[6,"MetadataMerge",819],[5,"RwLock",5492],[5,"ObjectArray",1109],[6,"ArrowDataType",1536,5532],[10,"Any",5511],[10,"Debug",5483],[5,"BitmapIter",5533],[6,"ZipValidity",5534],[8,"ObjectValueIter",1109],[5,"ObjectChunkedBuilder",1186],[8,"ObjectChunked",1536],[10,"AnonymousObjectBuilder",1209],[5,"ObjectRegistry",1209],[8,"ObjectConverter",1209],[8,"BuilderConstructor",1209],[17,"FuncRet"],[10,"ChunkApply",1237],[10,"ChunkApplyKernel",1237],[10,"ChunkSort",1237],[10,"ChunkUnique",1237],[10,"ChunkCast",1237],[6,"FillNullStrategy",1237],[10,"ChunkCompare",1237],[10,"ChunkExplode",1237],[5,"OffsetsBuffer",5535],[10,"ChunkFillNullValue",1237],[10,"ChunkFilter",1237],[10,"ChunkFull",1237],[10,"ChunkFullNull",1237],[10,"ChunkAnyValue",1237],[10,"IsFirstDistinct",1237],[10,"IsLastDistinct",1237],[10,"ChunkAgg",1237],[10,"ChunkQuantile",1237],[10,"ChunkExpandAtIndex",1237],[10,"ChunkReverse",1237],[10,"ChunkRollApply",1237],[10,"ChunkSet",1237],[10,"ChunkShift",1237],[10,"ChunkShiftFill",1237],[10,"ChunkVar",1237],[10,"ChunkTake",1237],[10,"ChunkTakeUnchecked",1237],[10,"ChunkBytes",1237],[10,"ChunkZip",1237],[10,"BinaryFnMut",1363],[10,"StaticArray",1536,5536],[10,"TernaryFnMut",1363],[10,"Error",5537],[10,"UnaryFnMut",1363],[5,"PrimitiveArray",5538],[6,"SearchSortedSide",1403],[10,"SlicedArray",4071,5539],[5,"NoNull",5315],[5,"RowsEncoded",5540],[5,"BinaryArray",5541],[8,"BinaryOffsetChunked",1536],[5,"NaiveDateTime",5542],[6,"PolarsError",4071,5469],[6,"Cow",5543],[8,"Float32Chunked",1536],[8,"Float64Chunked",1536],[10,"ArrayFromIter",1536,5544],[10,"ArrayFromIterDtype",1536,5544],[10,"AsRefDataType",1536,5476],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5545],[10,"From",5502],[5,"CategoricalChunked",3025,5546],[10,"CategoricalMergeOperation",3025,5547],[10,"LogicalType",1536,5548],[5,"Logical",1536,5548],[5,"OwnedObject",1536,5490],[6,"UnknownKind",1536,5476],[5,"CompatLevel",1536,5476],[6,"TimeUnit",1536,5549],[5,"UInt8Type",1536],[5,"UInt16Type",1536],[5,"Int8Type",1536],[5,"Int16Type",1536],[5,"DateType",1536],[5,"TimeType",1536],[5,"BinaryOffsetType",1536],[5,"DecimalType",1536],[5,"DatetimeType",1536],[5,"DurationType",1536],[5,"CategoricalType",1536],[6,"ArrowTimeUnit",1536],[10,"ArrayCollectIterExt",4071,5544],[8,"Utf8ViewArray",5514],[8,"UInt32Chunked",1536],[5,"Error",5483],[10,"Into",5502],[10,"NumericNative",1536],[5,"ArrowField",4071],[6,"IntegerType",5550],[6,"PrimitiveType",5551],[10,"Borrow",5552],[8,"SmartString",1536],[10,"NoOption",5553],[10,"GetAnyValue",1536,5490],[8,"Int128Chunked",1536],[10,"IntoScalar",1536,5554],[6,"Ordering",5555],[6,"PhysicalType",5550],[8,"UInt8Chunked",1536],[8,"UInt16Chunked",1536],[8,"UInt64Chunked",1536],[8,"Int8Chunked",1536],[8,"Int16Chunked",1536],[8,"Int32Chunked",1536],[8,"Int64Chunked",1536],[8,"PlIdHashMap",1536,5478],[5,"CategoricalChunkedBuilder",3025,5556],[5,"GlobalRevMapMerger",3025,5547],[6,"RevMapping",3166,5557],[6,"CategoricalOrdering",3166,5557],[5,"CatIter",3025,5546],[1,"u128"],[5,"DataFrame",3362],[5,"StringCacheHolder",3221,5558],[5,"ErrString",3250,5469],[6,"PolarsWarning",3250,5559],[10,"Display",5483],[6,"FloatFmt",3330],[1,"char"],[5,"Schema",4735],[10,"IntoSeries",4816,5560],[6,"NullStrategy",3362],[6,"UniqueKeepStrategy",3362],[8,"PlHashSet",1536,5561],[5,"ArrowSchema",4071,5562],[5,"Row",3924],[5,"GroupBy",3665],[5,"RangeToInclusive",5503],[5,"RangeFull",5503],[5,"RangeTo",5503],[5,"RangeFrom",5503],[5,"RangeInclusive",5503],[5,"RecordBatchIter",3362],[5,"PhysRecordBatchIter",3362],[10,"IntoVec",5315],[10,"RangeBounds",5503],[8,"SchemaRef",4735],[6,"IndexOrder",4071,5563],[8,"RecordBatch",5564],[5,"StructArray",5565],[5,"UnpivotArgs",3635],[5,"GroupsIdx",3665,5471],[8,"IdxVec",5566],[6,"GroupByMethod",3665],[5,"SlicedGroups",3665,5471],[5,"GroupsProxyParIter",3665,5471],[10,"UnindexedConsumer",5567],[6,"GroupsIndicator",3665,5471],[8,"IdxItem",3665,5471],[10,"IntoGroupsProxy",3665,5568],[5,"Copied",5569],[5,"Zip",5570],[5,"GroupsProxyIter",3665,5471],[8,"GroupsSlice",3665,5471],[1,"array"],[8,"DynArgs",4071,5571],[10,"IsFloat",5572],[10,"NativeType",5573],[10,"AggList",3908,5574],[10,"TakeExtremum",3908],[10,"PhysicalAggExpr",3921],[6,"AnyValueBuffer",3924,5575],[6,"AnyValueBufferTrusted",3924,5575],[5,"IdHasher",4023,5576],[5,"IdxHash",4023,5576],[5,"HashMap",5577],[10,"BuildHasher",5525],[10,"VecHash",4023,5578],[10,"Allocator",5579],[5,"BorrowedFd",5580],[10,"AsFd",5580],[10,"AsRawFd",5581],[20,"MaybeUninit",5582],[10,"NumOpsDispatchChecked",4071,5479],[5,"ChunkId",4071,5491],[5,"RollingVarParams",4071,5571],[5,"RollingQuantileParams",4071,5571],[6,"NonExistent",4071,5583],[10,"Ord",5555],[10,"Default",5584],[5,"CStr",5585],[5,"Weak",5500],[10,"PartialEq",5555],[10,"Scalar",5586],[5,"Error",5587],[5,"Utf8Error",5588],[5,"TryReserveError",5589],[6,"Error",5590],[10,"ToOwned",5543],[5,"OsString",5591],[5,"OsStr",5591],[1,"never"],[5,"PathBuf",5592],[5,"Path",5592],[5,"CString",5593],[10,"FromData",4657,5594],[5,"Buffer",5595],[10,"FromDataUtf8",4657,5594],[10,"FromDataBinary",4657,5594],[5,"ListArray",5596],[6,"Ambiguous",4071,5583],[10,"NamedFromOwned",4071,5597],[10,"PartialOrd",5555],[10,"Hash",5525],[10,"SeriesTrait",4816,5495],[10,"CloneToUninit",5518],[10,"ChunkAggSeries",4071,5598],[10,"QuantileAggSeries",4071,5599],[10,"IndexToUsize",4071,5600],[10,"NamedFrom",4071,5597],[5,"Pin",5601],[5,"Request",5537],[5,"BorrowedCursor",5602],[5,"IoSliceMut",5603],[6,"SeekFrom",5603],[10,"VarAggSeries",4071,5604],[5,"AllocError",5579],[5,"BTreeMap",5605],[5,"IoSlice",5603],[5,"AnonymousBuilder",4663,5606],[5,"Offsets",5535],[5,"MutableNullArray",4686,5607],[5,"MutableBitmap",5608],[5,"Utf8Array",5609],[10,"SchemaNamesAndDtypes",4735],[8,"ArrowSchemaRef",5562],[10,"IndexOfSchema",4735],[17,"DataType"],[8,"Metadata",5532],[5,"SeriesIter",4816,5610],[8,"SeriesPhysIter",4816,5610],[5,"Rc",5611],[10,"LhsNumOps",5254,5470],[10,"NumOpsDispatch",5254,5470],[6,"NullBehavior",5287],[10,"CustomIterTools",5315,5612],[10,"Container",5315],[5,"SuperTypeOptions",5315,5613],[5,"TrustMyLength",5315,5489],[10,"FromIteratorReversed",5614],[10,"FromTrustedLenIterator",5315,5612],[5,"Wrap",5315],[5,"LazyCompact",5615],[5,"SmartString",5616],[8,"FillNullLimit",1237],[10,"InitHashMaps",1536],[10,"InitHashMaps2",1536],[5,"TrueT",1536],[15,"IO",3315],[15,"Context",3315],[15,"Count",3905],[15,"Slice",3906],[10,"ListFromIter",4071],[10,"Utf8FromIter",4730],[10,"BinaryFromIter",4730],[6,"BitRepr",4816]],"r":[[0,5576],[4,5558],[13,5558],[16,5558],[31,5558],[440,5512],[468,5513],[469,5513],[470,5515],[473,5516],[474,5517],[475,5513],[576,5519],[577,5519],[578,5522],[579,5520],[581,5523],[582,5521],[583,5522],[824,5499],[830,5528],[831,5527],[835,5498],[836,5501],[1155,5617],[1434,5539],[1450,5539],[1537,5490],[1539,5544],[1540,5544],[1541,5544],[1542,5532],[1544,5476],[1560,5546],[1563,5546],[1564,5556],[1565,5547],[1566,5557],[1568,5476],[1569,5476],[1570,5476],[1571,5476],[1582,5493],[1592,5504],[1593,5504],[1608,5490],[1610,5547],[1614,5478],[1615,5600],[1616,5478],[1617,5478],[1618,5561],[1619,5478],[1644,5554],[1658,5548],[1659,5548],[1677,5490],[1681,5561],[1682,5561],[1683,5478],[1684,5561],[1685,5561],[1691,5557],[1692,5490],[1695,5536],[1707,5549],[1708,5476],[1735,5476],[1937,5547],[1954,5548],[2087,5476],[2615,5547],[2616,5547],[2628,5476],[2714,5546],[2752,5546],[3025,5546],[3026,5546],[3027,5556],[3028,5547],[3029,5557],[3031,5547],[3035,5557],[3052,5547],[3118,5547],[3119,5547],[3137,5546],[3141,5546],[3166,5557],[3171,5557],[3221,5558],[3227,5558],[3230,5558],[3238,5558],[3240,5557],[3245,5557],[3246,5558],[3247,5558],[3248,5558],[3249,5558],[3256,5469],[3263,5469],[3264,5469],[3265,5559],[3279,5469],[3287,5469],[3294,5559],[3299,5469],[3300,5469],[3301,5469],[3302,5469],[3303,5469],[3304,5559],[3305,5469],[3319,5618],[3320,5618],[3321,5618],[3322,4023],[3665,5471],[3671,5471],[3672,5471],[3673,5471],[3674,5471],[3675,5471],[3676,5471],[3679,5471],[3681,5568],[3693,5471],[3908,5574],[3926,5575],[3927,5575],[4023,5576],[4024,5576],[4025,5576],[4026,5578],[4029,5578],[4030,5578],[4071,5583],[4072,5500],[4073,5512],[4074,5544],[4075,5480],[4077,5562],[4078,5513],[4079,5515],[4081,5546],[4082,5546],[4083,5556],[4084,5547],[4085,5557],[4086,5598],[4087,5491],[4088,39],[4089,468],[4090,760],[4091,760],[4095,3362],[4097,5571],[4101,5594],[4102,5594],[4103,5594],[4105,5547],[4108,5600],[4109,5491],[4110,5563],[4111,5600],[4112,5560],[4113,5315],[4115,5619],[4116,5619],[4117,5619],[4120,5470],[4122,5522],[4123,5520],[4124,576],[4125,5620],[4126,5521],[4127,5522],[4131,5597],[4132,5597],[4134,468],[4136,5583],[4140,5491],[4141,5491],[4142,5470],[4143,5479],[4147,5469],[4148,780],[4149,1109],[4150,5469],[4151,5517],[4152,5599],[4153,5505],[4156,5557],[4157,5506],[4158,5571],[4159,5571],[4164,4816],[4165,5495],[4167,5539],[4169,5558],[4171,5513],[4173,3362],[4174,3635],[4175,5604],[4176,5578],[4222,5547],[4275,5620],[4278,0],[4291,5620],[4320,0],[4456,5600],[4499,5620],[4501,5547],[4502,5547],[4528,5620],[4534,5469],[4535,5469],[4536,5469],[4537,5469],[4549,5546],[4551,5620],[4557,5546],[4631,5620],[4657,5594],[4658,5594],[4659,5594],[4663,5606],[4686,5607],[4717,5557],[4722,5557],[4723,5539],[4726,5558],[4727,5558],[4728,5558],[4729,5558],[4730,5621],[4731,5621],[4818,5495],[4819,1237],[4822,5560],[4823,5495],[4824,5495],[4829,5610],[4830,5610],[4831,5495],[5254,5470],[5255,5470],[5256,5470],[5262,5470],[5279,5479],[5280,5479],[5317,5612],[5318,5612],[5319,5612],[5322,5613],[5323,5489],[5335,5622],[5336,5622],[5378,5623],[5379,5613],[5404,5613],[5405,5613],[5407,5624],[5426,5613],[5447,5613],[5460,5624]],"b":[[48,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[49,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[50,"impl-Add-for-%26ChunkedArray%3CT%3E"],[51,"impl-Add-for-ChunkedArray%3CT%3E"],[64,"impl-ChunkedArray%3CFloat32Type%3E"],[65,"impl-ChunkedArray%3CFloat64Type%3E"],[70,"impl-ChunkedArray%3CBinaryType%3E"],[71,"impl-ChunkedArray%3CT%3E"],[72,"impl-ChunkedArray%3CStringType%3E"],[101,"impl-ChunkedArray%3CT%3E"],[102,"impl-Container-for-ChunkedArray%3CT%3E"],[121,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[122,"impl-Div-for-%26ChunkedArray%3CT%3E"],[123,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[124,"impl-Div-for-ChunkedArray%3CT%3E"],[131,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[132,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[133,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[134,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[140,"impl-Debug-for-ChunkedArray%3CT%3E"],[141,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[152,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[153,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[154,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[156,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[157,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[185,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[186,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[187,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[220,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[221,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[222,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[223,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[224,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[225,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[226,"impl-ChunkedArray%3CT%3E"],[227,"impl-Container-for-ChunkedArray%3CT%3E"],[232,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[233,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[234,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[235,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[236,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[237,"impl-ChunkedArray%3CBooleanType%3E"],[239,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[240,"impl-ChunkedArray%3CBooleanType%3E"],[250,"impl-ChunkedArray%3CBooleanType%3E"],[251,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[254,"impl-ChunkedArray%3CT%3E"],[255,"impl-ChunkedArray%3CBooleanType%3E"],[256,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[257,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[258,"impl-Mul-for-ChunkedArray%3CT%3E"],[259,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[264,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[265,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[266,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[267,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[268,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[269,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[270,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[271,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[272,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[273,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[274,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[275,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[276,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[277,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[278,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[279,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[280,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[281,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[282,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[283,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[284,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[285,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[286,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[287,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[295,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[296,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[297,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[298,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[302,"impl-ChunkedArray%3CListType%3E"],[303,"impl-ChunkedArray%3CStringType%3E"],[304,"impl-ChunkedArray%3CStringType%3E"],[305,"impl-ChunkedArray%3CListType%3E"],[316,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[317,"impl-Rem-for-ChunkedArray%3CT%3E"],[318,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[319,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[338,"impl-Container-for-ChunkedArray%3CT%3E"],[339,"impl-ChunkedArray%3CT%3E"],[342,"impl-ChunkedArray%3CT%3E"],[343,"impl-Container-for-ChunkedArray%3CT%3E"],[346,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[347,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[348,"impl-Sub-for-ChunkedArray%3CT%3E"],[349,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[351,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[352,"impl-ChunkedArray%3CBooleanType%3E"],[355,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[356,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[357,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[358,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[364,"impl-ChunkedArray%3CListType%3E"],[365,"impl-ChunkedArray%3CT%3E"],[370,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[371,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[372,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[373,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[374,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[375,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[402,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[524,"impl-BinViewChunkedBuilder%3Cstr%3E"],[525,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[857,"impl-MetadataProperties"],[858,"impl-Flags-for-MetadataProperties"],[859,"impl-Flags-for-MetadataFlags"],[860,"impl-MetadataFlags"],[926,"impl-Metadata%3CT%3E"],[927,"impl-MetadataTrait-for-Metadata%3CT%3E"],[952,"impl-LowerHex-for-MetadataProperties"],[953,"impl-Octal-for-MetadataProperties"],[954,"impl-Debug-for-MetadataProperties"],[955,"impl-Binary-for-MetadataProperties"],[956,"impl-UpperHex-for-MetadataProperties"],[957,"impl-LowerHex-for-MetadataFlags"],[958,"impl-Debug-for-MetadataFlags"],[959,"impl-Binary-for-MetadataFlags"],[960,"impl-UpperHex-for-MetadataFlags"],[961,"impl-Octal-for-MetadataFlags"],[971,"impl-MetadataProperties"],[972,"impl-Flags-for-MetadataProperties"],[973,"impl-Flags-for-MetadataFlags"],[974,"impl-MetadataFlags"],[987,"impl-Metadata%3CT%3E"],[988,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1031,"impl-Metadata%3CT%3E"],[1032,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1036,"impl-Metadata%3CT%3E"],[1037,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1115,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1116,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1150,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1151,"impl-ObjectArray%3CT%3E"],[1166,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1167,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1177,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1178,"impl-ObjectArray%3CT%3E"],[1180,"impl-ObjectArray%3CT%3E"],[1181,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1183,"impl-ObjectArray%3CT%3E"],[1184,"impl-Array-for-ObjectArray%3CT%3E"],[1187,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1188,"impl-ObjectChunkedBuilder%3CT%3E"],[1190,"impl-ObjectChunkedBuilder%3CT%3E"],[1191,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1775,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1776,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1777,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1778,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1779,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1780,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1781,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1782,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1858,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1859,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1860,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1861,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1862,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1863,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[2218,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2219,"impl-PartialEq-for-DataType"],[2228,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2229,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2230,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2231,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2234,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2235,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2236,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2237,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2275,"impl-Display-for-AnyValue%3C\'_%3E"],[2276,"impl-Debug-for-AnyValue%3C\'a%3E"],[2278,"impl-Debug-for-DataType"],[2279,"impl-Display-for-DataType"],[2282,"impl-Debug-for-TimeUnit"],[2283,"impl-Display-for-TimeUnit"],[2295,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2296,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2297,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2298,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2300,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2303,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2304,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2305,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2308,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2309,"impl-From%3C%26Field%3E-for-Field"],[2332,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2333,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2337,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2338,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2339,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2341,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2342,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2343,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2344,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2350,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2351,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2353,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2354,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2355,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2356,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2357,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2358,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2366,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2367,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2368,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2369,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2370,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2371,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2460,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2461,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2462,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2463,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2466,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2467,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2468,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2469,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2605,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2606,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2607,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2608,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2611,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2612,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2613,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2614,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2649,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2650,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2651,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2652,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2653,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2654,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2655,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2656,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2657,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2658,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2672,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2673,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2676,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2677,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2678,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2679,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2682,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2683,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2684,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2685,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2764,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2765,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2766,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2767,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[3072,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3073,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3074,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3075,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3076,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3077,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3092,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3093,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3094,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3095,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3096,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3097,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3112,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3113,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3114,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3115,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3116,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3117,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3128,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3129,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3130,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3131,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3132,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3133,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3289,"impl-Debug-for-ErrString"],[3290,"impl-Display-for-ErrString"],[3383,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3384,"impl-Add%3C%26Series%3E-for-DataFrame"],[3385,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3428,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3429,"impl-Div%3C%26Series%3E-for-DataFrame"],[3430,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3462,"impl-Debug-for-DataFrame"],[3463,"impl-Display-for-DataFrame"],[3495,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3496,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3497,"impl-Index%3C%26str%3E-for-DataFrame"],[3498,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3499,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3500,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3501,"impl-Index%3Cusize%3E-for-DataFrame"],[3502,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3520,"impl-DataFrame"],[3521,"impl-Container-for-DataFrame"],[3527,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3528,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3529,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3530,"impl-DataFrame"],[3531,"impl-Container-for-DataFrame"],[3545,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3546,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3547,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3573,"impl-Container-for-DataFrame"],[3574,"impl-DataFrame"],[3578,"impl-Container-for-DataFrame"],[3579,"impl-DataFrame"],[3582,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3583,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3584,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3603,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3604,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3782,"impl-Display-for-GroupByMethod"],[3783,"impl-Debug-for-GroupByMethod"],[3789,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3791,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3792,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3826,"impl-IntoIterator-for-%26GroupsIdx"],[3827,"impl-IntoIterator-for-GroupsIdx"],[3829,"impl-IntoParallelIterator-for-GroupsIdx"],[3830,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4193,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4194,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4282,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4283,"impl-Default-for-Arc%3Cstr%3E"],[4284,"impl-Default-for-Arc%3CT%3E"],[4285,"impl-Default-for-Arc%3CCStr%3E"],[4339,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4340,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4341,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4374,"impl-Debug-for-PolarsError"],[4375,"impl-Display-for-PolarsError"],[4378,"impl-Pointer-for-Arc%3CT,+A%3E"],[4379,"impl-Debug-for-Arc%3CT,+A%3E"],[4380,"impl-Display-for-Arc%3CT,+A%3E"],[4390,"impl-From%3CError%3E-for-PolarsError"],[4391,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4392,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4393,"impl-From%3CError%3E-for-PolarsError"],[4398,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4399,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4400,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4402,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4403,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4405,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4406,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4407,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4408,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4409,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4410,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4411,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4412,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4413,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4414,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4758,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4759,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4761,"impl-From%3CArrowSchema%3E-for-Schema"],[4762,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4763,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4764,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4837,"impl-Add%3CT%3E-for-%26Series"],[4838,"impl-Add-for-Series"],[4839,"impl-Add%3CT%3E-for-Series"],[4840,"impl-Add-for-%26Series"],[4911,"impl-Div%3CT%3E-for-Series"],[4912,"impl-Div-for-Series"],[4913,"impl-Div%3CT%3E-for-%26Series"],[4914,"impl-Div-for-%26Series"],[4926,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4927,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4928,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4929,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4930,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4931,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4948,"impl-Display-for-Series"],[4949,"impl-Debug-for-Series"],[4962,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4963,"impl-FromIterator%3Ci32%3E-for-Series"],[4964,"impl-FromIterator%3Cbool%3E-for-Series"],[4965,"impl-FromIterator%3C%26i64%3E-for-Series"],[4966,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4967,"impl-FromIterator%3Cu64%3E-for-Series"],[4968,"impl-FromIterator%3C%26u32%3E-for-Series"],[4969,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4970,"impl-FromIterator%3C%26f64%3E-for-Series"],[4971,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4972,"impl-FromIterator%3C%26u64%3E-for-Series"],[4973,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4974,"impl-FromIterator%3Cf64%3E-for-Series"],[4975,"impl-FromIterator%3C%26bool%3E-for-Series"],[4976,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4977,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4978,"impl-FromIterator%3C%26i32%3E-for-Series"],[4979,"impl-FromIterator%3C%26f32%3E-for-Series"],[4980,"impl-FromIterator%3Cu32%3E-for-Series"],[4981,"impl-FromIterator%3Ci64%3E-for-Series"],[4982,"impl-FromIterator%3C%26str%3E-for-Series"],[4983,"impl-FromIterator%3CString%3E-for-Series"],[4984,"impl-FromIterator%3Cf32%3E-for-Series"],[4985,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4986,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4987,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4988,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4989,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4990,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[4991,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[5006,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5007,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5008,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5009,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5010,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5011,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5053,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5054,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5055,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5056,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5057,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5058,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5072,"impl-Mul%3CT%3E-for-%26Series"],[5073,"impl-Mul-for-Series"],[5074,"impl-Mul-for-%26Series"],[5075,"impl-Mul%3CT%3E-for-Series"],[5082,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5083,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5084,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5085,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5086,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5087,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5088,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5089,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5090,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5091,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5092,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5093,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5094,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5095,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5096,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5097,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5098,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5099,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5100,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5101,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5102,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5103,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5104,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5105,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5106,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5107,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5108,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5109,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5110,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5111,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5112,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5113,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5114,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5115,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5116,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5117,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5118,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5123,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5124,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5125,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5126,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5127,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5128,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5137,"impl-Rem-for-%26Series"],[5138,"impl-Rem%3CT%3E-for-%26Series"],[5139,"impl-Rem%3CT%3E-for-Series"],[5171,"impl-Sub-for-Series"],[5172,"impl-Sub-for-%26Series"],[5173,"impl-Sub%3CT%3E-for-%26Series"],[5174,"impl-Sub%3CT%3E-for-Series"],[5195,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5197,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5198,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5199,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5396,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5397,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5399,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5400,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5402,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5403,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAHYOwg7/DgIPAw8EDwUPBg8LDw4PEw8UDzkP","e":"OzAAAAEAADQQDwIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAEAIQAHACoADAA+AAAAQQACAEUABABNAAMAUgAAAFQACwBiAAMAZwAAAGoAAwBvAAEAdQANAIQAAwCJAAEAjAAEAJIAAACUAAEAmAAGAKEAAwCnAAMArAAFALMAAQC4AAUAwAACAMcABADNAAMA1AACANkAAQDcAAYA5AAAAOkADAD7AAMAAQEGAAkBGwAoAQMALQEAAC8BBAA1AQEAOwEAAD0BBABDAQAASAEFAFABAQBTAQAAVQEBAFgBCgBpAQEAbwEAAHMBCAB9AQgAhwEAAIkBBQCRAQAAkwEjALgBKQDmAQIA7AEnABoCBQAkAgAAJgImAE8CTACjAgwAtwIkAN8CDwDwAgEA8wIZABADCQAcAwEAIAMBACMDFQA6AwkARQMKAFsDAQBiAyEAiAMSAJ0DAACfAwkAqwMDALEDAQC1Aw0AzQMBANIDAQDYAwcA4QMHAPYDAQD6AwAA/QMDAAUEBQAMBAQAGAQLACsEBAAyBA0AQgQGAEwECABWBAEAWgQWAHIEBwB7BAAAfQQAAH8EAACBBAEAhgQQAJgEAACaBAAAnQQCAKEEAwCmBAAAqAQIALIEAAC0BAUAvAQBAL8EAADBBAEAxAQDAMkEAwDOBAIA0gQDANgEAADbBAAA4wQAAOgEAADrBAEA8AQBAPMEAAD2BAAAAAUAAAkFAgAPBQcAGQUCAB4FAQAhBQAAIwUBACkFAQAsBQEAMwUBADkFAAA8BQAAPwUAAEEFAABDBQAARQUAAEoFBABRBQEAVAUHAF0FAgBjBQAAZQUDAGoFAQBtBQUAeQUXAJIFAQCWBQQAnAUDAKMFBwCuBRIAwwULANAFAQDTBQMA4wUJAPkFDQAJBgIADQYFABUGAAAXBg0AKAYAACoGAAAvBgEAMgYAADQGAgA4BgAAOgYAAD0GAABABgAAQgYBAEUGAABHBgIASwYMAFkGAABbBgEAXgYAAGAGAQBjBgAAZQYBAGgGAABqBgEAbQYDAHQGAAB4BgEAfAYAAH8GAACBBgAAgwYDAIgGAACLBggAlQYBAJgGBQCgBgEApAYAAKYGAACrBgIArwYBALIGAAC0BgEAtwYAALkGAQC8BgAAvgYBAMEGAADDBgEAxgYAAMgGAADLBjwADgcEABUHCQAhBwQAJwcIADEHAAAzB2IAlweIACEIBwAqCHkApQgBAKgIRwD4CAMA/QgAAAAJAgAFCQEACAkAAB0JAQAhCRcAPQkkAGQJBgBtCR4AkglBANYJAAD7CQsACQoAAAsKAQAOCgEAEQoAABYKBQAdCgAAIAoCACUKAwAqCgAALAodAEsKCQBWCg4AZgoeAIYKBgCOChoAqgoVAMEKDADTCgAA1QoAANoKHgD7CgIA/wpTAFQLLQCDC00A0gsEANgLAQDbCwIA3wsEAOULJAARDAIAFQwJACMMAwAoDBcAQgwBAEUMBABLDA0AWgwFAGEMAABjDBgAfQwBAIMMAgCIDAEAjAwJAJcMBACdDAEAogwAAKQMAgCoDAEAqwwAAK0MAQCzDAQAuQwEAL8MEADRDAoA3gwDAOQMBADqDCYAEg0FABkNCQAmDQAAKQ0KADUNBQBADRYAWQ0TAHYNAQB6DQIAfg0AAIANAACFDQMAjg0AAJ0NAACgDQEAqA0MALsNAQDCDQAAxA0AAMgNAgDMDQAA0A0BANoNAgDiDQAA5Q0AAOsNAAD0DQIA+A0AAPsNAAD9DQQACA4DAA8OBgAYDgkAIw4AACkOBAA1Dg4ARQ4CAEkOAABLDgkAVg4BAFkOAwBeDgMAYw4JAG4OBwB3DgEAeg4dAJkOKADDDgYAzg4AANAOAQDTDgAA1g4DANwOAADhDgcA8Q4NAAAPAQAHDwMADA8BABAPAgAVDwAAFw8fADoPDABJDwUAUA8HAFkPFgByDw4Agg8OAJIPAQCWDwMAnQ8GAKcPDgC4DwEAuw8RAM8PBADXDwUA3w8JAOoPAgDvDwcA+A8LAAUQAwAKEBYAIhAHACsQBQAyEBUASxARAF4QAABgEAEAZBAcAIMQAgCHECQArRAGALcQAQC/ECIA5RACAOkQCwD2EBwAFREVAC0RAAAyEQAARREAAEoRAABNEQAAVBEAAFcRAABcEQIAYBEFAGgREQCKEQMAjxECAJMRAQCWEQEAsRECALcRBAC+EQAAwREHAMsRAADNEQEA0hEtAAgSAAAKEgwAGBIAABoSDAAsEgkAOBIGAEASAABCEh0AYRIAAGMSCwBwEgAAchIBAHsSBgCEEgcAjRILAJoSBQCmEgAAqBIBAKsSAQCvEgEAwxIAAMUSAADHEgAAyxIDANESBQDYEgQA3hIFAOYSBADwEgAA9hICAP4SBQAFEwkAEhMDABcTAAAbEwIAHxMEACYTEgA9EwMAQhMAAEQTAABHEwIAVBMDAFsTAABfEwEAYhMfAIUTAACHEwEAkBMBAJMTAQCWEwAAnBMBAJ8TAwCnEwMAsxMDALgTAAC6EwAAvxMCAMMTAADJEwAA0RMDANcTAADbEyEA/hMBAAIUAgAGFAAACBQBAAwUAQASFAIAFxQAABkUAAAdFAIAJBQBACcUAAApFAEALBQAADIUAAA0FAMARBQBAEcUDgBXFAQAYxQAAGgUAwBtFAAAcBQLAH0UAAB/FAAAgRQEAIcUGgClFAIAqhQQALwUAQC/FAoAyxQGANQUAADXFAAA2hQRAO0UAgDyFBAABRUKABQVCQAfFQgALBUJADcVBQA/FQAAQRUBAEQVAwBJFQsAVhUEAA=="}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCCNNNNNNNNNONNNNNNNNCMMNNNNNNCONNNNCCCOCMMMOCCCCCCONNNNNNNNONNCNNMGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNNOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNHONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNHNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHJHHHHHHKFNNNNNNNNHNNMNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNEJJJJHHH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriteDataFrameToFile","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","cloud","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file_cache","finish","finish","fmt","fmt","from","from","hash","hash","hive","hive_start_idx","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","path_utils","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_parse_dates","type_id","type_id","utils","vzip","vzip","write_df_to_file","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","clone_to_uninit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","download","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","object_path_from_string","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file_cache_ttl","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","with_max_retries","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_predicate","batched","batched_borrowed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","chunk_size","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","columns","comment_prefix","count_rows","decimal_comma","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dtype_overwrite","encoding","eol_char","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_parse_options","has_header","hash","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema_length","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_reader_with_file_handle","is_compressed","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_with_inference_result","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dtype","from","from","from","from","init","init","init","init","init_buffers","into","into","into","into","into_series","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","float_scientific","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","compression","count_rows","data","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","to_writer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compat_level","with_compat_level","with_compression","with_compression","with_compression","with_extension","with_hive_partition_columns","with_include_file_path","with_n_rows","with_n_rows","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","write_df_to_file","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","ensure_not_mapped","from","from","init","into","to_bytes","to_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","arr_from_iter","arr_from_iter","arr_from_iter_with_dtype","arr_from_iter_with_dtype","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","check_bound","clone","clone_into","clone_to_uninit","count","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","full_null","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","propagate_nulls","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_with_dtype","try_arr_from_iter_with_dtype","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","with_validity","with_validity_typed","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_schema","check_schema","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","limit_reached","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_include_file_path","with_include_file_path","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","compression","data_page_size","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distinct_count","drop","drop","drop","drop","drop","drop","drop","drop","empty","encode_and_compress","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","full","get_writer","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_writer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_df_to_file","write_row_groups","write_partitioned_dataset","POLARS_TEMP_DIR_BASE_PATH","expand_paths","expand_paths_hive","expanded_from_single_directory","get_glob_start_idx","is_cloud_url","resolve_homedir","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","__clone_box","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","field_name","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","take_indices","to_max","to_min","to_min_max","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_schema","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","write_partitioned_dataset","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","get_reader_bytes","get_sequential_row_statistics","materialize_projection"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[154,"polars_io::cloud"],[227,"polars_io::cloud::options"],[415,"polars_io::csv"],[417,"polars_io::csv::read"],[678,"polars_io::csv::read::buffer"],[752,"polars_io::csv::read::buffer::Buffer"],[755,"polars_io::csv::read::schema_inference"],[782,"polars_io::csv::write"],[928,"polars_io::file_cache"],[949,"polars_io::ipc"],[1191,"polars_io::json"],[1289,"polars_io::mmap"],[1311,"polars_io::ndjson"],[1313,"polars_io::ndjson::core"],[1417,"polars_io::parquet"],[1420,"polars_io::parquet::metadata"],[1473,"polars_io::parquet::read"],[1616,"polars_io::parquet::write"],[1846,"polars_io::partition"],[1847,"polars_io::path_utils"],[1854,"polars_io::pl_async"],[1875,"polars_io::predicates"],[1942,"polars_io::prelude"],[1953,"polars_io::utils"],[1960,"dyn_clone::sealed"],[1961,"polars_io::options"],[1962,"core::result"],[1963,"serde::de"],[1964,"polars_io::shared"],[1965,"polars_core::frame"],[1966,"polars_error"],[1967,"core::fmt"],[1968,"core::hash"],[1969,"std::io"],[1970,"polars_arrow::record_batch"],[1971,"core::option"],[1972,"serde::ser"],[1973,"core::any"],[1974,"polars_io::avro::read"],[1975,"polars_arrow::datatypes::schema"],[1976,"polars_io::avro::write"],[1977,"polars_core::schema"],[1978,"alloc::string"],[1979,"alloc::vec"],[1980,"polars_io::cloud::glob"],[1981,"object_store"],[1982,"alloc::sync"],[1983,"polars_io::cloud::polars_object_store"],[1984,"object_store::path"],[1985,"tokio::io::async_write"],[1986,"core::marker"],[1987,"polars_io::cloud::adaptors"],[1988,"std::io::error"],[1989,"crossterm::command"],[1990,"url"],[1991,"bytes::bytes"],[1992,"core::ops::range"],[1993,"core::ops::function"],[1994,"parquet_format_safe::thrift::varint::decode"],[1995,"object_store::aws::builder"],[1996,"object_store::azure::builder"],[1997,"object_store::gcp::builder"],[1998,"core::convert"],[1999,"core::iter::traits::collect"],[2000,"polars_io::csv::read::reader"],[2001,"alloc::boxed"],[2002,"polars_io::csv::read::read_impl::batched"],[2003,"polars_io::csv::read::options"],[2004,"std::path"],[2005,"std::fs"],[2006,"polars_core::datatypes::dtype"],[2007,"polars_core::series"],[2008,"polars_utils::aliases"],[2009,"polars_io::csv::write::writer"],[2010,"polars_io::csv::write::options"],[2011,"core::num::nonzero"],[2012,"polars_io::file_cache::entry"],[2013,"polars_io::ipc::ipc_stream"],[2014,"polars_io::ipc::write"],[2015,"futures_io::if_std"],[2016,"polars_io::ipc::ipc_file"],[2017,"polars_io::ipc::ipc_reader_async"],[2018,"polars_arrow::io::ipc::read::file"],[2019,"polars_arrow::array::struct_"],[2020,"polars_arrow::array"],[2021,"polars_arrow::datatypes"],[2022,"polars_arrow::datatypes::field"],[2023,"polars_arrow::array::growable::structure"],[2024,"polars_arrow::array::struct_::mutable"],[2025,"polars_arrow::bitmap::immutable"],[2026,"polars_arrow::scalar"],[2027,"polars_arrow::array::struct_::iterator"],[2028,"polars_arrow::bitmap::utils::iterator"],[2029,"polars_arrow::bitmap::utils::zip_validity"],[2030,"polars_parquet::parquet::metadata::file_metadata"],[2031,"polars_parquet::parquet::metadata::column_order"],[2032,"polars_parquet::parquet::metadata::row_metadata"],[2033,"polars_parquet::arrow::read::statistics"],[2034,"parquet_format_safe::parquet_format"],[2035,"polars_parquet::parquet::metadata::schema_descriptor"],[2036,"polars_parquet::parquet::error"],[2037,"polars_io::parquet::read::reader"],[2038,"polars_io::parquet::read::read_impl"],[2039,"polars_io::parquet::read::options"],[2040,"polars_io::parquet::write::writer"],[2041,"polars_io::parquet::write::batched_writer"],[2042,"polars_io::parquet::write::options"],[2043,"polars_parquet::arrow::write"],[2044,"polars_parquet::parquet::write"],[2045,"core::iter::traits::iterator"],[2046,"polars_parquet::arrow::write::file"],[2047,"std::sync::mutex"],[2048,"core::future::future"],[2049,"tokio::runtime::task::join"],[2050,"smartstring::alias"],[2051,"polars_core::datatypes::field"],[2052,"avro_schema::file"],[2053,"polars_io::cloud::object_store_setup"],[2054,"polars_io::csv::read::parser"],[2055,"polars_io::csv::read::utils"],[2056,"polars_io::file_cache::cache"],[2057,"polars_io::file_cache::utils"],[2058,"polars_io::parquet::read::utils"],[2059,"polars_io::utils::other"]],"i":[0,0,0,0,0,0,5,6,0,0,5,6,5,6,5,6,5,6,5,6,0,0,6,5,6,5,6,5,6,5,6,6,5,6,5,5,5,6,6,6,0,11,14,5,6,5,6,5,6,0,6,5,6,5,6,0,0,0,5,0,11,14,20,5,0,0,0,0,0,0,6,5,6,5,6,5,6,5,6,6,5,6,0,5,6,25,0,0,0,0,29,29,29,29,29,26,26,30,29,26,30,29,29,29,29,29,26,30,29,26,30,29,26,30,29,29,29,29,29,26,30,29,26,30,29,29,26,30,29,26,30,29,26,30,26,26,29,26,30,29,26,30,29,26,30,29,26,30,29,26,30,26,30,26,0,0,0,41,45,37,41,45,37,41,37,0,41,41,41,37,45,37,41,45,37,41,41,45,45,37,41,37,45,37,45,37,41,45,37,41,37,41,41,41,0,41,45,37,41,45,37,41,45,37,41,45,0,0,37,45,37,45,41,45,37,41,45,37,41,45,37,41,45,37,41,45,45,59,58,59,0,60,59,61,61,0,58,60,58,58,59,60,59,59,0,0,58,58,59,58,58,58,59,58,58,59,59,61,61,0,61,58,58,59,59,59,58,58,59,58,60,60,58,59,58,59,58,59,59,59,58,58,36,59,60,58,59,60,58,36,61,59,60,58,36,61,59,60,36,36,36,58,36,59,60,58,36,59,60,58,58,36,59,59,60,60,36,58,36,61,59,60,58,36,61,59,60,58,36,59,60,58,36,61,59,60,58,36,61,59,60,58,58,58,36,36,36,59,59,59,60,60,60,36,58,36,59,60,58,36,61,59,60,58,61,59,60,36,58,36,59,60,58,36,61,59,60,58,36,61,59,60,36,58,36,59,60,58,36,59,60,58,36,61,59,60,58,36,61,59,60,58,36,61,59,60,58,36,61,59,60,36,36,36,36,0,0,77,77,0,0,0,0,0,0,75,76,77,0,0,76,75,73,74,75,76,77,66,66,66,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,0,73,73,74,75,76,77,73,74,75,76,77,73,74,75,75,76,77,73,74,0,74,73,74,75,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,73,74,75,76,77,72,71,66,73,74,75,76,77,73,74,74,73,74,75,76,77,73,73,73,74,74,74,75,75,75,76,76,76,77,77,77,66,73,74,75,76,77,72,71,66,73,74,75,76,76,77,73,73,73,74,75,76,77,73,0,73,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,73,0,73,73,74,73,73,66,76,76,76,72,71,74,73,73,73,74,73,73,73,73,73,0,73,74,73,74,75,76,77,73,73,73,74,75,76,77,74,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,73,74,72,71,66,73,74,75,76,77,73,72,71,66,73,74,75,76,77,73,73,74,74,73,74,74,73,73,73,73,74,73,73,74,73,73,73,74,73,73,73,73,73,73,74,73,73,74,74,83,0,83,0,83,83,0,83,83,83,83,83,83,83,83,83,83,83,83,83,0,83,83,173,174,175,83,173,174,175,83,173,174,175,83,173,174,175,83,173,174,175,83,83,173,174,175,83,173,174,175,83,0,173,174,175,83,83,173,174,175,83,173,174,175,83,173,174,175,83,173,174,175,83,176,176,176,0,81,81,81,81,81,81,81,81,81,81,0,81,81,81,81,0,0,81,81,81,81,81,81,81,81,81,91,0,0,0,91,91,91,0,0,89,90,91,89,87,87,88,89,90,91,87,88,89,90,91,89,90,91,89,90,91,89,90,91,91,90,90,89,90,91,87,88,89,90,91,87,88,89,90,91,89,90,91,87,88,89,90,91,89,90,91,89,89,89,90,90,90,91,91,91,87,88,90,90,89,90,91,87,88,89,90,91,89,90,91,87,89,87,89,87,88,89,90,91,87,88,89,90,91,90,89,87,87,90,90,90,90,89,90,91,89,90,89,90,91,87,88,89,90,91,87,88,89,90,91,87,88,89,90,91,87,88,89,90,91,87,87,87,87,87,87,87,87,87,87,87,88,0,0,0,94,94,94,94,94,94,0,94,0,94,94,94,94,94,94,94,94,94,0,0,0,0,0,0,0,0,0,0,0,103,103,100,101,102,103,95,96,96,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,102,103,103,102,104,104,107,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,100,102,103,108,104,95,109,107,96,97,100,101,102,103,100,102,103,102,102,102,103,103,103,108,95,109,96,97,108,100,102,103,108,104,95,109,107,96,97,100,101,102,103,104,100,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,102,100,108,104,108,95,109,107,96,96,108,95,100,102,103,108,95,100,101,102,103,102,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,95,109,96,109,107,96,107,108,108,108,95,101,108,95,101,108,95,101,101,97,102,0,116,0,116,0,0,0,112,116,113,115,114,112,116,113,115,114,112,112,112,112,112,112,116,113,115,114,112,116,113,115,114,112,112,116,113,115,114,112,112,112,112,112,113,114,112,116,113,115,114,112,112,114,116,113,115,114,112,116,113,115,114,112,112,113,115,114,112,114,112,116,113,115,114,112,116,113,115,114,112,116,113,115,114,112,116,113,115,114,112,114,114,113,114,114,114,114,115,86,86,0,86,0,86,86,86,86,86,86,0,86,86,86,86,68,68,86,86,86,86,0,0,0,0,118,118,118,118,118,118,118,118,118,122,118,122,118,118,118,118,118,118,122,118,122,118,122,118,122,118,118,118,118,122,118,122,118,118,118,122,118,118,122,122,118,122,118,118,118,118,118,122,122,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,122,118,122,118,118,122,118,118,118,118,118,122,118,122,122,122,122,122,122,122,122,122,122,122,118,118,118,0,0,0,0,0,0,132,135,132,135,132,132,132,132,132,132,132,135,132,135,132,0,135,135,132,135,135,132,135,135,132,135,132,135,132,132,132,132,135,135,135,132,132,132,132,132,135,132,132,135,132,135,132,132,135,132,145,0,145,145,0,0,0,0,145,144,145,141,143,142,141,143,144,145,142,141,143,144,145,141,143,144,145,144,145,144,144,145,145,145,142,141,143,144,145,142,141,143,144,145,144,145,142,141,143,144,145,144,145,144,144,144,145,145,145,141,143,142,144,145,142,141,143,144,145,143,141,143,144,145,142,141,143,144,145,142,141,143,144,145,142,142,142,144,0,142,141,142,141,143,144,141,143,142,141,143,144,145,141,141,143,144,145,142,141,143,144,145,142,141,143,144,145,142,141,143,144,145,141,143,144,142,141,143,144,145,141,141,143,141,143,141,143,141,143,141,143,141,143,0,150,0,150,0,150,150,0,0,0,0,150,0,150,150,0,149,150,151,152,153,154,147,148,147,149,150,151,152,153,154,148,147,149,150,151,152,153,154,149,150,151,152,153,154,149,150,151,152,153,154,149,149,150,150,151,151,152,152,153,153,154,154,149,149,149,150,154,148,147,149,150,151,152,153,154,148,147,149,150,151,152,153,154,149,150,151,152,153,154,154,148,147,149,150,151,152,153,154,154,148,149,150,151,152,153,154,149,149,149,150,150,150,151,151,151,152,152,152,153,153,153,154,154,154,148,147,149,150,151,152,153,154,148,147,149,150,151,152,153,154,154,148,149,150,151,152,153,154,148,147,149,150,151,152,153,154,148,147,149,150,151,152,153,154,154,154,149,154,154,147,154,149,149,150,151,152,153,154,147,149,149,150,151,152,153,154,149,148,147,149,150,151,152,153,154,148,147,149,150,151,152,153,154,151,152,153,148,147,149,150,151,152,153,154,148,147,149,150,151,152,153,154,147,147,147,147,148,149,148,0,0,0,0,0,0,0,0,0,0,163,163,163,163,163,163,163,163,0,163,163,165,163,163,163,0,163,163,0,0,0,0,0,168,169,0,67,168,169,168,169,168,169,168,169,168,169,169,168,169,168,169,168,169,168,169,168,67,168,168,169,168,169,168,168,168,168,168,169,168,169,168,169,168,169,168,169,169,168,169,167,169,168,168,168,168,169,168,169,168,169,168,169,168,169,169,0,0,0,11,14,11,14,11,11,11,0,0,0,0,0,0,0,0],"f":"``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{j}}}j}{{{b{l}}}l}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}0``{{}l}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{j}}}Ab}{c{{A`{l}}}Ab}{nf}0`{{{b{j}}{b{j}}}Ad}{{{b{l}}{b{l}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000`{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{{{b{j}}{b{hAn}}}B`}{{{b{l}}{b{hAn}}}B`}{cc{}}0{{{b{j}}{b{hc}}}fBb}{{{b{l}}{b{hc}}}fBb}``{{}n}0{ce{}{}}0`````{cAfBd}{cAlBf}{{{b{hBh}}}{{Aj{{Bl{Bj}}}}}}````````{{{b{j}}c}A`Bn}{{{b{l}}c}A`Bn}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}000`{{{b{c}}}C`{}}0`88{{{b{Cb}}Ahc}{{Aj{f}}}Bf}````````{{{b{c}}d}f{}}{{{b{h{Cd{c}}}}}{{Aj{Cf}}}{BdCh}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00{{{b{Cj}}}Cj}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}0{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{nf}00{{{b{Cj}}{b{Cj}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00{{{Cd{c}}}{{Aj{Ah}}}{BdCh}}{{{b{h{Cl{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{Cj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}00{{{b{Cj}}{b{hc}}}fBb}{{}n}00{ce{}{}}00{c{{Cd{c}}}{BdCh}}{c{{Cl{c}}}Bf}{{{b{h{Cd{c}}}}}{{Aj{D`}}}{BdCh}}{{{Cd{c}}Ad}{{Cd{c}}}{BdCh}}{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}00000{{{b{c}}}C`{}}00777{{{Cd{c}}{Bl{{Dd{Db}}}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}{Bl{Cj}}}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{n}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}Db}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{{Dd{n}}}}}{{Cd{c}}}{BdCh}}```{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{E`{Dj{Dn{Dl}}}}}}}}{{{b{Eb}}}Eb}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}Dj}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{{{b{Eb}}{b{Ed}}{b{hc}}}{{Aj{f}}}{EfEh}}{{{b{hEj}}}f}{nf}00{{{b{Dj}}{b{Dj}}}Ad}{{{b{hc}}e}{{A`{{b{hg}}El}}}{}En{}}`{{{b{hEj}}}{{F`{f}}}}{{{b{Dj}}{b{hAn}}}B`}{{{b{Eb}}{b{hAn}}}B`}{cc{}}00{{{b{Fb}}}{{Aj{Dj}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{Ff{n}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Fd}}}}}}{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{Dd{Db}}}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fj}}}}{{}n}00{ce{}{}}00{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Ej}}}}{{{b{Df}}}{{Aj{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}Ed}{{Aj{Ej}}}}{Db{{Aj{Ed}}}}``{{{b{hc}}e}{{A`{{b{hg}}El}}}{}En{}}`{{{b{hc}}i}{{A`{gEl}}}{}{}{}{{Fn{{b{he}}}{{Fl{g}}}}}}{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}00000{{{b{c}}}C`{}}00:::{{{b{hEj}}{b{{Fh{G`}}}}}{{F`{n}}}}{{{b{hc}}e}{{A`{nEl}}}{}Gb}``````````````````````````````````````````````````````{{{b{c}}d}f{}}000{{{b{Gd}}}{{b{Df}}}}{{{b{Gf}}}{{b{Df}}}}{{{b{Gh}}}{{b{Df}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Dh}}{b{Df}}}{{Aj{{`{Dl}}}}}}00{{{b{Gd}}}Gd}{{{b{Dh}}}Dh}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{c}}{b{he}}}f{}{}}000{{{b{c}}}f{}}000000{{}Dh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Gd}}}Ab}{c{{A`{Dh}}}Ab}{c{{A`{Gf}}}Ab}{c{{A`{Gh}}}Ab}{nf}0000{{{b{Gd}}{b{Gd}}}Ad}{{{b{Dh}}{b{Dh}}}Ad}{{{b{Gj}}{b{Gj}}}Ad}{{{b{Gf}}{b{Gf}}}Ad}{{{b{Gh}}{b{Gh}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000000`{{{b{Gd}}{b{hAn}}}{{A`{fCn}}}}{{{b{Dh}}{b{hAn}}}B`}{{{b{Gf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Gh}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000{{{b{Df}}}{{A`{Gd}}}}{{{b{Df}}}{{A`{Gjc}}}{}}{{{b{Df}}}{{A`{Gf}}}}{{{b{Df}}}{{A`{Gh}}}}{{{b{Df}}g}{{Aj{Dh}}}{{Gl{Df}}}{{Gn{Db}}}{{Hb{}{{H`{{E`{ce}}}}}}}}{{{b{Gd}}{b{hc}}}fBb}{{{b{Dh}}{b{hc}}}fBb}{{{b{Gf}}{b{hc}}}fBb}{{{b{Gh}}{b{hc}}}fBb}{{}n}0000{ce{}{}}0000`{{{b{Gd}}c}A`Bn}{{{b{Dh}}c}A`Bn}{{{b{Gf}}c}A`Bn}{{{b{Gh}}c}A`Bn}{{{b{c}}}e{}{}}000{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000077777{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gdc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gfc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Ghc}}}}}}}}{{Dhn}Dh}`````````````````{{{b{c}}d}f{}}0000{{{Hd{c}}{Bl{{Dn{Hf}}}}}{{Hd{c}}}Hh}{{{Hd{{Hj{Hh}}}}{Bl{Hl}}}{{Aj{Hn}}}}{{{b{h{Hd{c}}}}}{{Aj{I`}}}Hh}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000``{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{{b{c}}{b{he}}}f{}{}}0000{{{b{c}}}f{}}00000``{{{b{Il}}G`{Bl{G`}}{Bl{{b{Ih}}}}G`Ad}{{Aj{n}}}}`{{}Ib}{{}Id}{{}If}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{Ib}}}Ab}{c{{A`{Id}}}Ab}{c{{A`{If}}}Ab}{c{{A`{Ih}}}Ab}{c{{A`{Ij}}}Ab}{nf}0000000```{{{b{Ib}}{b{Ib}}}Ad}{{{b{Id}}{b{Id}}}Ad}{{{b{If}}{b{If}}}Ad}{{{b{Ih}}{b{Ih}}}Ad}{{{b{Ij}}{b{Ij}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000000000{{{Hd{c}}}{{Aj{Ah}}}Hh}{{{b{Ib}}{b{hAn}}}B`}{{{b{Id}}{b{hAn}}}B`}{{{b{If}}{b{hAn}}}B`}{{{b{Ih}}{b{hAn}}}B`}{{{b{Ij}}{b{hAn}}}B`}{cc{}}000000{{{b{Df}}}Ih}1{{{b{Ib}}}{{Dn{Id}}}}`{{{b{Ib}}{b{hc}}}fBb}{{{b{Id}}{b{hc}}}fBb}{{{b{If}}{b{hc}}}fBb}{{{b{Ih}}{b{hc}}}fBb}{{{b{Ij}}{b{hc}}}fBb}```{{}n}0000000{ce{}{}}0000000{{Ibc}{{Hd{c}}}Hh}{{{b{{Fh{G`}}}}}Ad}`{{Ibc}Ib{{In{Id}{{Fl{Id}}}}}}```{c{{Hd{c}}}Hh}<{DbIh}{G`Ih}{{{b{hI`}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{hHn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}`````````````{{{b{Ib}}c}A`Bn}{{{b{Id}}c}A`Bn}{{{b{If}}c}A`Bn}{{{b{Ih}}c}A`Bn}{{{b{Ij}}c}A`Bn}``{{{b{c}}}e{}{}}0000`{c{{A`{e}}}{}{}}000000000000000{{Ib{Bl{Il}}}{{Aj{{Hd{J`}}}}}}`{{{b{c}}}C`{}}0000000{{{b{hIb}}{b{Jb}}}f}{ce{}{}}0000000{{Ibn}Ib}{{Ib{Bl{{Dn{{Fh{Db}}}}}}}Ib}{{Id{Bl{c}}}Id{{Gn{Ih}}}}{{IdAd}Id}{{Ib{Bl{{Dn{{Dd{Jd}}}}}}}Ib}{{IdIf}Id}{{IdG`}Id}{{IbAd}Ib}0{{Ib{Bl{n}}}Ib}1500{{Id{Bl{Ij}}}Id}{{IbId}Ib}{{Ib{Bl{c}}}Ib{{Gn{Il}}}}{{Ib{Bl{{Dn{{Dd{n}}}}}}}Ib}{{Id{Bl{G`}}}Id}66{{Ib{Bl{j}}}Ib}>{{Ib{Bl{Hl}}}Ib}09??<<`````````````````````{{{b{hJf}}{b{{Fh{G`}}}}AdAdAd}{{Aj{f}}}}{{{b{hJf}}Ad}f}{{{b{c}}}{{b{e}}}{}{}}000{{{b{hc}}}{{b{he}}}{}{}}000{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{Jf}}}Jd}{cc{}}000{{}n}000{{{b{{Fh{n}}}}n{b{D`}}{Bl{G`}}IfAd}{{Aj{{Dd{Jf}}}}}}{ce{}{}}000{Jf{{Aj{Jh}}}}{c{{A`{e}}}{}{}}0000000{{{b{c}}}C`{}}0003333````{{{b{c}}d}f{}}=<{{{b{Jb}}}Jb}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}Jb}?>={{{b{{Jj{Jd}}}}}Jd}{{{b{Jb}}{b{hAn}}}B`}={{{b{Jb}}}n}{{{b{Jb}}}Hl}{{{b{Df}}AdAd}Jd}{{{b{Jl}}G`{Bl{n}}Ad{Bl{{b{D`}}}}nn{Bl{{b{Ih}}}}{Bl{G`}}G`{Bl{{b{Ij}}}}AdAd{b{h{Bl{n}}}}Ad}{{Aj{{E`{D`nn}}}}}}{{}n}?{{{b{c}}}e{}{}}>{{{b{Jl}}{b{Ib}}}{{Aj{Jb}}}}?>{ce{}{}}{{JbHl}Jb}`````````???`{{{Jn{c}}{b{D`}}}{{Aj{{K`{c}}}}}Bf}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Kb}}}Kb}{{{b{Kd}}}Kd}{{{b{Kf}}}Kf}{{{b{c}}{b{he}}}f{}{}}00{{{b{c}}}f{}}000``{{}Kb}{{}Kd}{{}Kf}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Kb}}}Ab}{c{{A`{Kd}}}Ab}{c{{A`{Kf}}}Ab}{nf}0000{{{b{Kb}}{b{Kb}}}Ad}{{{b{Kd}}{b{Kd}}}Ad}{{{b{Kf}}{b{Kf}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000{{{b{h{Jn{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{K`{c}}}}}{{Aj{f}}}Bf}``{{{b{Kb}}{b{hAn}}}B`}{{{b{Kd}}{b{hAn}}}B`}{{{b{Kf}}{b{hAn}}}B`}{cc{}}0000{{{b{Kb}}{b{hc}}}fBb}{{{b{Kd}}{b{hc}}}fBb}{{{b{Kf}}{b{hc}}}fBb}{{{Jn{c}}Ad}{{Jn{c}}}Bf}`0`{{}n}0000{ce{}{}}0000``{{{Jn{c}}n}{{Jn{c}}}Bf}{c{{Jn{c}}}Bf}````{{{b{Kb}}c}A`Bn}{{{b{Kd}}c}A`Bn}{{{b{Kf}}c}A`Bn}``{{{b{c}}}e{}{}}00{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000088888{{{Jn{c}}Kh}{{Jn{c}}}Bf}{{{Jn{c}}{Bl{Db}}}{{Jn{c}}}Bf}0{{{Jn{c}}{Bl{n}}}{{Jn{c}}}Bf}{{{Jn{c}}{Bl{Ad}}}{{Jn{c}}}Bf}{{{Jn{c}}Db}{{Jn{c}}}Bf}0{{{Jn{c}}G`}{{Jn{c}}}Bf}{{{Jn{c}}Kf}{{Jn{c}}}Bf}15{{{b{h{K`{c}}}}{b{Ah}}}{{Aj{f}}}Bf}```{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}Kj}{{}n}{{{b{{Fh{{Dn{Df}}}}}}{Bl{{b{Dh}}}}}{{Aj{{Dd{{Dn{Kl}}}}}}}}{ce{}{}}{c{{A`{e}}}{}{}}0{{{b{Kl}}}{{Aj{J`}}}}0{{{b{c}}}C`{}}{{{b{Kl}}Kj}f}{{{b{Kl}}}{{b{{Dn{Df}}}}}}5`````````````{{{b{c}}d}f{}}000{{{b{h{Kn{c}}}}}{{Aj{Cf}}}Bd}{{{L`{c}}{b{D`}}}{{Aj{{Lb{c}}}}}Bf}{{{L`{c}}{b{D`}}}{{Aj{{`{c}}}}}{LdEhLf}}{{{b{c}}}{{b{e}}}{}{}}0000000000{{{b{hc}}}{{b{he}}}{}{}}0000000000{{{b{Lh}}}Lh}{{{b{Lj}}}Lj}{{{b{Ll}}}Ll}{{{b{Ln}}}Ln}{{{b{c}}{b{he}}}f{}{}}000{{{b{c}}}f{}}00000`{{{b{M`}}{Bl{{b{Mb}}}}}{{Aj{Md}}}}{{{b{M`}}{Bl{{b{Mb}}}}LjAd}{{Aj{Ah}}}}{{}Mf}{{}Lj}{{}Ll}{{}Ln}{n{{b{c}}}{}}0000000000{n{{b{hc}}}{}}0000000000{c{{A`{Lh}}}Ab}{c{{A`{Ll}}}Ab}{c{{A`{Ln}}}Ab}{nf}0000000000{{{b{Lh}}{b{Lh}}}Ad}{{{b{Ll}}{b{Ll}}}Ad}{{{b{Ln}}{b{Ln}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000{{{Mh{c}}}{{Aj{Ah}}}Hh}{{{Kn{c}}}{{Aj{Ah}}}Bd}{{{b{h{Mj{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{L`{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Lb{c}}}}}{{Aj{f}}}Bf}{{{Mh{c}}{Bl{{Dn{Hf}}}}Ad}{{Aj{Ah}}}Hh}{{{b{Lh}}{b{hAn}}}B`}{{{b{Ll}}{b{hAn}}}B`}{{{b{Ln}}{b{hAn}}}B`}{cc{}}0000000000{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{M`}}}}{{{b{Lh}}{b{hc}}}fBb}{{{b{Ll}}{b{hc}}}fBb}{{{b{Ln}}{b{hc}}}fBb}{{}n}0000000000{ce{}{}}0000000000``{{{Mh{c}}{Bl{Il}}}{{Mh{c}}}Hh}{{{b{M`}}}{{Aj{Mb}}}}{c{{Mh{c}}}Hh}{c{{Kn{c}}}Bd}{c{{Mj{c}}}Bf}{{}Mf}{c{{L`{c}}}Bf}{c{{L`{c}}}{LdEhLf}}{{{b{h{Mh{c}}}}}{{Aj{Ml}}}Hh}{{{b{h{Kn{c}}}}}{{Aj{D`}}}Bd}{{{b{Lh}}c}A`Bn}{{{b{Ll}}c}A`Bn}{{{b{Ln}}c}A`Bn}{{{Mh{c}}Ad}{{Mh{c}}}Hh}{{{Kn{c}}Ad}{{Kn{c}}}Bd}{{{b{c}}}e{}{}}000{{{b{Ll}}c}{{L`{c}}}Bf}{c{{A`{e}}}{}{}}000000000000000000000{{{b{c}}}C`{}}0000000000{ce{}{}}0000000000{{{Mh{c}}{Bl{{Dd{Db}}}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{{Dd{Db}}}}}{{Kn{c}}}Bd}{{{Mj{c}}Mn}{{Mj{c}}}{}}{{{L`{c}}Mn}{{L`{c}}}Bf}{{{Mj{c}}{Bl{Ln}}}{{Mj{c}}}{}}{{Mf{Bl{Ln}}}Mf}{{{L`{c}}{Bl{Ln}}}{{L`{c}}}Bf}{{MfIl}Mf}{{{Mh{c}}{Bl{{Dd{Jh}}}}}{{Mh{c}}}Hh}{{{Mh{c}}{Bl{{E`{{Dn{Df}}{Dn{Df}}}}}}}{{Mh{c}}}Hh}{{{Mh{c}}{Bl{n}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{n}}}{{Kn{c}}}Bd}{{Ljc}Lj{{Gn{{Bl{{Dn{Hf}}}}}}}}{{{Mh{c}}{Bl{{Dd{n}}}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{{Dd{n}}}}}{{Kn{c}}}Bd}{{Lj{Bl{{Dn{{Fh{Db}}}}}}}Lj}{{{Mh{c}}{Bl{j}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{j}}}{{Kn{c}}}Bd}{{Ljc}Lj{{Gn{{Bl{j}}}}}}{{Ljc}Lj{{Gn{{Bl{n}}}}}}{{{b{h{Lb{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{Ll}}Ahc}{{Aj{f}}}Bf}```````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{N`}}}N`}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}0{{}N`}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{N`}}}Ab}{nf}0000{{{b{N`}}{b{N`}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00{{{b{h{Nb{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{Nd{c}}}{{Aj{Ah}}}Hh}{{{b{N`}}{b{hAn}}}B`}{cc{}}0000{{{b{N`}}{b{hc}}}fBb}{{{Nd{c}}{Bl{Kh}}}{{Nd{c}}}Hh}{{}n}0000{ce{}{}}0000`{c{{Nb{c}}}Bf}{c{{Nf{c}}}Bf}{c{{Nd{c}}}Hh}{{{b{N`}}c}A`Bn}{{{Nd{c}}Ad}{{Nd{c}}}Hh}{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000088888{{{Nd{c}}Kh}{{Nd{c}}}Hh}4{{{Nb{c}}Nh}{{Nb{c}}}Bf}{{{Nd{c}}Nh}{{Nd{c}}}Hh}{{{Nd{c}}{Bl{{Dd{Db}}}}}{{Nd{c}}}Hh}{{{Nd{c}}Hl}{{Nd{c}}}Hh}{{{Nd{c}}{b{D`}}}{{Nd{c}}}Hh}{{{b{h{Nf{c}}}}{b{Ah}}}{{Aj{f}}}Bf}`````{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{n{{b{c}}}{}}{{{b{Jl}}}{{b{{Fh{G`}}}}}}{n{{b{hc}}}{}}{nf}{{{b{J`}}}{{Aj{f}}}}{cc{}}{{{b{hc}}}JlHh}{{}n}{ce{}{}}{{{b{Hh}}}{{Bl{{b{{Fh{G`}}}}}}}}{{{b{Hh}}}{{Bl{{b{J`}}}}}}{c{{A`{e}}}{}{}}0{{{b{c}}}C`{}}4`{{{b{hc}}{Bl{Kh}}}{{Aj{D`}}}Nj}``{{{b{c}}d}f{}}{{{b{Nl}}n}{{E`{NlNl}}}}{Nl{{Dn{Nn}}}}{cNl{{Hb{}{{H`{{Bl{f}}}}}}}}{cNl{{Hb{}{{H`{f}}}}}}{{O`c}Nl{{Hb{}{{H`{{Bl{f}}}}}}}}{{O`c}Nl{{Hb{}{{H`{f}}}}}}{{{b{Nl}}}{{b{Ob}}}}{{{b{hNl}}}{{b{hOb}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{Nl{{Hj{Nn}}}}{{{b{Nl}}n}Ad}{{{b{Nl}}}Nl}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{{Od{c}}}{{Aj{n}}}Hh}{{{b{Nl}}}{{b{O`}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{Nl}}{b{{b{Nn}}}}}Ad}{{{b{Nl}}{b{Nl}}}Ad}{{{b{Nl}}}{{b{{Fh{Of}}}}}}{{{Od{c}}}{{Aj{Ah}}}Hh}{{{b{Nl}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{OhNl}1{OjNl}{c{{Aj{{Od{J`}}}}}{{Gn{Il}}}}{{nO`}Nl}{{{b{O`}}}{{b{{Fh{Of}}}}}}{{{Od{c}}{Bl{Kh}}}{{Od{c}}}Hh}{{}n}0{ce{}{}}0{Nl{{E`{{Dd{Of}}{Dd{{Hj{Nn}}}}{Bl{Ol}}}}}}{{{b{Nl}}}}{{{b{Nl}}}{{A@d{{Dd{{Hj{On}}}}A@`A@b}}}}{{{b{Nl}}}n}{{{Od{c}}Ad}{{Od{c}}}Hh}{c{{Od{c}}}Hh}{{O`{Dd{{Hj{Nn}}}}{Bl{Ol}}}Nl}{O`Nl}{{O`n}Nl}{{{b{Nl}}}Nl}{{{b{hNl}}{Bl{Ol}}}f}{{{b{hNl}}nn}f}0{{{b{c}}nn}e{}{}}011{{Nlnn}Nl}0{{{b{Nl}}n}{{E`{{Hj{Nn}}{Hj{Nn}}}}}}0{{{b{hNl}}}{{Bl{Ol}}}}{{{b{Nl}}}{{Hj{Nn}}}}{{{b{c}}}e{}{}}{{{b{Nl}}{b{Nl}}}Ol}{{{b{Nl}}b}Ol}10{e{{A`{Nlc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{e{{A`{Nlc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{{O`e}{{A`{Nlc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{{O`e}{{A`{Nlc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{c{{A`{e}}}{}{}}000{{O`{Dd{{Hj{Nn}}}}{Bl{Ol}}}{{A`{NlA@f}}}}{{{b{c}}}C`{}}0{{{b{Nl}}}{{Bl{{b{Ol}}}}}}0{{{b{Nl}}}{{b{{Fh{{Hj{Nn}}}}}}}}{{{b{Nl}}}A@`}{ce{}{}}0{{{Od{c}}{Bl{Kh}}}{{Od{c}}}Hh}{{{Od{c}}Ad}{{Od{c}}}Hh}{{{Od{c}}{Bl{n}}}{{Od{c}}}Hh}0{{{Od{c}}{Bl{e}}}{{Od{c}}}Hh{{Gn{Il}}}}{{{Od{c}}{Bl{{Dn{Hf}}}}}{{Od{c}}}Hh}{{{Od{c}}{Bl{{Dn{{Fh{Db}}}}}}}{{Od{c}}}Hh}4{{{Od{c}}{Bl{{b{hj}}}}}{{Od{c}}}Hh}{{{Od{c}}Hl}{{Od{c}}}Hh}{{{Od{c}}{b{D`}}}{{Od{c}}}Hh}{{Nl{Bl{Ol}}}Nl}{{{b{Nl}}{Bl{Ol}}}{{Hj{Nn}}}}1``````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{A@h}}}A@h}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{{b{A@h}}n}A@j}``{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{{{b{Of}}{b{A@l}}}{{A`{A@nA@f}}}}`{nf}0{{{b{A@n}}{b{A@n}}}Ad}{{{b{A@n}}{b{hAn}}}{{A`{fCn}}}}{{{b{A@h}}{b{hAn}}}{{A`{fCn}}}}{AA`A@n}{cc{}}0{{}n}0{ce{}{}}0{A@hAAb}{{{b{A@h}}}{{b{{Bl{{Dd{AAd}}}}}}}}``````{{{b{A@h}}}{{b{AAf}}}}`{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}0{AAb{{A`{A@hAAh}}}}11{{{b{c}}}C`{}}0`77`````````{{{b{c}}d}f{}}0{{{AAj{c}}n}{{Aj{AAl}}}Hh}{{AAnn}{{Aj{AAl}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{AAj{c}}{b{Cf}}}{{Aj{{AAj{c}}}}}Hh}{{AAn{b{Cf}}}{{Aj{AAn}}}}{{{b{AB`}}}AB`}{{{b{ABb}}}ABb}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}000{{}ABb}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{AB`}}}Ab}{c{{A`{ABb}}}Ab}{nf}0000{{{b{AB`}}{b{AB`}}}Ad}{{{b{ABb}}{b{ABb}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000{{{AAj{c}}}{{Aj{Ah}}}Hh}{AAn{{Aj{Ah}}}}{{{b{AAl}}n}Ad}{{{b{AB`}}{b{hAn}}}B`}{{{b{ABb}}{b{hAn}}}B`}{cc{}}0000{{{b{Df}}{Bl{{b{Dh}}}}{Bl{ABd}}}{{Aj{AAn}}}}{{{b{h{AAj{c}}}}}{{Aj{{b{ABd}}}}}Hh}{{{b{hAAn}}}{{Aj{{b{ABd}}}}}}{{{b{AB`}}{b{hc}}}fBb}{{{b{ABb}}{b{hc}}}fBb}{{}n}0000{ce{}{}}0000{{{b{AAl}}}Ad}`0`{{{Bl{{b{{Fh{n}}}}}}{b{Cf}}{Bl{{b{{Fh{Jh}}}}}}{Bl{{b{j}}}}}Ah}`{c{{AAj{c}}}Hh}{{{b{hAAl}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{h{AAj{c}}}}}{{Aj{n}}}Hh}{{{b{hAAn}}}{{Aj{n}}}}`{{{AAj{c}}ABb}{{AAj{c}}}Hh}{{AAnABb}AAn}{{{b{AAl}}}{{b{Ml}}}}{{{b{h{AAj{c}}}}}{{Aj{Ml}}}Hh}{{{b{hAAn}}}{{Aj{Ml}}}}{{{b{AB`}}c}A`Bn}{{{b{ABb}}c}A`Bn}{{{AAj{c}}Ad}{{AAj{c}}}Hh}0{{AAnAd}AAn}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000043`{ce{}{}}0000{{{AAj{c}}{Bl{{Dd{Db}}}}}{{AAj{c}}}Hh}{{{AAj{c}}{Bl{{Dd{Jh}}}}}{{AAj{c}}}Hh}{{AAn{Bl{{Dd{Jh}}}}}AAn}{{{AAj{c}}{Bl{{E`{{Dn{Df}}{Dn{Df}}}}}}}{{AAj{c}}}Hh}{{AAn{Bl{{E`{{Dn{Df}}{Dn{Df}}}}}}}AAn}{{{AAj{c}}{Bl{n}}}{{AAj{c}}}Hh}{{AAn{Bl{n}}}AAn}{{{AAj{c}}{Bl{{Dn{Hf}}}}}{{AAj{c}}}Hh}{{AAn{Bl{{Dn{Hf}}}}}AAn}{{{AAj{c}}{Bl{{Dd{n}}}}}{{AAj{c}}}Hh}{{AAn{Bl{{Dd{n}}}}}AAn}{{{AAj{c}}{Bl{j}}}{{AAj{c}}}Hh}{{AAn{Bl{j}}}AAn}````````````````{{{b{c}}d}f{}}00000{{{ABf{c}}{b{D`}}}{{Aj{{ABh{c}}}}}Bf}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000{{{b{ABj}}}ABj}{{{b{ABl}}}ABl}{{{b{ABn}}}ABn}{{{b{AC`}}}AC`}{{{b{ACb}}}ACb}{{{b{ACd}}}ACd}{{{b{c}}{b{he}}}f{}{}}00000{{{b{c}}}f{}}00000000000``{{}ABj}{{}ABl}{{}ACd}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{ABj}}}Ab}{c{{A`{ABl}}}Ab}{c{{A`{ABn}}}Ab}{c{{A`{AC`}}}Ab}{c{{A`{ACb}}}Ab}{c{{A`{ACd}}}Ab}`{nf}00000009{{{b{{ABh{c}}}}{b{Ah}}}{{`{{ACh{}{{H`{{Aj{{ACf{A@f}}}}}}}}}}}Bf}{{{b{ABj}}{b{ABj}}}Ad}{{{b{ABl}}{b{ABl}}}Ad}{{{b{ABn}}{b{ABn}}}Ad}{{{b{AC`}}{b{AC`}}}Ad}{{{b{ACb}}{b{ACb}}}Ad}{{{b{ACd}}{b{ACd}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000000000000{{{b{{ABh{c}}}}}{{Aj{Kj}}}Bf}{{{ABf{c}}{b{hAh}}}{{Aj{Kj}}}Bf}{{{b{ABj}}{b{hAn}}}B`}{{{b{ABl}}{b{hAn}}}B`}{{{b{ABn}}{b{hAn}}}B`}{{{b{AC`}}{b{hAn}}}B`}{{{b{ACb}}{b{hAn}}}B`}{{{b{ACd}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000000{{}ACd}{{{b{{ABh{c}}}}}{{b{{ACl{{ACj{c}}}}}}}Bf}{{{b{ABj}}{b{hc}}}fBb}{{{b{ABl}}{b{hc}}}fBb}{{{b{ABn}}{b{hc}}}fBb}{{{b{AC`}}{b{hc}}}fBb}{{{b{ACb}}{b{hc}}}fBb}{{{b{ACd}}{b{hc}}}fBb}{{}n}0000000{ce{}{}}0000000{{{b{ACd}}}Ad}0```{c{{ABf{c}}}{BfBf}}``{{{b{ABj}}c}A`Bn}{{{b{ABl}}c}A`Bn}{{{b{ABn}}c}A`Bn}{{{b{AC`}}c}A`Bn}{{{b{ACb}}c}A`Bn}{{{b{ACd}}c}A`Bn}{{{ABf{c}}Ad}{{ABf{c}}}Bf}`{{{b{c}}}e{}{}}00000{{{b{ABj}}c}{{ABf{c}}}Bf}{c{{A`{e}}}{}{}}000000000000000{G`{{Aj{ABn}}}}{ACn{{Aj{AC`}}}}{AD`{{Aj{ACb}}}}{{{b{c}}}C`{}}0000000{ce{}{}}0000000{{{ABf{c}}ABl}{{ABf{c}}}Bf}{{{ABf{c}}{Bl{n}}}{{ABf{c}}}Bf}0{{{ABf{c}}ACd}{{ABf{c}}}Bf}{{{b{h{ABh{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{ABj}}Ahc}{{Aj{f}}}Bf}{{{b{{ABh{c}}}}{Dd{{ACf{A@f}}}}}{{Aj{f}}}Bf}{{{b{hAh}}{b{ADb}}{b{{Fh{c}}}}{b{e}}n}{{Aj{f}}}{{Gl{Df}}}{CbLfADd}}`{{{b{{Fh{Il}}}}Ad{Bl{{b{Dh}}}}}{{Aj{{Dn{{Fh{Il}}}}}}}}{{{b{{Fh{Il}}}}Ad{Bl{{b{Dh}}}}Ad}{{Aj{{E`{{Dn{{Fh{Il}}}}n}}}}}}{{{b{{Fh{c}}}}{b{{Fh{c}}}}}Ad{{Gl{ADb}}}}{{{b{{Fh{G`}}}}}{{Bl{n}}}}{cAd{{Gl{ADb}}}}{{{b{ADb}}}Il}``{{{b{ADf}}c}{}ADh}{{{b{ADf}}c}{}{ADhLf}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}{{b{ADf}}}}{{}n}{ce{}{}}{{{b{ADj}}}Kj}{{{b{ADf}}c}ADl{ADhLf}}{c{{A`{e}}}{}{}}0{{ACne}{}ADh{{Fn{}{{Fl{c}}}}}}{{{b{c}}}C`{}}51````{{{b{c}}d}f{}}0{{{b{hAh}}{Bl{{b{Hf}}}}Ad}{{Aj{f}}}}{{{b{Hf}}}{{Bl{{b{ADn}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{AE`}}}AE`}{{{b{AEb}}}AEb}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}0{{{b{AEb}}}{{b{{Fh{AE`}}}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{AE`}}}Ab}{c{{A`{AEb}}}Ab}{nf}0{{{b{AE`}}}{{b{Jd}}}}{{{b{Hf}}{b{Ah}}}{{Aj{Jh}}}}{{{b{AE`}}}{{b{AEd}}}}{{{b{AE`}}{b{hAn}}}B`}{{{b{AEb}}{b{hAn}}}B`}{cc{}}0{JhAE`}{AEfAE`}{{{b{AE`}}}{{Bl{{b{Jh}}}}}}00{{{b{AEb}}{b{Df}}}{{Aj{{b{AE`}}}}}}{{}n}0{ce{}{}}0{{AEf{Bl{Jh}}{Bl{Jh}}{Bl{Jh}}}AE`}{{Hl{Dd{AE`}}{Bl{n}}}AEb}{{{b{AE`}}}{{Bl{n}}}}{{{b{AEb}}}{{Bl{n}}}}{{{b{AEb}}}{{b{Hl}}}}{{{b{AE`}}c}A`Bn}{{{b{AEb}}c}A`Bn}{{{b{ADn}}{b{AEb}}}{{Aj{Ad}}}}{{{b{hAEb}}{b{{Fh{n}}}}}f}<<{{{b{AE`}}}{{Bl{Jh}}}}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}000{{{b{c}}}C`{}}0=={{{b{hAEb}}Hl}f}```{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{cAfBd}{cAlBf}{{AfAd}Af}00`````{{{b{hc}}}{{Aj{Jl}}}{BdHhAEh}}{{cn}{{Dd{{E`{nn}}}}}{{ACh{}{{H`{n}}}}}}{{{Bl{{b{{Fh{Db}}}}}}{b{D`}}{Bl{{b{{Fh{Jh}}}}}}Ad}{{Bl{{Dd{n}}}}}}","D":"CM`","p":[[1,"reference"],[5,"Private",1960],[1,"unit"],[0,"mut"],[5,"RowIndex",0,1961],[5,"HiveOptions",0,1961],[1,"usize"],[6,"Result",1962],[10,"Deserializer",1963],[1,"bool"],[10,"SerReader",1942,1964],[5,"DataFrame",1965],[8,"PolarsResult",1966],[10,"SerWriter",1942,1964],[5,"Formatter",1967],[8,"Result",1967],[10,"Hasher",1968],[10,"Read",1969],[10,"Write",1969],[10,"ArrowReader",0,1964],[8,"RecordBatch",1970],[6,"Option",1971],[10,"Serializer",1972],[5,"TypeId",1973],[10,"WriteDataFrameToFile",0,1964],[5,"AvroReader",86,1974],[5,"ArrowSchema",1975],[10,"Seek",1969],[6,"AvroCompression",86],[5,"AvroWriter",86,1976],[5,"Error",1967],[5,"Schema",1977],[5,"String",1978],[5,"Vec",1979],[1,"str"],[5,"CloudOptions",227],[5,"CloudLocation",154,1980],[10,"ObjectStore",1981],[5,"Arc",1982],[1,"tuple"],[5,"PolarsObjectStore",154,1983],[5,"Path",1984],[10,"AsyncWrite",1985],[10,"Unpin",1986],[5,"CloudWriter",154,1987],[5,"Error",1988],[10,"Command",1989],[8,"Result",1988],[5,"Url",1990],[5,"Bytes",1991],[5,"Range",1992],[1,"slice"],[5,"ObjectMeta",1981],[17,"Output"],[10,"FnOnce",1993],[1,"u8"],[10,"VarInt",1994],[6,"AmazonS3ConfigKey",227,1995],[6,"AzureConfigKey",227,1996],[6,"GoogleConfigKey",227,1997],[6,"CloudType",227],[10,"AsRef",1998],[10,"Into",1998],[17,"Item"],[10,"IntoIterator",1999],[5,"CsvReader",417,2000],[10,"PhysicalIoExpr",1875],[10,"MmapBytesReader",1289],[5,"Box",2001],[8,"SchemaRef",1977],[5,"OwnedBatchedCsvReader",417,2002],[5,"BatchedCsvReader",417,2002],[5,"CsvReadOptions",417,2003],[5,"CsvParseOptions",417,2003],[6,"CsvEncoding",417,2003],[6,"CommentPrefix",417,2003],[6,"NullValues",417,2003],[5,"PathBuf",2004],[10,"Fn",1993],[5,"File",2005],[5,"SchemaInferenceResult",755],[6,"DataType",2006],[6,"Buffer",678],[5,"Series",2007],[8,"PlHashSet",2008],[6,"ReaderBytes",1289],[5,"CsvWriter",782,2009],[5,"BatchedWriter",782,2009],[5,"CsvWriterOptions",782,2010],[5,"SerializeOptions",782,2010],[6,"QuoteStyle",782,2010],[8,"NonZeroUsize",2011],[1,"u64"],[5,"FileCacheEntry",928,2012],[5,"IpcStreamReader",949,2013],[5,"IpcWriter",949,2014],[5,"BatchedWriter",949,2014],[10,"AsyncWrite",2015],[10,"Send",1986],[5,"IpcScanOptions",949,2016],[5,"IpcReadOptions",949,2017],[5,"IpcWriterOptions",949,2014],[6,"IpcCompression",949,2014],[5,"IpcReaderAsync",949,2017],[5,"FileMetadata",2018],[1,"i64"],[5,"IpcStreamWriterOption",949,2013],[5,"IpcReader",949,2016],[5,"IpcStreamWriter",949,2013],[8,"ArrowSchemaRef",1975],[5,"CompatLevel",2006],[5,"JsonWriterOptions",1191],[5,"JsonWriter",1191],[5,"JsonReader",1191],[5,"BatchedWriter",1191],[6,"JsonFormat",1191],[10,"BufRead",1969],[5,"StructArray",1313,2019],[10,"Array",2020],[6,"ArrowDataType",2021],[10,"Any",1973],[5,"JsonLineReader",1313],[5,"Field",2022],[5,"GrowableStruct",2023],[5,"MutableStructArray",2024],[5,"Bitmap",2025],[10,"Scalar",2026],[5,"StructValueIter",2027],[5,"BitmapIter",2028],[6,"ZipValidity",2029],[6,"PolarsError",1966],[5,"FileMetaData",1420,2030],[6,"ColumnOrder",2031],[5,"RowGroupMetaData",2032],[5,"ParquetStatistics",1420],[5,"MutableStatistics",2033],[5,"FileMetaData",2034],[5,"KeyValue",2034],[5,"SchemaDescriptor",2035],[6,"ParquetError",2036],[5,"ParquetReader",1473,2037],[5,"BatchedParquetReader",1473,2038],[5,"ParquetAsyncReader",1473,2037],[5,"ParquetOptions",1473,2039],[6,"ParallelStrategy",1473,2039],[8,"FileMetaDataRef",1420],[5,"ParquetWriter",1616,2040],[5,"BatchedWriter",1616,2041],[5,"ParquetWriteOptions",1616,2042],[6,"ParquetCompression",1616,2042],[5,"GzipLevel",1616,2042],[5,"BrotliLevel",1616,2042],[5,"ZstdLevel",1616,2042],[5,"StatisticsOptions",1616,2043],[8,"RowGroupIterColumns",1616,2044],[10,"Iterator",2045],[5,"FileWriter",2046],[5,"Mutex",2047],[1,"u32"],[1,"i32"],[5,"Path",2004],[10,"Sync",1986],[5,"RuntimeManager",1854],[10,"Future",2048],[10,"GetSize",1854],[5,"JoinHandle",2049],[10,"StatsEvaluator",1875],[5,"ColumnStats",1875],[5,"BatchStats",1875],[8,"String",2050],[5,"Field",2051],[10,"Sized",1986],[5,"Utf8Field",678],[5,"CategoricalField",678],[5,"DatetimeField",678],[15,"Datetime",752]],"r":[[0,1964],[1,1961],[2,1961],[3,1964],[4,1964],[5,1964],[87,1974],[88,1976],[89,2052],[154,1980],[155,1987],[156,1983],[165,2053],[194,1980],[206,2053],[230,1995],[235,1996],[259,1997],[419,2002],[420,2003],[421,2003],[422,2003],[423,2003],[424,2000],[428,2003],[429,2002],[476,2054],[556,755],[575,2055],[783,2009],[784,2009],[785,2010],[789,2010],[790,2010],[928,2056],[929,2057],[930,2012],[937,2056],[939,2057],[949,2014],[950,2014],[951,2017],[952,2016],[953,2017],[954,2016],[955,2013],[956,2013],[957,2013],[958,2014],[959,2014],[1314,2019],[1420,2030],[1438,2033],[1474,2038],[1477,2039],[1478,2037],[1479,2039],[1480,2037],[1561,2058],[1616,2041],[1618,2042],[1620,2042],[1623,2042],[1624,2042],[1625,2040],[1626,2044],[1628,2043],[1631,2042],[1942,1964],[1943,1964],[1944,0],[1952,1846],[1953,2059],[1954,2059],[1955,2059],[1956,2059],[1957,2059],[1958,2059],[1959,2059]],"b":[[1318,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1319,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1320,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1321,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1341,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1342,"impl-PartialEq-for-StructArray"],[1347,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1349,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1369,"impl-StructArray"],[1370,"impl-Array-for-StructArray"],[1373,"impl-Array-for-StructArray"],[1374,"impl-StructArray"],[1386,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1387,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1388,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1389,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1397,"impl-StructArray"],[1398,"impl-Array-for-StructArray"],[1414,"impl-StructArray"],[1415,"impl-Array-for-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMAFrAAAAAEAAwARABcACAAhAAgAKwACADAABQA4AAAAOgACAD4AAgBDABMAXwAAAGEAGQB+AAMAhQABAIgADQCZAAAAngAGAKcADwC5AAIAvwADAMUAAgDNAAAA0AAAANUADgDqAAEA9gAAAAIBAQAFAQAAGgEQAC4BOABsAQMAcQEIAH8BHACkAQQArQEBALEBKwDeATcAFwIEACMCAAAlAhEAQQIAAEMCAgBKAisAdwIIAIECBwCZAgAApwISALsCFwDXAgQA4AIgAAIDAQAGAwAACAMGABADAAAYAxgAMwMhAFYDAABYAwIAYAMCAGQDAABmAwUAcgMCAHkDAwB+AxYAoQMHAKoDAgCuAwEAsgMEALgDAAC7AwAAvgMAAMADAADDAwMAyAMlAO8DNgAnBAMANgQOAFEEAABTBAYAXAQ1AJQEAQCaBAEAngQAAKEEAACkBAEApwQBAK4EJQDVBAAA2wQAAN0EBADpBBgABAUBAAoFAQANBQgAFwUBABoFCAAkBQEAJwUJADIFDQBBBQEARAUAAEYFAABIBQAASgUCAFAFAABSBQAAWwUDAGIFAQBlBQ0AdAUBAHcFAAB6BQEAfgUIAIgFAQCOBQAAkAUHAJsFAwChBQUAqQUBALcFAgC7BQMAwAUBAMMFAADGBQAAyAUAAMsFDQDaBScABwYJABYGAAAYBgMAHQYAAB8GAQAiBgEAJQYCACkGEgA+BgUARQYDAEoGAgBOBgAAUAYCAFQGAABWBgEAWQYAAFsGAQBeBgEAYQYuAJIGOwDQBgUA3gYPAPYGAQD5BgEA/AYAAP4GBQAGBykANQcBADgHAAA/BwIAQwcEAEkHAQBMBwAATgcFAFYHBABcBwkAZwcHAHEHAgB8BwEAhQcDAIwHDQCbBwAAnQcAAKEHBQCoBwAA"}],\
["polars_lazy",{"t":"CQCCCPPGPPPPPPPPPPPPPFPPPPPPPPKPGPPPPGFPPPFFPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPFPPPPPPPPPGPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPGPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPFPPPPPPPPKKPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPGPFPPPPPPPPPPPPPPPPPPPKPPPPFPPPPFPPGGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNNOONHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNHNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOIFKFFKFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOONNNOONNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNONNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNONNMNNOOOONNNNNOONNNOMNNCOONOONMNNOONNNNOOMNNOOONNNNNNONNNNNNNOONNNNNNONOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNOOOONONOOOOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","Operator","Or","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Slice","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZFill","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cast_with_options","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_expr","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","index_cols","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_between","is_column","is_column_selection","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","nth","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","ignore_nulls","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","clone_to_uninit","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","OptState","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_collect_post_opt","_with_eager","agg","allow_parallel","anonymous_scan","anti_join","apply","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cloud_options","cloud_options","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","coalesce","collect","collect_concurrently","comm_subexpr_elim","comm_subexpr_elim","comm_subplan_elim","comm_subplan_elim","concat_impl","concat_impl","concat_impl","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_no_validate","drop_nulls","eager","eager","explain","explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","file_caching","file_caching","fill_nan","fill_null","filter","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","full_join","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","head","hive_options","hive_options","how","include_file_paths","include_file_paths","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","into","into","into","into","into","into","into","into","into","into","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","map","map_python","max","mean","median","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","new_streaming","new_streaming","null_count","on","optimize","parallel","paths","paths","paths","pivot","predicate_pushdown","predicate_pushdown","profile","projection_pushdown","projection_pushdown","quantile","rechunk","rechunk","rechunk","rechunk","rechunk","rename","reverse","right_on","rolling","row_estimate","row_estimate","row_index","row_index","row_index","row_index","row_index","row_index","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema_with_arenas","select","select_seq","semi_join","set_cached_arena","shift","shift_and_fill","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","slice_pushdown","slice_pushdown","sort","sort_by_exprs","std","streaming","streaming","suffix","sum","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique","unique_stable","unnest","unpivot","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_cloud_options","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","with_ignore_errors","with_include_file_paths","with_infer_schema_length","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_new_streaming","with_null_values","with_optimizations","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","assert_cloud_eligible","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_page_size","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagonal","display","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_partitioned_ds","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_asof","is_constant_duration","is_full_days","is_valid_join","is_zero","join_nulls","label","lit","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","new","offset","offset","output_schema","parallel","parse","parsed_int","partial_cmp","period","period","predicate","rechunk","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_supertypes","to_writer","to_writer","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","weeks_only","with_coalesce","with_columns","with_suffix","write_df_to_file","write_df_to_file","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","hive_parts","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","right_on","scan_type","schema","slice","sort_options","version","data_type","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1534,"polars_lazy::dsl::AggExpr"],[1541,"polars_lazy::dsl::BooleanFunction"],[1544,"polars_lazy::dsl::Expr"],[1579,"polars_lazy::dsl::FunctionExpr"],[1624,"polars_lazy::dsl::StringFunction"],[1644,"polars_lazy::dsl::TemporalFunction"],[1646,"polars_lazy::dsl::binary"],[1666,"polars_lazy::dsl::cat"],[1667,"polars_lazy::dsl::dt"],[1723,"polars_lazy::dsl::function_expr"],[1940,"polars_lazy::dsl::function_expr::BooleanFunction"],[1943,"polars_lazy::dsl::function_expr::FunctionExpr"],[1988,"polars_lazy::dsl::function_expr::StringFunction"],[2008,"polars_lazy::dsl::function_expr::TemporalFunction"],[2010,"polars_lazy::dsl::function_expr::cat"],[2012,"polars_lazy::dsl::function_expr::pow"],[2016,"polars_lazy::dsl::function_expr::rolling"],[2049,"polars_lazy::dsl::function_expr::rolling_by"],[2081,"polars_lazy::dsl::function_expr::trigonometry"],[2125,"polars_lazy::dsl::functions"],[2200,"polars_lazy::dsl::python_udf"],[2246,"polars_lazy::dsl::string"],[2307,"polars_lazy::dsl::udf"],[2313,"polars_lazy::frame"],[2759,"polars_lazy::frame::pivot"],[2761,"polars_lazy::prelude"],[3385,"polars_lazy::prelude::DslPlan"],[3440,"polars_lazy::prelude::LiteralValue"],[3443,"dyn_clone::sealed"],[3444,"polars_plan::dsl::meta"],[3445,"polars_plan::dsl::expr"],[3446,"polars_error"],[3447,"core::result"],[3448,"polars_plan::dsl::array"],[3449,"polars_plan::dsl::list"],[3450,"core::convert"],[3451,"polars_plan::dsl::expr_dyn_fn"],[3452,"alloc::sync"],[3453,"polars_core::series"],[3454,"core::option"],[3455,"core::ops::function"],[3456,"core::marker"],[3457,"polars_plan::plans::visitor"],[3458,"polars_plan::dsl::function_expr"],[3459,"polars_core::datatypes::dtype"],[3460,"polars_core::chunked_array::ops::sort::options"],[3461,"polars_plan::dsl::function_expr::schema"],[3462,"polars_core::datatypes::field"],[3463,"core::any"],[3464,"alloc::vec"],[3465,"polars_plan::dsl::binary"],[3466,"core::clone"],[3467,"alloc::string"],[3468,"polars_plan::dsl::udf"],[3469,"polars_core::chunked_array::cast"],[3470,"polars_plan::dsl::cat"],[3471,"polars_plan::dsl::arity"],[3472,"polars_plan::dsl::function_expr::boolean"],[3473,"polars_plan::dsl::function_expr::cat"],[3474,"polars_plan::dsl::function_expr::datetime"],[3475,"polars_plan::dsl::function_expr::pow"],[3476,"polars_plan::dsl::function_expr::strings"],[3477,"polars_plan::dsl::function_expr::struct_"],[3478,"polars_plan::dsl::functions::temporal"],[3479,"polars_plan::dsl::options"],[3480,"polars_core::utils"],[3481,"polars_lazy::dsl::eval"],[3482,"polars_time::windows::duration"],[3483,"polars_time::windows::group_by"],[3484,"polars_core::datatypes::time_unit"],[3485,"serde::de"],[3486,"polars_plan::plans"],[3487,"polars_core::series::ops"],[3488,"polars_plan::dsl::dt"],[3489,"polars_lazy::dsl::list"],[3490,"polars_arrow::legacy::kernels::ewm"],[3491,"polars_plan::dsl::struct_"],[3492,"polars_core::chunked_array::ops"],[3493,"core::fmt"],[3494,"polars_plan::plans::apply"],[3495,"polars_plan::dsl::function_expr::range"],[3496,"polars_plan::dsl::function_expr::array"],[3497,"polars_plan::dsl::function_expr::binary"],[3498,"polars_plan::dsl::function_expr::business"],[3499,"polars_plan::dsl::function_expr::list"],[3500,"polars_plan::plans::options"],[3501,"polars_core::schema"],[3502,"core::hash"],[3503,"polars_ops::series::ops::interpolation::interpolate"],[3504,"polars_ops::series::ops::is_between"],[3505,"polars_plan::dsl::name"],[3506,"polars_plan::plans::lit"],[3507,"polars_plan::dsl::python_udf"],[3508,"polars_utils::idx_vec"],[3509,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3510,"polars_ops::series::ops::rank"],[3511,"polars_time::group_by::dynamic"],[3512,"polars_core::chunked_array::ops::rolling_window"],[3513,"polars_core::datatypes"],[3514,"polars_core::chunked_array"],[3515,"polars_time::chunkedarray::rolling_window"],[3516,"polars_core::chunked_array::ops::search_sorted"],[3517,"serde::ser"],[3518,"polars_core::series::series_trait"],[3519,"polars_plan::dsl::string"],[3520,"polars_ops::chunked_array::list::to_struct"],[3521,"polars_ops::series::ops::business"],[3522,"polars_arrow::legacy::kernels::time"],[3523,"polars_plan::dsl::function_expr::rolling"],[3524,"polars_plan::dsl::function_expr::rolling_by"],[3525,"polars_plan::dsl::function_expr::trigonometry"],[3526,"polars_core::frame"],[3527,"rayon::iter"],[3528,"pyo3::types::any"],[3529,"pyo3::instance"],[3530,"polars_utils::arena"],[3531,"polars_plan::plans::ir"],[3532,"polars_plan::plans::aexpr"],[3533,"polars_plan::plans::anonymous_scan"],[3534,"polars_lazy::scan::anonymous_scan"],[3535,"polars_utils::index"],[3536,"polars_lazy::frame::exitable"],[3537,"polars_utils::aliases"],[3538,"polars_lazy::scan::csv"],[3539,"polars_lazy::scan::ipc"],[3540,"polars_lazy::scan::ndjson"],[3541,"polars_lazy::scan::parquet"],[3542,"polars_plan::frame::opt_state"],[3543,"polars_lazy::scan::file_list_reader"],[3544,"polars_io::cloud::options"],[3545,"polars_ops::frame::join::args"],[3546,"core::iter::traits::collect"],[3547,"std::path"],[3548,"polars_io::options"],[3549,"polars_io::csv::write::options"],[3550,"polars_io::ipc::write"],[3551,"polars_io::json"],[3552,"polars_io::parquet::write::options"],[3553,"smartstring::alias"],[3554,"polars_core::frame::explode"],[3555,"core::num::nonzero"],[3556,"polars_io::csv::read::options"],[3557,"chrono_tz::timezones"],[3558,"core::cmp"],[3559,"polars_core::frame::group_by::proxy"],[3560,"polars_core::datatypes::any_value"],[3561,"std::io"],[3562,"polars_io::parquet::write::writer"],[3563,"chrono::naive::datetime"],[3564,"polars_plan::dsl::functions::selectors"],[3565,"polars_plan::dsl::functions::horizontal"],[3566,"polars_plan::dsl::functions::arity"],[3567,"polars_plan::dsl"],[3568,"polars_plan::dsl::functions::range"],[3569,"polars_plan::dsl::functions::index"],[3570,"polars_plan::dsl::functions::coerce"],[3571,"polars_plan::dsl::functions::syntactic_sugar"],[3572,"polars_plan::dsl::functions::business"],[3573,"polars_plan::dsl::functions::concat"],[3574,"polars_plan::dsl::functions::correlation"],[3575,"polars_plan::dsl::functions::repeat"],[3576,"polars_plan::client"]],"i":[0,0,0,0,0,27,5,0,36,5,55,55,40,5,55,55,27,27,27,68,27,0,27,27,27,59,59,57,5,27,0,27,0,27,5,57,27,0,0,58,27,57,0,0,27,27,5,5,57,27,59,59,59,57,27,36,59,27,27,27,27,27,27,57,57,57,0,57,57,27,40,27,27,54,5,57,0,59,27,40,40,27,27,27,27,5,0,27,5,67,0,0,0,27,59,59,59,5,60,60,0,0,27,27,5,59,36,27,40,27,5,0,0,27,5,27,58,56,0,67,40,40,27,59,59,59,27,57,36,5,27,27,0,55,55,55,55,55,55,55,57,55,55,55,55,55,57,67,0,59,60,59,5,27,36,5,59,59,68,27,0,0,5,27,27,40,40,27,59,40,40,36,27,36,27,36,0,57,57,57,36,27,40,57,27,40,57,57,57,60,40,36,54,57,27,0,55,40,40,5,27,57,0,40,57,66,59,59,27,27,27,40,27,0,60,27,36,57,27,27,27,27,27,27,5,0,60,27,59,27,27,57,27,59,27,66,0,27,27,57,27,27,27,57,5,0,0,27,27,27,27,27,27,5,59,5,5,0,59,59,59,58,59,36,27,0,59,59,59,59,59,59,0,27,0,0,5,60,36,27,59,27,0,5,0,57,57,59,59,59,27,57,27,27,57,57,57,57,57,57,57,27,40,57,0,27,27,27,59,0,27,36,57,57,0,5,5,0,0,60,57,40,57,59,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,4,4,4,4,4,5,5,5,5,0,9,10,5,0,65,61,5,9,10,5,0,5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,9,10,5,9,10,5,5,0,5,0,32,65,5,34,36,0,0,5,0,5,0,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,5,5,0,64,44,46,34,47,46,0,5,5,0,5,5,5,5,5,5,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,50,51,52,53,36,5,54,40,40,17,55,56,57,58,58,59,60,27,61,62,63,63,64,65,66,67,67,68,46,0,0,0,0,0,0,9,10,5,5,5,5,9,10,0,5,0,5,5,5,0,5,71,71,5,0,0,0,0,61,62,63,5,17,17,17,61,62,64,65,66,67,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,36,5,54,40,17,17,17,55,56,57,58,59,60,27,63,64,65,66,67,68,10,5,5,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,5,10,5,0,5,0,0,0,5,36,5,5,54,40,17,17,55,56,57,58,59,60,27,63,64,65,66,67,68,5,5,5,5,54,54,54,40,40,40,55,55,55,56,56,56,57,57,57,58,58,58,59,59,59,60,60,60,63,63,63,64,64,64,65,65,65,66,66,66,67,67,67,68,68,68,83,83,5,5,5,5,64,5,5,5,5,5,85,85,85,5,5,5,5,0,10,5,5,17,5,5,34,47,44,89,5,5,54,40,40,17,55,55,56,56,57,57,58,58,59,59,60,60,27,27,61,62,63,64,65,66,67,68,46,0,65,64,0,5,49,9,32,10,4,108,85,50,51,52,53,36,5,5,5,5,5,5,5,5,5,5,5,5,5,5,54,40,17,17,17,17,17,17,17,17,17,17,17,17,55,56,57,58,59,60,27,27,27,27,27,61,62,63,64,65,66,66,67,68,46,17,46,0,5,0,10,5,10,5,9,10,5,49,77,15,32,34,89,5,5,4,36,5,5,54,40,55,56,57,58,59,60,27,63,64,65,66,67,68,10,5,5,61,62,5,0,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,46,0,0,5,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,5,105,10,4,5,4,4,5,5,5,5,5,5,5,5,0,5,0,5,4,4,5,9,10,85,108,5,0,10,5,0,10,5,5,0,5,5,5,5,5,5,5,108,5,0,5,32,32,17,17,5,17,108,17,5,0,5,5,0,32,5,32,32,32,32,0,9,10,5,0,0,10,5,0,0,9,10,5,5,61,62,62,0,9,10,5,0,63,61,62,5,61,5,9,10,5,5,46,5,5,62,5,5,5,32,32,17,61,62,46,5,5,0,5,0,5,46,5,51,53,4,5,5,5,5,5,0,5,4,5,108,108,5,0,5,5,0,5,5,5,0,5,5,85,0,5,5,32,5,5,46,9,10,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,65,65,17,5,10,10,5,5,61,62,36,5,54,40,17,17,17,55,56,57,58,59,60,27,63,64,65,66,67,68,10,10,5,10,9,10,5,5,5,5,5,5,5,5,10,5,9,10,5,5,0,5,9,10,5,5,64,5,0,5,5,108,108,0,9,10,5,0,17,10,5,5,5,0,50,52,0,61,62,61,10,5,9,108,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,5,32,5,40,55,56,57,58,59,60,27,9,10,108,5,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,32,32,5,32,34,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,0,4,10,9,10,5,5,9,10,5,5,5,9,10,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,62,0,51,53,63,61,61,62,32,85,62,61,62,61,62,61,62,62,61,62,61,62,32,32,61,62,61,61,62,61,5,61,199,200,201,199,200,201,199,202,203,204,205,206,207,207,208,209,205,210,211,212,213,214,210,209,212,206,215,214,216,215,215,216,207,208,212,213,214,213,214,213,211,209,216,205,211,217,218,219,220,221,222,223,224,225,226,227,228,228,220,221,217,220,221,217,221,217,229,230,222,231,232,233,233,218,232,234,235,236,237,233,217,238,239,240,241,242,243,234,231,233,244,245,246,247,248,249,244,245,250,247,248,249,251,252,253,253,250,246,251,252,254,254,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,27,55,55,55,55,27,27,27,27,27,27,27,59,59,57,27,27,0,27,57,27,0,58,27,57,27,27,57,27,59,59,59,57,27,59,27,27,27,27,27,27,57,57,57,57,57,27,27,27,57,59,27,27,27,27,27,27,27,59,59,59,60,60,27,27,59,27,27,0,27,27,58,56,27,59,59,59,27,57,27,27,55,55,55,55,55,55,55,57,55,55,55,55,55,57,59,60,59,27,59,59,27,27,27,27,59,27,27,57,57,57,27,57,27,57,57,57,60,57,27,55,27,57,57,59,59,27,27,27,27,0,60,27,57,27,27,27,27,27,27,60,27,59,27,27,57,27,59,27,27,27,57,27,27,27,57,27,27,27,27,27,27,59,59,59,59,58,59,27,0,59,59,59,59,59,59,27,0,60,27,59,27,0,57,57,59,59,59,27,57,27,27,57,57,57,57,57,57,57,27,57,27,27,27,59,27,57,57,60,57,57,59,0,0,0,0,0,202,203,204,217,218,219,220,221,222,223,224,225,226,227,228,228,220,221,217,220,221,217,221,217,229,230,222,231,232,233,233,218,232,234,235,236,237,233,217,238,239,240,241,242,243,234,231,233,244,245,246,247,248,249,244,245,250,247,248,249,251,252,253,253,250,246,251,252,254,254,0,56,58,58,0,58,130,130,130,130,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,131,131,131,131,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,62,0,0,0,0,0,61,62,0,0,0,0,0,0,0,0,0,61,62,62,0,61,62,61,62,0,0,0,0,0,0,0,61,62,0,0,0,0,61,62,61,62,61,0,0,0,0,139,111,139,111,139,111,139,139,139,139,111,139,111,139,139,111,139,139,139,139,139,139,111,139,139,111,111,139,111,139,111,139,139,111,139,111,139,111,111,139,111,139,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,153,136,147,150,155,156,157,158,159,136,136,147,148,136,136,147,148,153,136,147,150,155,156,157,158,159,148,153,136,147,150,155,156,157,158,159,136,136,156,158,153,136,136,153,136,147,150,155,156,157,158,159,153,136,147,150,155,156,157,158,159,153,136,147,150,155,156,157,158,159,159,160,160,155,156,158,168,159,148,136,136,168,159,168,159,160,160,155,136,136,136,150,156,158,159,148,153,136,147,150,155,156,157,158,159,148,153,136,147,150,155,156,157,158,159,136,136,136,136,148,153,153,136,136,147,150,155,156,157,158,159,136,136,168,159,136,136,168,159,153,136,153,168,159,136,136,136,148,160,160,155,157,160,155,157,136,159,148,148,153,136,136,136,147,150,155,156,157,158,159,136,136,160,160,155,158,136,136,136,147,156,158,148,156,158,150,148,153,136,147,150,155,156,157,158,159,136,148,153,136,147,150,155,156,157,158,159,136,136,148,136,167,136,136,148,136,136,147,157,158,136,136,136,136,136,156,136,136,160,155,157,150,156,158,150,148,155,157,155,157,168,159,136,148,136,158,160,155,157,0,168,159,136,168,159,136,160,155,157,156,158,136,136,148,136,168,159,160,155,157,150,156,158,136,136,136,136,136,136,150,136,136,136,136,136,136,136,168,159,136,136,136,136,136,136,150,136,168,159,136,136,136,168,159,148,136,136,147,136,136,136,153,136,147,150,155,156,157,158,159,136,148,153,136,147,150,155,156,157,158,159,148,153,136,147,150,155,156,157,158,159,168,159,148,153,136,147,150,155,156,157,158,159,136,136,136,136,158,148,136,148,153,136,147,150,155,156,157,158,159,148,157,155,155,136,136,136,136,136,136,155,136,155,155,155,155,155,155,155,157,155,155,157,155,155,160,155,155,157,157,136,155,136,160,155,157,136,136,155,155,160,155,157,136,160,136,155,155,157,157,155,157,155,155,136,155,155,136,136,155,155,136,136,0,0,0,0,0,165,165,186,187,187,79,165,0,79,187,187,187,186,79,0,0,187,0,79,79,187,187,187,165,79,79,79,79,165,187,187,187,187,187,0,79,0,0,0,0,165,0,0,181,181,79,186,186,0,0,187,181,181,186,0,0,79,187,0,0,165,0,79,79,165,187,79,79,79,187,187,187,187,187,187,187,79,0,164,116,74,166,173,165,181,174,175,186,115,176,187,188,138,79,74,74,74,149,149,149,149,0,173,164,116,74,193,166,173,165,181,192,174,175,186,115,176,187,188,138,79,164,116,74,193,166,173,165,181,192,174,175,186,115,176,187,188,138,79,164,116,74,166,173,165,181,174,175,186,115,176,187,188,138,79,164,116,74,166,173,165,181,174,175,186,115,176,187,188,138,79,164,116,74,74,166,173,165,181,181,174,174,175,175,186,186,115,115,176,176,187,188,138,138,79,164,116,74,166,74,174,176,79,176,74,74,164,116,166,173,181,174,175,115,176,188,138,79,164,116,74,193,166,173,165,181,192,174,175,186,115,176,187,188,138,79,164,116,74,193,166,173,165,181,192,174,175,186,115,176,187,188,138,79,115,79,79,164,116,74,166,173,165,181,174,175,186,115,176,187,188,138,79,138,79,164,116,74,193,166,173,165,181,192,174,175,186,115,176,187,188,138,79,164,116,74,166,173,165,181,174,175,186,115,176,187,188,138,164,164,164,116,116,116,74,74,74,166,166,166,173,173,173,165,165,165,181,181,181,174,174,174,175,175,175,176,176,176,188,188,188,138,138,138,164,164,116,74,74,149,166,173,165,165,181,181,174,175,186,115,176,187,188,138,188,164,116,74,193,166,166,173,165,181,192,174,175,186,115,176,187,188,138,79,138,187,190,164,116,74,166,173,165,181,174,175,186,115,176,187,188,138,166,173,164,173,164,116,164,116,74,193,166,173,165,181,192,174,175,186,115,176,187,188,138,79,164,116,74,193,166,173,165,181,192,174,175,186,115,176,187,188,138,79,79,165,74,74,181,74,166,164,109,74,192,187,173,174,175,176,187,115,74,74,74,193,74,181,74,74,74,166,164,116,193,138,74,74,74,164,116,193,138,190,176,149,149,193,164,116,74,166,173,165,181,174,175,186,115,176,187,188,138,79,173,166,188,166,164,176,166,166,79,187,164,116,74,166,173,165,181,174,175,186,115,176,187,188,138,79,74,165,181,138,174,176,74,74,74,74,164,116,74,193,166,173,165,181,192,174,175,186,115,176,187,187,188,138,79,164,116,74,193,166,173,165,181,192,174,175,186,115,176,187,188,138,79,164,116,74,193,166,173,165,181,192,174,175,186,115,176,187,188,138,79,166,164,116,74,193,166,173,165,181,192,174,175,186,115,176,187,188,138,79,74,74,166,193,166,174,176,255,255,256,257,258,259,260,261,262,263,264,264,260,265,264,258,266,258,262,255,263,267,257,268,265,259,269,270,270,256,271,255,270,268,255,261,268,272,262,255,270,263,267,271,260,264,269,266,264,270,264,260,257,257,261,273,273,273],"f":"````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000000000000{hj}{{hj}{{n{jl}}}}000{jj}{{jj}}1{{j{b{A`}}}j}{{}j}{Abj}{Adj}{{jAf}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}``{{jc}j{{Al{j}}}}4321{{jcAf}j{{Al{j}}}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{j}}{b{C`c}}b}{{n{Cbl}}}{{Cd{{b{j}}b}{{Bf{{n{Cbl}}}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}{{ce{Bb{{B`{An}}}}Af}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}?{{jjChCj}j}{jj}0000{{jj}j}1>=1>=1{{jCl}j}{{cCn}j{{Aj{{Ah{j}}}}}}3{cj{{Al{j}}}}{{{b{D`}}}{{b{{Ah{Db}}}}}}`{jAb}{{{b{Dd}}}{{b{Df}}}}{{{b{Dh}}}{{b{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{j{Bh{Dl}}}j}`{jDn}{{jE`j}j}{{{b{c}}}{{b{e}}}{}{}}0000000000000000000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}0000000000000000000000000000000>{{jcg{Dj{Af}}}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{{jj{Ed{Af}}{Dj{Ef}}}j}`{{{b{Eh}}{b{A`}}}{{n{Ejl}}}}{{El{Dj{j}}}{{n{jl}}}}{{{b{Dd}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{En}}BdBd}{{n{Bdl}}}}{{El{Dj{j}}}j}{{jCj}j}0{{jCjF`}j}`{jFb}{jj}0{{jjj}j}{{jj}j}0{{{b{Fd}}}Fd}{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Dh}}}Dh}{{{b{j}}}j}{{{b{Fl}}}Fl}{{{b{E`}}}E`}{{{b{{Bb{c}}}}}{{Bb{c}}}Eb}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Cf}}}Cf}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{El}}}El}{{{b{c}}{b{C`e}}}f{}{}}000000000000000000000000{{{b{c}}}f{}}0000000000000000000000000000{{{b{{Ah{j}}}}}j}{{{b{A`}}}j}{cj{{Hj{Ej}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{Abc}j{{Al{j}}}}{{Adc}j{{Al{j}}}}{jj}00021{{jjHl}j}{{jAf}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}111{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}2{{HnjI`Af}j}0{{j{Dj{Ib}}{Bh{{Dj{Ej}}}}AfAf}j}{{jjIdIf}j}{Gjj}{{jjIdIf{Bh{Ih}}{Bh{Ej}}}j}0```{{}j}{{}{{Bb{{B`{Ij}}}}}}{{}{{Bb{{B`{En}}}}}}{{}{{Bb{{B`{An}}}}}}{{}Gj}{{}Gl}{{}H`}{{}Hb}{{}Hd}{{}Hf}{jj}{I`{{b{c}}}{}}000000000000000{{{b{{Bb{c}}}}}b{}}1111111111111111{I`{{b{C`c}}}{}}0000000000000000000000000000000{c{{n{Dh}}}Il}{c{{n{j}}}Il}{c{{n{Fl}}}Il}{c{{n{E`}}}Il}{c{{n{{Bb{{B`{In}}}}}}}Il}{c{{n{{Bb{{B`{Dd}}}}}}}Il}{c{{n{{Bb{Bd}}}}}Il}{c{{n{Fn}}}Il}{c{{n{G`}}}Il}{c{{n{Gb}}}Il}{c{{n{Gd}}}Il}{c{{n{Gf}}}Il}{c{{n{Gh}}}Il}{c{{n{Cf}}}Il}{c{{n{Gn}}}Il}{c{{n{H`}}}Il}{c{{n{Hb}}}Il}{c{{n{Hd}}}Il}{c{{n{Hf}}}Il}{c{{n{Hh}}}Il}{{AdChJ`}j}{{jChJ`}j}{{jj}}{{jc}j{{Al{j}}}}{I`f}0000000000000000000000000000000{jj}{Adj}1`{jJb}{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Glj}{{jIbAf}j}{{{b{Dh}}{b{Dh}}}Af}{{{b{j}}{b{j}}}Af}:{{{b{Fl}}{b{Fl}}}Af}{{{b{E`}}{b{E`}}}Af}{{{b{{Bb{{B`{c}}}}}}{b{{Bb{{B`{c}}}}}}}AfJd}{{{b{{Bb{Bd}}}}{b{{Bb{Bd}}}}}Af}{{{b{Fn}}{b{Fn}}}Af}{{{b{G`}}{b{G`}}}Af}{{{b{Gb}}{b{Gb}}}Af}{{{b{Gd}}{b{Gd}}}Af}{{{b{Gf}}{b{Gf}}}Af}{{{b{Gh}}{b{Gh}}}Af}{{{b{Cf}}{b{Cf}}}Af}{{{b{Gn}}{b{Gn}}}Af}{{{b{H`}}{b{H`}}}Af}{{{b{Hb}}{b{Hb}}}Af}{{{b{Hd}}{b{Hd}}}Af}{{{b{Hf}}{b{Hf}}}Af}{{{b{Hh}}{b{Hh}}}Af}{{jc}j{{Al{j}}}}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000000000000{{JfjAf}j}0{{jJh}j}{{jjId}j}11`{{jc}j{{Hj{Ej}}}}{{jc}j{{Aj{{Ah{Cj}}}}}}{jj}0{{jjj}j}{{JjCh}j}{{Jj{b{A`}}}j}{{Jj{b{{Ah{c}}}}}j{{Aj{A`}}}};;{{jJl}j}<{{}j}{Adj}77{{}{{Bb{{B`{An}}}}}}8{{jj}j}{{{b{Dd}}{b{C`Jn}}}{{n{fK`}}}}{{{b{En}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Eh}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Kb}}{b{C`Jn}}}{{n{fK`}}}}{{{b{j}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Fl}}{b{C`Jn}}}{{n{fK`}}}}{{{b{E`}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{{Bb{c}}}}{b{C`Jn}}}{{n{fK`}}}{}}{{{b{Fn}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{G`}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gb}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gd}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gf}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gh}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Cf}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gj}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Gl}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Gn}}{b{C`Jn}}}{{n{fK`}}}}{{{b{H`}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Hb}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Hd}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Hf}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Hh}}{b{C`Jn}}}{{n{fK`}}}}{{{b{El}}{b{C`Jn}}}{{n{fK`}}}}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}``{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}{{j{Bh{Dl}}}j}{cc{}}00000000000{Kdj}{Hlj}{Dlj}{Chj}{Afj}{Dhj}{Kfj}7{Efj}{Khj}{Kjj}{Ibj}{Klj}{{{b{A`}}}j}==={Kn{{Bb{{B`{Dd}}}}}}{Gh{{Bb{{B`{Dd}}}}}}{Gf{{Bb{{B`{Dd}}}}}}{L`{{Bb{{B`{Dd}}}}}}{Cf{{Bb{{B`{Dd}}}}}}{G`{{Bb{{B`{Dd}}}}}}{Lb{{Bb{{B`{Dd}}}}}}{Ld{{Bb{{B`{Dd}}}}}}{Fn{{Bb{{B`{Dd}}}}}}{Lf{{Bb{{B`{Dd}}}}}}{Gb{{Bb{{B`{Dd}}}}}}{cc{}}00000{FnCf}{G`Cf}2{GfCf}{LbCf}444444{HfHd}555{Cj{{Bb{{B`{An}}}}}}``{{jc{Bb{{B`{An}}}}Lh}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}`{{AdjAf}j}{{jc}j{{Al{j}}}}{{Adjj}j}{{jI`I`}j}{{AbjAf}j}43{Fbj}{{{b{Ij}}{b{Lj}}Ll{b{Db}}{b{Db}}}{{Bh{Db}}}}{{{b{An}}{b{Lj}}Ll{b{{Ah{Db}}}}}{{n{Dbl}}}}{{{b{D`}}}I`}{{{b{Dd}}}{{Bh{{Bb{{B`{An}}}}}}}}{{{b{Kb}}{b{Lj}}}{{n{{B`{Lj}}l}}}}99{{{b{h}}}Af}{{{b{Dh}}{b{C`c}}}fLn}{{{b{j}}{b{C`c}}}fLn}{{jDlDlDlDl}j}{{{b{Fl}}{b{C`c}}}fLn}{{{b{E`}}{b{C`c}}}fLn}{{{b{Fn}}{b{C`c}}}fLn}{{{b{G`}}{b{C`c}}}fLn}{{{b{Gb}}{b{C`c}}}fLn}{{{b{Gd}}{b{C`c}}}fLn}{{{b{Gf}}{b{C`c}}}fLn}{{{b{Gh}}{b{C`c}}}fLn}{{{b{Cf}}{b{C`c}}}fLn}{{{b{Gn}}{b{C`c}}}fLn}{{{b{H`}}{b{C`c}}}fLn}{{{b{Hb}}{b{C`c}}}fLn}{{{b{Hd}}{b{C`c}}}fLn}{{{b{Hf}}{b{C`c}}}fLn}{{{b{Hh}}{b{C`c}}}fLn}{{Adj}j}{{j{Bh{I`}}}j}{{j{Bh{j}}{Bh{I`}}AfAf}j}``{jj}{cj{{Aj{{Ah{Ch}}}}}}{{}I`}0000000000000000000000000000000`{{jjChCj}j}{{jjj}j}{{jM`}j}{{jj}j}{ce{}{}}0000000000000000000000000000000{{{b{j}}}}{MbAd}{AdAd}{h{{n{{`{Md}}l}}}}{{jccMf}j{{Al{j}}}}{{{b{h}}}Af}{{{b{h}}Af}Af}>>>{{jc}j{{Al{j}}}}????????22?{{AbjAf}j}{{AdjAf}j}{Jjj}{Mhj}{{jAfAf}j}{{}j}{Adj}{jj}210{jAd}{cjMj}{{jIb}j}3;;3;;{{Mhc}j{{Bj{{b{A`}}}{{Bf{{n{Ejl}}}}}}BlBn}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{j{b{C`c}}{b{C`}}}{{n{jl}}}{{Cd{j{b{C`}}}{{Bf{{n{jl}}}}}}}}{{{b{D`}}{Bh{{b{Ej}}}}}{{n{Dbl}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Cj}}}{{Bf{Cj}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Cj}}}{{Bf{{n{Cjl}}}}}}BlBn}}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}BlBn}}{{jc}j{{Cd{j}{{Bf{j}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Db}}}{{Bf{{n{Dbl}}}}}}BlBn}}{{Mh{B`{Bj}}}j}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{Db}}}}}{{Bf{{n{Dbl}}}}}}BlBn}}:{{ce{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}2{{{b{D`}}}{{n{Dbl}}}}{{jMnAf}j}1111{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jMh}`44`{j}{{jc}j{{Al{j}}}}0;{{{b{{Ah{Db}}}}}D`}{c{{Bb{c}}}{}}{{jjj}Gj}{{}Gl}{{{b{A`}}{Dj{Db}}{Bb{{B`{An}}}}c}ElDd}{{{b{j}}{b{C`{N`{{b{j}}}}}}}f}{{j{b{C`{N`{j}}}}}f}=={Chj}>`8{{Ffc}j{{Al{j}}}}{{Fjc}j{{Al{j}}}}{{{b{h}}}{{n{{B`{A`}}l}}}}{{je}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{je{Bh{{Nb{eCl}}}}Hf}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jj}j}{jj}0{{jjHl}j}{{}j}{h{{Dj{j}}}}{{jc}j{{Al{j}}}}{{Mh{b{A`}}}j}05`{{j{Dj{Ib}}{Bh{{Dj{Ej}}}}AfAfAf}j}{{jI`{Bh{{Dj{Ej}}}}AfAfAf}j}{{{b{A`}}jNd}j}{{jjNd}j}9{{jNf{Bh{Dl}}}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jAf}j}{{jj}}{{Jj{Dj{Ej}}}j}{{cj}j{{Al{j}}}};{{jcc}j{{Al{j}}}}{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{jcc{Bh{c}}{Bh{Cj}}}j{{Al{j}}}}{{j{b{{Ah{Ch}}}}Hh}j}`{Abj}{Adj}{jj}00{{jNh}j}{{jjGn}j}0{{j{B`{Bj}}{Bb{{B`{An}}}}Nj}j}{{jI`c}j{{Cd{{b{C`{Nn{Nl}}}}}{{Bf{{Bh{Ib}}}}}}BlBnO`}}{{jNj}j}{{jjOb}j}101010{{jNdIbNj}j}{{jjNdIbOb}j}{{jI`Af}j}434343{{{b{h}}}{{Dj{{B`{A`}}}}}}{{jKl}j}{{jEf}j}``{{}{{Bb{{B`{An}}}}}}{{jjAfAf{Bh{Dl}}}j}{{AdjAfAf{Bh{Dl}}}j}01{{jcOd}j{{Al{j}}}}``{{{b{Dh}}c}nOf}{{{b{j}}c}nOf}{{{b{Fl}}c}nOf}{{{b{E`}}c}nOf}{{{b{{Bb{{B`{Dd}}}}}}c}nOf}{{{b{{Bb{{B`{In}}}}}}c}nOf}{{{b{{Bb{Bd}}}}c}nOf}{{{b{Fn}}c}nOf}{{{b{G`}}c}nOf}{{{b{Gb}}c}nOf}{{{b{Gd}}c}nOf}{{{b{Gf}}c}nOf}{{{b{Gh}}c}nOf}{{{b{Cf}}c}nOf}{{{b{Gn}}c}nOf}{{{b{H`}}c}nOf}{{{b{Hb}}c}nOf}{{{b{Hd}}c}nOf}{{{b{Hf}}c}nOf}{{{b{Hh}}c}nOf}{{Adc}j{{Al{j}}}}0{{jOh}j}1{{Abj}j}{{Adj}j}{{jj}j}{{jce}j{{Al{j}}}{{Al{j}}}}{jj}{{j{Bh{Dl}}}j}111{{jAf}j}{{Adjj}j}4{{AbCl}j}{{AdCl}j}{{jCl}j}{{jeCn}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jjHlAf}j}8{{AbHl}j}{{AdHl}j}{{jHl}j}{jOj}`{{jCj}j}`{jJj}{{jj}}{{Mh{b{A`}}}j}0{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}{{}{{Bb{{B`{An}}}}}}{{Adj}j}{{j{Bh{I`}}}j}44{{jjj}j}{{Fdc}Ff{{Al{j}}}}{{Fhc}Fj{{Al{j}}}}{{jjIdIf}j}```{{AdI`}j}{{{b{j}}{b{Lj}}Ll}{{n{Dbl}}}}<{Mhj}{{{b{c}}}e{}{}}000000000000000000000000<{{{b{D`}}}{{n{Dbl}}}}{{{b{c}}}Ej{}}00000000{{Ab{Bh{{B`{Bj}}}}}j}{{AdOl{Bh{{B`{Bj}}}}I`}j}5{{jj}j}{{jcg{Dj{Af}}}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{c{{n{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Cj}}}{{Bf{{n{Cjl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}}}{{jc}{{n{jl}}}{{Cd{j}{{Bf{{n{jl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Db}}}{{Bf{{n{Dbl}}}}}}}}{{{b{Dd}}{b{C`{Dj{Hl}}}}}{{n{fl}}}}{{{b{c}}}On{}}0000000000000000000000000000000`{hj}{{Adc}j{{Al{j}}}}{Abj}{Adj}{jj}02100{{jAfAfEjAf}j}{{AbHl}j}{{AdHl}j}{{jHl}j}{ce{}{}}0000000000000000000000000000000`{cFd{{Al{j}}}}{{Ffc}Fh{{Al{j}}}}{{Fjc}Fh{{Al{j}}}}`{{Gjj}Gj}0{{Glj}Gl}{{{b{D`}}Cj}{{n{Dbl}}}}{{Jj{Dj{j}}}{{n{jl}}}}{{Gljjj}Gl}{{Gjjjj}Gj}1545445454{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{{b{D`}}}{{n{Dbl}}}}76{{GjIh}Gj}{{Gj{Bh{Ej}}}Gj}89{{jc}j{{Al{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{DnAf}j}{Dnj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Dnj}j}{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{I`f}3{cc{}}87{{}I`}{ce{}{}}6{c{{n{e}}}{}{}}0{{{b{c}}}On{}}2``{{Jbj{Ed{Af}}{Dj{Ef}}A@`}j}{Jbj}<;{{JbIh}j}1{{JbjIh}j}{{JbEj}j}333<;:393873333333333{{Jbj}j}44{{Jb{Bh{Ej}}jA@b}j}15{{Jb{b{A`}}}j}65066666662998:6656``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@d}}}A@d}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{c{{n{A@d}}}Il}{I`f}{{{b{A@d}}{b{A@d}}}Af}{{{b{A@d}}{b{C`Jn}}}{{n{fK`}}}}0{cc{}}{{{b{A@d}}{b{C`c}}}fLn}{{}I`}{ce{}{}}{{{b{A@d}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@f}}}A@f}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{c{{n{A@f}}}Il}{I`f}{{{b{A@f}}{b{A@f}}}Af}{{{b{A@f}}{b{C`Jn}}}{{n{fK`}}}}0{cc{}}{{{b{A@f}}{b{C`c}}}fLn}{{}I`}{ce{}{}}{{{b{A@f}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@h}}}A@h}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}0{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{c{{n{A@h}}}Il}{I`f}{{{b{A@h}}{b{A@h}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{A@h}}{b{C`Jn}}}{{n{fK`}}}}0{cc{}}{{{b{A@h}}{b{C`c}}}fLn}{{}I`}{ce{}{}}{{{b{A@h}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5``{{}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}`0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjChCj}j}{{cCn}j{{Aj{{Ah{j}}}}}}{cj{{Al{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{jCj}j}{{{b{{Ah{j}}}}}j}2{c{{A@l{{Dj{A@j}}}}}{{AAb{}{{A@n{AA`}}}}}}{cj{{Hj{Ej}}}}{{cAAd}{{A@l{AA`}}}{{Aj{{Ah{AA`}}}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}11{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{jjHl}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jjIdIf}j}0{Gjj}{{jjIdIf{Bh{Ih}}{Bh{Ej}}}j}0``{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Glj}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}``{cj{{Aj{{Ah{Ch}}}}}}{{jjChCj}j}{{jjj}j}{jj}0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{A`}}}j}00```0````2{{jjHl}j}{{{b{A`}}jNd}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{cj}j{{Al{j}}}}{{jjGn}j}0``{{jjHlAf}j}6{{jjIdIf}j}0`````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{C`c}}}{{b{C`e}}}{}{}}0{{{b{Mn}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{AAf}}A@j}{{n{A@jl}}}}{{{b{AAf}}}AAf}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}{I`{{b{c}}}{}}0{I`{{b{C`c}}}{}}0{c{{n{AAf}}}Il}{I`f}0{{{b{AAf}}{b{AAf}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{AAf}}{b{C`Jn}}}{{n{fK`}}}}{cc{}}0{{{AAj{AAh}}}AAf}{{{b{Mn}}}{{Bh{{Bb{{B`{An}}}}}}}}{{}I`}0{ce{}{}}0{{{AAj{AAh}}{Bh{Cj}}AfAf}Mn}{{{b{AAf}}c}nOf}{{{b{c}}}e{}{}}{c{{n{e}}}{}{}}000{{{b{Mn}}{b{C`{Dj{Hl}}}}}{{n{fl}}}}{{{b{c}}}On{}}066`{{OjAf}j}{Ojj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{OjjAf}j}{{Ojj}j}1{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{I`f}3{{OjjI`}j}4{{Oj{b{A`}}}{{n{jl}}}}65{cc{}}6;:{{}I`}{ce{}{}}{{Oj{b{A`}}Af}j}{{Oj{Bh{Cj}}{Bh{I`}}}j}:>>{{OjI`AAl}j}0{{OjjjAf}j}0{{OjjjAfCh}j}{Ojj}{{Ojjj}j}?;;?;??????{{OjCjH`j}j}{{Ojj}j}{{OjH`}j}{{Oj{Bh{Ih}}{Bh{Ej}}H`j}j}{{OjI`}j}{{OjjAf}j}7377{c{{n{e}}}{}{}}0{{{b{c}}}On{}}?6```````````````````{{{b{c}}d}f{}}00000000{{AA`c}{{A@l{A@j}}}{{Bj{AAn{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{Bf{{A@l{f}}}}}}}}{{AA`Af}AA`}{{ABfc}AA`{{Aj{{Ah{j}}}}}}{{ABhAf}ABh}{{{B`{ABj}}ABl}{{A@l{AA`}}}}{{AA`AA`cc}AA`{{Al{j}}}}{{ABfcABn}AA`{{Bj{A@j}{{Bf{{A@l{A@j}}}}}}BlBn}}{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000{{AA`AC`cCn}{{A@l{AA`}}}{{Aj{{Ah{j}}}}}}{AA`AA`}``{{{b{ACb}}}f}{{AA`{ACd{{b{A`}}Cj}}Af}AA`}{{AA`CjAf}AA`}{{{b{ACb}}}ACb}{{{b{AA`}}}AA`}{{{b{ABf}}}ABf}{{{b{ABl}}}ABl}{{{b{ACf}}}ACf}{{{b{ACh}}}ACh}{{{b{ACj}}}ACj}{{{b{ACl}}}ACl}{{{b{ACn}}}ACn}{{{b{c}}{b{C`e}}}f{}{}}00000000{{{b{c}}}f{}}000000000{{{b{AD`}}}{{Bh{{b{ADb}}}}}}0{{{b{ACf}}}{{Bh{{b{ADb}}}}}}````{{ABhADd}ABh}{AA`{{A@l{A@j}}}}{AA`{{A@l{ACb}}}}````{{{b{AD`}}{Dj{AA`}}}{{A@l{AA`}}}}0{{{b{ACf}}{Dj{AA`}}}{{A@l{AA`}}}}{AA`AA`}{{AA`AA`{Bh{Ej}}}AA`}{{}AA`}{{}ABl}{{}ACh}{{}ACl}{{}ACn}{I`{{b{c}}}{}}000000000{I`{{b{C`c}}}{}}000000000{{{b{AA`}}}{{A@l{Ej}}}}000{I`f}0{{{b{C`ACb}}}f}{{AA`e}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}}222222220{{AA`{Bh{{Dj{j}}}}}AA`}``{{{b{AA`}}Af}{{A@l{Ej}}}}{{AA`e}AA`{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}``{{{b{ACb}}}{{Bh{{A@l{A@j}}}}}}{{AA`I`}{{A@l{A@j}}}}{{{b{ACb}}}{{A@l{A@j}}}}``{{AA`c}AA`{{Al{j}}}}0{{AA`j}AA`}{ABhAA`}{AD`{{A@l{AA`}}}}0{ACf{{A@l{AA`}}}}{ACj{{A@l{AA`}}}}210{AA`AA`}{{{b{ACn}}{b{C`Jn}}}{{n{fK`}}}}{{ABhAf}ABh}{cc{}}0{InAA`}{ABfAA`}22222222{{AA`AA`cc}AA`{{Al{j}}}}{{{b{AA`}}}ACn}{{{b{AD`}}}Af}0{{{b{ACf}}}Af}`{{AA`e}ABf{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{AA`jcADh}ABf{{Aj{{Ah{j}}}}}}1{{ABf{Bh{I`}}}AA`}``{{ABhADj}ABh}```{{}I`}0000000008{ce{}{}}000000000{{AA`AA`ccADl}AA`{{Aj{{Ah{j}}}}}}{AA`ABh}?{AA`AA`}{ADnAA`}1={{ABhc}ABh{{Aj{{Ah{j}}}}}}{{AA`AC`}AA`}``{{ACjAf}ACj}`{{AA`cAE`{Bh{{B`{Kb}}}}{Bh{{b{A`}}}}}AA`{{Bj{A@j}{{Bf{{A@l{A@j}}}}}}BlBn}}{{AA`AAfAE`{Bh{ABn}}Af}AA`}666`{{AA`AA`{b{A`}}}{{A@l{AA`}}}}7{{{b{AD`}}}{{Bh{I`}}}}{{{b{ACf}}}{{Bh{I`}}}}{{{b{ACj}}}{{Bh{I`}}}}````;{cACf{{Aj{AEb}}}}{cACj{{Aj{AEb}}}}{{{B`{{Ah{AEd}}}}}ACf}{{{B`{{Ah{AEd}}}}}ACj}``><{{AA`{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{A@l{AAn}}}}`{{{b{AD`}}}{{b{{Ah{AEd}}}}}}{{{b{ACf}}}{{b{{Ah{AEd}}}}}}{{{b{ACj}}}{{b{{Ah{AEd}}}}}}```{AA`{{A@l{{Nb{A@jA@j}}}}}}``{{AA`jNd}AA`}{{{b{AD`}}}Af}{{{b{ACf}}}Af}{{{b{ACj}}}Af}``{{AA`ei}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}{{Aj{A`}}}{{ADf{}{{A@n{g}}}}}}{AA`AA`}{{ABhc}ABh{{Aj{{Ah{j}}}}}}{{AA`jcNh}ABf{{Aj{{Ah{j}}}}}}``{{{b{AD`}}}{{Bh{{b{AEf}}}}}}{{{b{ACf}}}{{Bh{{b{AEf}}}}}}{{{b{ACj}}}{{Bh{{b{AEf}}}}}}```{{LjAEhAf}AA`}{{cACh}{{A@l{AA`}}}{{Aj{AEb}}}}{{{B`{{Ah{AEd}}}}ACh}{{A@l{AA`}}}}{{cACl}{{A@l{AA`}}}{{Aj{AEb}}}}{{{B`{{Ah{AEd}}}}ACl}{{A@l{AA`}}}}{{{b{C`AA`}}}{{A@l{ABn}}}}`{{{b{C`AA`}}{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{A@l{ABn}}}}{{AA`c}AA`{{Aj{{Ah{j}}}}}}0{{AA`AA`cc}AA`{{Al{j}}}}{{{b{AA`}}{ABb{AB`}}{ABb{ABd}}}f}{{AA`c}AA`{{Al{j}}}}{{AA`ce}AA`{{Al{j}}}{{Al{j}}}}``{{AA`cAEj}{{A@l{f}}}{{Aj{AEb}}}}{{AA`cAEl}{{A@l{f}}}{{Aj{AEb}}}}{{AA`Ej{Bh{ADb}}AEl}{{A@l{f}}}}{{AA`cAEn}{{A@l{f}}}{{Aj{AEb}}}}{{AA`cAF`}{{A@l{f}}}{{Aj{AEb}}}}{{AA`Ej{Bh{ADb}}AF`}{{A@l{f}}}}`{{AA`ChAC`}AA`}``{{AA`cCn}AA`{{Hj{AFb}}}}{{AA`cCn}{{A@l{AA`}}}{{Aj{{Ah{j}}}}}}{{AA`Hl}AA`}``{{ABhc}ABh{{Aj{A`}}}}{AA`AA`}{{AA`AC`}AA`}{{ABf{Bh{I`}}}AA`}{AA`{{A@l{AFd}}}}0{{{b{AA`}}Af}{{A@l{Ej}}}}{{{b{c}}}e{}{}}00000000{{AA`AC`cCn}{{A@l{AA`}}}{{Aj{{Ah{j}}}}}}{c{{n{e}}}{}{}}0000000000000000000``{{{b{c}}}On{}}000000000{{AA`{Bh{{Dj{Ej}}}}AFf}AA`}0{{AA`e}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}}{{AA`AFh}AA`}`{{ABhAFj}ABh}>{ce{}{}}000000000{{ABhAA`}ABh}{{ACj{Bh{AFl}}}ACj}{{ACfAf}ACf}{{ACf{Bh{ADb}}}ACf}{{AA`Af}AA`}{{AA`j}AA`}{{AA`c}AA`{{Aj{{Ah{j}}}}}}022{{ACf{Bh{{b{A`}}}}}ACf}{{AA`c}AA`{{Aj{{Ah{AA`}}}}}}6{{ACf{Bh{ABn}}}ACf}{{ACfAFn}ACf}{{ACfHl}ACf}999{{ACjAf}ACj}{{ACf{Bh{{B`{A`}}}}}ACf}{{ACf{Bh{I`}}}ACf}=<<{{AD`c}AD`{{Al{{Bh{I`}}}}}}1{{ACfc}ACf{{Al{{Bh{I`}}}}}}{{ACj{Bh{I`}}}ACj}{{ACjc}ACj{{Al{{Bh{I`}}}}}}>{{ACf{Bh{AG`}}}ACf}{{AA`ACn}AA`}{{AD`{B`{{Ah{AEd}}}}}AD`}{{ACf{B`{{Ah{AEd}}}}}ACf}{{ACj{B`{{Ah{AEd}}}}}ACj}{{AA`Af}AA`}0{{ACf{Bh{Hl}}}ACf}{{ACfAf}ACf}{{AD`Af}AD`}1?3{{AD`c}AD`{{Al{{Bh{AEf}}}}}}{{AA`{b{A`}}{Bh{AC`}}}AA`}{{ACfc}ACf{{Al{{Bh{AEf}}}}}}{{ACf{Bh{AEf}}}ACf}{{ACj{Bh{AEf}}}ACj}{{ACjc}ACj{{Al{{Bh{AEf}}}}}}{{ACf{Bh{ABn}}}ACf}{{ACj{Bh{ABn}}}ACj}{{ACfc}{{A@l{ACf}}}{{Bj{Lj}{{Bf{{A@l{Lj}}}}}}}}{{ACfHl}ACf}={{ACfI`}ACf}0>><<>{AA`AA`}{{{b{A@j}}e{Bh{i}}{Bh{m}}Af{Bh{j}}{Bh{{b{A`}}}}}{{A@l{A@j}}}{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}{{Aj{A`}}}{{ADf{}{{A@n{g}}}}}{{Aj{A`}}}{{ADf{}{{A@n{k}}}}}}0`````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000{{{b{Id}}Ch{Bh{{b{AGb}}}}}{{n{Chl}}}}00{{{b{ABj}}}Af}00{{{b{ABj}}}{{b{Df}}}}{{{b{In}}}{{n{fl}}}}`{{{b{c}}}{{b{e}}}{}{}}00000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}00000000000000000{{{b{ADh}}}ADh}{{{b{Nh}}}Nh}{{{b{Id}}}Id}{{{b{ADl}}}ADl}{{{b{AEj}}}AEj}{{{b{ADj}}}ADj}{{{b{AFj}}}AFj}{{{b{AEl}}}AEl}{{{b{AEn}}}AEn}{{{b{AGd}}}AGd}{{{b{Nf}}}Nf}{{{b{AF`}}}AF`}{{{b{AGf}}}AGf}{{{b{AGh}}}AGh}{{{b{AAd}}}AAd}{{{b{In}}}In}{{{b{c}}{b{C`e}}}f{}{}}000000000000000{{{b{c}}}f{}}00000000000000000000000``{{{b{Id}}{b{Id}}}AGj}`{{{b{c}}{b{e}}}AGj{}{}}``{{{b{In}}}{{n{{B`{Lj}}l}}}}`{{{b{Id}}}Ch}{{{b{Id}}}Af}{{}ADh}{{}Nh}{{}ADl}{{}AEj}{{}AFj}{{}AEl}{{}AEn}{{}Nf}{{}AF`}{{}AGh}{{}AAd}{{}In}{I`{{b{c}}}{}}00000000000000000{I`{{b{C`c}}}{}}00000000000000000`{{{b{In}}}{{n{Ejl}}}}0{c{{n{ADh}}}Il}{c{{n{Nh}}}Il}{c{{n{Id}}}Il}{c{{n{ADl}}}Il}{c{{n{AEj}}}Il}{c{{n{ADj}}}Il}{c{{n{AFj}}}Il}{c{{n{AEl}}}Il}{c{{n{AEn}}}Il}{c{{n{AGd}}}Il}{c{{n{Nf}}}Il}{c{{n{AF`}}}Il}{c{{n{AGf}}}Il}{c{{n{AGh}}}Il}{c{{n{AAd}}}Il}{c{{n{In}}}Il}`{{{b{In}}}{{n{{`{Md}}l}}}}{I`f}00000000000000000{{{b{ADh}}{b{ADh}}}Af}{{{b{Nh}}{b{Nh}}}Af}{{{b{Id}}{b{Id}}}Af}{{{b{ADl}}{b{ADl}}}Af}{{{b{AEj}}{b{AEj}}}Af}{{{b{ADj}}{b{ADj}}}Af}{{{b{AFj}}{b{AFj}}}Af}{{{b{AEl}}{b{AEl}}}Af}{{{b{AEn}}{b{AEn}}}Af}{{{b{AGd}}{b{AGd}}}Af}{{{b{Nf}}{b{Nf}}}Af}{{{b{AF`}}{b{AF`}}}Af}{{{b{AGf}}{b{AGf}}}Af}{{{b{AGh}}{b{AGh}}}Af}{{{b{AAd}}{b{AAd}}}Af}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000`{{{b{ADh}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Nh}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Id}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{ABj}}{b{C`Jn}}}{{n{fK`}}}}{{{b{ADl}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AEj}}{b{C`Jn}}}{{n{fK`}}}}{{{b{ADj}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{AFj}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{AEl}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AEn}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AGd}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Nf}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AF`}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AGf}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AGh}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AAd}}{b{C`Jn}}}{{n{fK`}}}}`{cc{}}0000{ADjADl}1111111111111`{{{b{AGf}}}Cj}{{{b{AGl}}{Dj{Bd}}{b{ADh}}}{{n{{Nb{Bd{Dj{Bd}}AGn}}l}}}}{{{b{ADh}}{b{C`c}}}fLn}{{{b{Nh}}{b{C`c}}}fLn}{{{b{Id}}{b{C`c}}}fLn}{{{b{ADl}}{b{C`c}}}fLn}{{{b{AEj}}{b{C`c}}}fLn}{{{b{ADj}}{b{C`c}}}fLn}{{{b{AFj}}{b{C`c}}}fLn}{{{b{AEl}}{b{C`c}}}fLn}{{{b{AEn}}{b{C`c}}}fLn}{{{b{AGd}}{b{C`c}}}fLn}{{{b{Nf}}{b{C`c}}}fLn}{{{b{AF`}}{b{C`c}}}fLn}{{{b{AGf}}{b{C`c}}}fLn}{{{b{AGh}}{b{C`c}}}fLn}{{{b{AAd}}{b{C`c}}}fLn}``````{{}I`}00000000000000000{ce{}{}}00000000000000000{{{b{In}}}}{{{b{ADj}}}Af}{{{b{Id}}{Bh{{b{A`}}}}}Af}{{{b{Id}}}Af}{{{b{AFj}}{b{ADj}}}{{n{fl}}}}1``{Mjj}{Idj}{AH`j}{AGfj}````{AGfAGf}`{{{b{Id}}}Ch}7{{IdCh}Id}`1{{{b{AFj}}}Af}{Id}:{ChId}{ADjADl}````{{{b{A`}}}Id}`{{{b{Id}}{b{Id}}}{{Bh{AGj}}}}````{{{b{AGl}}{Dj{Bd}}{b{Nh}}}{{n{{Nb{Bd{Dj{Bd}}AGn}}l}}}}`{{{b{ABj}}AHb}{{n{A@jl}}}}{{{b{ABj}}{Bh{I`}}}{{n{{B`{Lj}}l}}}}`{{{b{ADh}}c}nOf}{{{b{Nh}}c}nOf}{{{b{Id}}c}nOf}{{{b{ADl}}c}nOf}{{{b{AEj}}c}nOf}{{{b{ADj}}c}nOf}{{{b{AFj}}c}nOf}{{{b{AEl}}c}nOf}{{{b{AEn}}c}nOf}{{{b{AGd}}c}nOf}{{{b{Nf}}c}nOf}{{{b{AF`}}c}nOf}{{{b{AGf}}c}nOf}{{{b{AGh}}c}nOf}{{{b{AAd}}c}nOf}{{{b{In}}c}nOf}`{{{b{ADl}}}Af}````{{{b{ADl}}}{{b{A`}}}}`{In{{n{AFdl}}}}{{{b{AGf}}}{{Bh{AHd}}}}{{{b{c}}}e{}{}}000000000000000{{{b{c}}}Ej{}}00`{{{b{AEl}}c}{{AHf{c}}}AHh}{{{b{AF`}}c}{{AHj{c}}}AHh}{{{b{Id}}Ch{Bh{{b{AGb}}}}ceg}{{n{Chl}}}{{Bj{Ch}{{Bf{Ch}}}}}{{Bj{Ch}{{Bf{AHl}}}}}{{Bj{AHl}{{Bf{Ch}}}}}}{{{b{Id}}Ch{Bh{{b{AGb}}}}}{{n{Chl}}}}00{c{{n{e}}}{}{}}0000000000000{AHd{{n{AGfl}}}}1111111111111111111111{{{b{c}}}On{}}00000000000000000`{ce{}{}}00000000000000000{{{b{Id}}}Ch}{{{b{Id}}}Af}{{ADlADd}ADl}`{{ADl{Bh{Ej}}}ADl}{{{b{AEl}}A@jc}{{n{fl}}}AHh}{{{b{AF`}}A@jc}{{n{fl}}}AHh}``````````````````````````````````````````````````````````","D":"GEj","p":[[1,"reference"],[5,"Private",3443],[1,"unit"],[5,"MetaNameSpace",5,3444],[6,"Expr",5,3445],[6,"PolarsError",3446],[6,"Result",3447],[1,"str"],[5,"ArrayNameSpace",5,3448],[5,"ListNameSpace",5,3449],[1,"bool"],[1,"slice"],[10,"AsRef",3450],[10,"Into",3450],[10,"FunctionOutputField",5,3451],[5,"Arc",3452],[5,"SpecialEq",5,3451],[5,"Series",3453],[17,"Output"],[6,"Option",3454],[10,"Fn",3455],[10,"Send",3456],[10,"Sync",3456],[0,"mut"],[6,"VisitRecursion",3457],[10,"FnMut",3455],[6,"FunctionExpr",5,3458],[1,"i64"],[6,"DataType",3459],[5,"SortOptions",3460],[5,"SortMultipleOptions",3460],[5,"FieldsMapper",5,3461],[5,"Field",3462],[10,"SeriesUdf",5,3451],[10,"Any",3463],[6,"AggExpr",5,3445],[5,"Vec",3464],[1,"u64"],[5,"BinaryNameSpace",1646,3465],[6,"Operator",5,3445],[10,"Clone",3466],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3451],[5,"String",3467],[5,"UserDefinedFunction",5,3468],[10,"SeriesBinaryUdf",5,3451],[6,"CastOptions",3469],[5,"CategoricalNameSpace",5,3470],[5,"When",5,3471],[5,"Then",5,3471],[5,"ChainedWhen",5,3471],[5,"ChainedThen",5,3471],[6,"Excluded",5,3445],[6,"BooleanFunction",5,3472],[6,"CategoricalFunction",5,3473],[6,"TemporalFunction",5,3474],[6,"PowFunction",5,3475],[6,"StringFunction",5,3476],[6,"StructFunction",5,3477],[5,"DatetimeArgs",5,3478],[5,"DurationArgs",5,3478],[5,"RollingCovOptions",5,3479],[5,"StrptimeOptions",5,3479],[5,"JoinOptions",5,3479],[6,"WindowType",5,3479],[6,"WindowMapping",5,3479],[6,"NestedType",5,3479],[10,"IntoVec",3480],[1,"u8"],[10,"ExprEvalExtension",5,3481],[1,"usize"],[1,"f64"],[5,"Duration",2761,3482],[6,"ClosedWindow",3483],[6,"TimeUnit",3484],[10,"BinaryUdfOutputField",5,3451],[10,"Deserializer",3485],[6,"DslPlan",2761,3486],[6,"NullBehavior",3487],[5,"DateLikeNameSpace",1667,3488],[10,"Sized",3456],[10,"ListNameSpaceExtension",5,3489],[5,"EWMOptions",3490],[5,"StructNameSpace",5,3491],[6,"FillNullStrategy",3492],[5,"Formatter",3493],[5,"Error",3493],[10,"UdfSchema",5,3494],[1,"u16"],[1,"i8"],[1,"i16"],[1,"f32"],[1,"u32"],[6,"RangeFunction",3495],[6,"ArrayFunction",3496],[6,"BinaryFunction",3497],[6,"BusinessFunction",3498],[6,"ListFunction",3499],[5,"FunctionOptions",3500],[5,"Schema",3501],[6,"Context",3486],[10,"Hasher",3502],[6,"InterpolationMethod",3503],[10,"IntoListNameSpace",5,3489],[10,"Display",3493],[6,"ClosedInterval",3504],[5,"ExprNameNameSpace",5,3505],[10,"Literal",2761,3506],[10,"FnOnce",3455],[5,"PythonUdfExpression",2200,3507],[5,"UnitVec",3508],[1,"tuple"],[6,"QuantileInterpolOptions",3509],[5,"RankOptions",2761,3510],[5,"RollingGroupOptions",2761,3511],[5,"RollingOptionsFixedWindow",3512],[5,"Float64Type",3513],[5,"ChunkedArray",3514],[10,"Copy",3456],[5,"RollingOptionsDynamicWindow",3515],[6,"SearchSortedSide",3516],[10,"Serializer",3517],[6,"IsSorted",3518],[5,"StringNameSpace",2246,3519],[6,"ListToStructWidthStrategy",3520],[5,"TypeId",3463],[6,"Roll",3521],[6,"NonExistent",3522],[6,"RollingFunction",2016,3523],[6,"RollingFunctionBy",2049,3524],[6,"TrigonometricFunction",2081,3525],[5,"DataFrame",3526],[8,"PolarsResult",3446],[17,"Item"],[5,"LazyFrame",2313],[10,"IntoParallelIterator",3527],[5,"UnionArgs",2761,3500],[5,"PythonFunction",2200,3507],[5,"PyAny",3528],[5,"Py",3529],[1,"char"],[5,"Node",3530],[6,"IR",3531],[5,"Arena",3530],[6,"AExpr",3532],[5,"LazyGroupBy",2313],[5,"JoinBuilder",2313],[10,"AnonymousScan",2761,3533],[5,"ScanArgsAnonymous",2313,3534],[8,"SchemaRef",3501],[8,"IdxSize",3535],[5,"InProcessQuery",2313,3536],[8,"PlHashMap",3537],[5,"LazyCsvReader",2313,3538],[5,"ScanArgsIpc",2313,3539],[5,"LazyJsonLineReader",2313,3540],[5,"ScanArgsParquet",2313,3541],[5,"OptState",2313,3542],[10,"LazyFileListReader",2313,3543],[5,"CloudOptions",3544],[6,"JoinCoalesce",3545],[10,"IntoIterator",3546],[5,"DynamicGroupOptions",2761,3511],[6,"JoinType",2761,3545],[5,"JoinArgs",2761,3545],[10,"IntoLazy",2313],[8,"AllowedOptimizations",2313,3542],[5,"Path",3547],[5,"PathBuf",3547],[5,"RowIndex",3548],[8,"PyObject",3529],[5,"CsvWriterOptions",2761,3549],[5,"IpcWriterOptions",2761,3550],[5,"JsonWriterOptions",2761,3551],[5,"ParquetWriteOptions",2761,3552],[8,"String",3553],[5,"IRPlan",3531],[6,"UniqueKeepStrategy",3526],[5,"UnpivotArgs",3554],[6,"JoinValidation",2761,3545],[8,"NonZeroUsize",3555],[6,"CsvEncoding",3556],[6,"NullValues",3556],[6,"Tz",3557],[6,"RankMethod",2761,3510],[6,"LiteralValue",2761,3506],[5,"AnonymousScanOptions",2761,3500],[6,"Ordering",3558],[10,"PolarsTemporalGroupby",2761,3511],[6,"GroupsProxy",3559],[5,"Null",2761,3506],[5,"AnonymousScanArgs",2761,3533],[6,"AnyValue",3560],[5,"IpcWriter",3550],[10,"Write",3561],[5,"ParquetWriter",3562],[5,"NaiveDateTime",3563],[15,"Quantile",1534],[15,"Min",1534],[15,"Max",1534],[15,"IsBetween",1940],[15,"Any",1940],[15,"All",1940],[15,"SortBy",1544],[15,"Filter",1544],[15,"Cast",1544],[15,"Sort",1544],[15,"Gather",1544],[15,"RenameAlias",1544],[15,"Ternary",1544],[15,"Function",1544],[15,"Window",1544],[15,"AnonymousFunction",1544],[15,"Slice",1544],[15,"BinaryExpr",1544],[15,"QCut",1943],[15,"Entropy",1943],[15,"Log",1943],[15,"Hist",1943],[15,"Cut",1943],[15,"Correlation",1943],[15,"Round",1943],[15,"TopK",1943],[15,"TopKBy",1943],[15,"RoundSF",1943],[15,"EwmMeanBy",1943],[15,"Clip",1943],[15,"BackwardFill",1943],[15,"ForwardFill",1943],[15,"Random",1943],[15,"GatherEvery",1943],[15,"ValueCounts",1943],[15,"Rank",1943],[15,"EwmMean",1943],[15,"EwmStd",1943],[15,"EwmVar",1943],[15,"ReplaceStrict",1943],[15,"CumCount",1943],[15,"CumSum",1943],[15,"CumProd",1943],[15,"CumMin",1943],[15,"CumMax",1943],[15,"ConcatHorizontal",1988],[15,"ConcatVertical",1988],[15,"ExtractGroups",1988],[15,"JsonDecode",1988],[15,"PadStart",1988],[15,"PadEnd",1988],[15,"SplitExact",1988],[15,"Contains",1988],[15,"Find",1988],[15,"Replace",1988],[15,"DatetimeFunction",2008],[15,"GroupBy",3385],[15,"Union",3385],[15,"Sort",3385],[15,"Cache",3385],[15,"ExtContext",3385],[15,"DataFrameScan",3385],[15,"IR",3385],[15,"Select",3385],[15,"HStack",3385],[15,"Scan",3385],[15,"MapFunction",3385],[15,"Filter",3385],[15,"Distinct",3385],[15,"Slice",3385],[15,"Sink",3385],[15,"Join",3385],[15,"HConcat",3385],[15,"PythonScan",3385],[15,"Range",3440]],"r":[[7,3445],[21,3448],[30,3451],[32,3472],[37,3473],[38,3470],[42,3471],[43,3471],[66,3478],[76,3478],[86,3445],[90,3445],[91,3481],[92,3505],[100,3461],[101,3505],[111,3458],[112,3451],[118,3451],[132,3489],[148,3479],[160,3449],[161,3489],[176,3444],[195,3479],[202,3445],[213,3475],[225,3451],[236,3479],[245,3451],[246,3451],[257,3451],[265,3476],[272,3479],[274,3477],[275,3491],[282,3474],[284,3471],[304,3494],[309,3468],[314,3471],[317,3479],[318,3479],[358,3564],[362,3565],[369,3565],[372,3566],[376,3567],[378,3568],[393,3569],[395,3569],[401,3570],[402,3571],[404,3567],[406,3471],[473,3572],[480,3571],[483,3567],[569,3565],[570,3564],[571,3564],[572,3573],[573,3573],[574,3573],[583,3574],[585,3565],[589,3565],[594,3568],[595,3478],[596,3568],[597,3568],[736,3567],[738,3564],[739,3564],[740,3478],[827,3567],[867,3565],[870,3573],[935,3567],[978,3564],[1012,3568],[1013,3568],[1063,3571],[1065,3571],[1075,3567],[1078,3567],[1082,3506],[1092,3566],[1103,3567],[1106,3567],[1113,3571],[1117,3565],[1118,3571],[1121,3565],[1122,3571],[1130,3571],[1134,3565],[1160,3571],[1162,3567],[1174,3574],[1181,3567],[1184,3571],[1188,3565],[1192,3575],[1205,3574],[1206,3574],[1279,3574],[1287,3567],[1292,3571],[1296,3565],[1302,3471],[1305,3568],[1455,3567],[1503,3471],[1646,3465],[1666,3470],[1667,3488],[1740,3472],[1744,3473],[1791,3458],[1853,3475],[1892,3476],[1900,3477],[1905,3474],[1935,3458],[1936,3458],[1937,3458],[1938,3458],[1939,3458],[2010,3473],[2014,3475],[2020,3523],[2053,3524],[2096,3525],[2125,3478],[2126,3478],[2127,3564],[2128,3565],[2130,3565],[2131,3566],[2132,3568],[2133,3569],[2134,3569],[2135,3570],[2136,3571],[2137,3571],[2138,3565],[2139,3564],[2141,3564],[2143,3573],[2146,3573],[2147,3573],[2148,3574],[2149,3565],[2150,3565],[2151,3568],[2152,3568],[2153,3478],[2154,3568],[2155,3568],[2158,3564],[2159,3564],[2160,3478],[2161,3565],[2162,3573],[2165,3564],[2166,3568],[2167,3568],[2168,3571],[2169,3571],[2170,3566],[2171,3571],[2172,3571],[2173,3571],[2177,3571],[2182,3571],[2183,3574],[2184,3571],[2185,3565],[2186,3575],[2187,3574],[2188,3574],[2191,3574],[2192,3571],[2193,3568],[2194,3568],[2200,3507],[2201,3507],[2202,3507],[2203,3507],[2246,3519],[2307,3468],[2313,3542],[2314,3536],[2317,3538],[2318,3543],[2321,3540],[2322,3542],[2323,3534],[2324,3539],[2325,3541],[2761,3533],[2762,3533],[2763,3500],[2771,3549],[2778,3486],[2779,3482],[2781,3511],[2798,3550],[2800,3545],[2801,3545],[2802,3545],[2803,3551],[2805,3506],[2806,3506],[2812,3506],[2813,3506],[2818,3552],[2819,3511],[2822,3510],[2823,3510],[2825,3511],[2841,3500],[2865,3576]],"b":[[602,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[603,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[604,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[681,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[682,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[683,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[743,"impl-PartialEq-for-Expr"],[744,"impl-Expr"],[747,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[748,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[838,"impl-Display-for-Expr"],[839,"impl-Debug-for-Expr"],[841,"impl-Debug-for-Operator"],[842,"impl-Display-for-Operator"],[844,"impl-Display-for-BooleanFunction"],[845,"impl-Debug-for-BooleanFunction"],[846,"impl-Debug-for-CategoricalFunction"],[847,"impl-Display-for-CategoricalFunction"],[848,"impl-Display-for-TemporalFunction"],[849,"impl-Debug-for-TemporalFunction"],[850,"impl-Display-for-PowFunction"],[851,"impl-Debug-for-PowFunction"],[852,"impl-Debug-for-StringFunction"],[853,"impl-Display-for-StringFunction"],[854,"impl-Display-for-StructFunction"],[855,"impl-Debug-for-StructFunction"],[856,"impl-Debug-for-FunctionExpr"],[857,"impl-Display-for-FunctionExpr"],[884,"impl-From%3Cu16%3E-for-Expr"],[885,"impl-From%3Cu8%3E-for-Expr"],[886,"impl-From%3Cu64%3E-for-Expr"],[887,"impl-From%3Ci64%3E-for-Expr"],[888,"impl-From%3Cbool%3E-for-Expr"],[889,"impl-From%3CAggExpr%3E-for-Expr"],[890,"impl-From%3Ci8%3E-for-Expr"],[892,"impl-From%3Ci32%3E-for-Expr"],[893,"impl-From%3Ci16%3E-for-Expr"],[894,"impl-From%3Cf32%3E-for-Expr"],[895,"impl-From%3Cf64%3E-for-Expr"],[896,"impl-From%3Cu32%3E-for-Expr"],[897,"impl-From%3C%26str%3E-for-Expr"],[901,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[902,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[903,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[904,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[905,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[906,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[907,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[908,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[909,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[910,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[911,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[918,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[919,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[921,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[922,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[955,"impl-Hash-for-Expr"],[956,"impl-Expr"],[1243,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1244,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1245,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[2036,"impl-Display-for-RollingFunction"],[2037,"impl-Debug-for-RollingFunction"],[2068,"impl-Debug-for-RollingFunctionBy"],[2069,"impl-Display-for-RollingFunctionBy"],[2112,"impl-Display-for-TrigonometricFunction"],[2113,"impl-Debug-for-TrigonometricFunction"],[2486,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2487,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2722,"impl-LazyCsvReader"],[2723,"impl-LazyFileListReader-for-LazyCsvReader"],[2724,"impl-LazyJsonLineReader"],[2725,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2742,"impl-LazyFileListReader-for-LazyCsvReader"],[2743,"impl-LazyCsvReader"],[2744,"impl-LazyJsonLineReader"],[2745,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3111,"impl-Debug-for-Duration"],[3112,"impl-Display-for-Duration"],[3116,"impl-Debug-for-JoinType"],[3117,"impl-Display-for-JoinType"],[3118,"impl-Debug-for-JoinValidation"],[3119,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMYJ8wAEABEAFwAPACgAAgAtABUARAAIAE4ABwBXAAIAXAAAAF4AGQB5ABoAlQADAJoABgCiAA4AsgAVAMkABADPACUA+AAJAAMBEAAVAQYAHgEXADcBAwA8AQAAPgEkAGQBAABpAQAAbAEBAHABAAB2AQAAeAEAAIMBAACGAQAAjQEBAJABAQCVAQAAmAE/ANoBAADcAQAA3gEBAOQBAADrAU4APQIAAFcCDABlAlQAvAIAAL4CHwDfAgAA4QIAAOcCAQDqAhAA/AIsADEDAAA0AwEAOgMAAEADAABDAyAAZQMAAHUDBgB9AwUAhgMKAJcDAQCaAwEAogMAAKYDAACoAwAArQMBALIDBQC7AwEAvgMOANADAQDUAx8AGQQCAB0EAAAxBAAAOQQAAEYEAABJBAUAUgQAAFUEAABlBAAAaAQCAHAEAgB0BAMAfQQBAIEEAgCHBAEAkwQAAJUEAQCcBAAAngQAAKYEAQCsBAAArgQAALAEAAC1BAIAzwQFANYEFQD1BAAA/AQAAAMFAAAIBQAACgUAAAwFAAASBQAAFwUAABkFAAAbBQIAIgUZAD0FCQBLBT8AjQUAAI8FIQC9BQAAvwUgAOMFAQDoBQAA9QUAAPkFAQD+BRMAFQYBABgGAQAbBgEAHgYGACYGSABwBgMAdQYCAHoGAgB/BgMAhwYBAJAGAgCWBgAAmAYAAKUGAAC0BgMAvAY6AfgHAQD7BxsAGAgBABsIJwBECAEARwgGAFIIAABgCAAAbQgBAHQIAQB/CAIAgwgDAIwIAwCUCB4AtQgDALsICwDICAMAzwgCANUIAADaCAIA3wgBAP8IAwALCQMAEgkAABQJDAAkCQAAJwkUAD0JAQBCCRsAYQkBAGcJAABuCQAAcQkYAI4JAgCSCQcArgkAALAJAQCzCQAAtwkBAMMJAgDLCQEAzgkMAOoJAQDvCQEA8gkAAPQJAAD4CQEA/gkDAAMKBQALCgQAGAoDACUKAwAqCgAALgoBADEKAAAzCgAAPgoAAEsKAQBOCh0AbgoJAHwKAQB/CgkAigoAAIwKAACUCgEAnQoAAKQKAACmCgEAqwoBALcKAAC6CgAAyAoHANMKAADWCgEA2QoAANsKAwDhCgAA5AoAAOgKAgDvCgAA8QoGAPsKAgD/CgAAAgsJAA0LAgASCwAAFAsAABoLEwAxCwAAMwthAJkLiwAmDBMAPwwAAE0MAABPDBEAYgwAAGUMEQCJDAIAjQwAAI8MAACSDAMAmQwFAKAMAQCkDAAApgwCAKoMAQCuDAIAtAwVAMsMqAA="}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNNNHHNNNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_full_join_from_series","_full_join_from_series","_join_suffix_name","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","full_join","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","clone_to_uninit","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[236,"polars_ops::prelude"],[238,"polars_ops::series"],[291,"polars_ops::chunked_array::binary"],[292,"polars_core::datatypes"],[293,"polars_ops::chunked_array::binary::namespace"],[294,"polars_ops::chunked_array::scatter"],[295,"polars_utils::index"],[296,"polars_core::series"],[297,"polars_error"],[298,"core::marker"],[299,"core::option"],[300,"core::iter::traits::collect"],[301,"polars_ops::chunked_array::list::namespace"],[302,"polars_core::datatypes::aliases"],[303,"polars_core::chunked_array::ops::sort::options"],[304,"polars_core::frame"],[305,"dyn_clone::sealed"],[306,"polars_ops::frame::join::hash_join"],[307,"polars_ops::frame::join::args"],[308,"alloc::string"],[309,"polars_ops::frame::join::cross_join"],[310,"core::fmt"],[311,"core::convert"],[312,"core::hash"],[313,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[314,"polars_arrow::array::primitive"],[315,"core::result"],[316,"core::any"],[317,"polars_ops::series::ops::arg_min_max"],[318,"polars_ops::series::ops"],[319,"polars_core::chunked_array::ops::search_sorted"],[320,"polars_ops::series::ops::various"],[321,"polars_ops::frame::join::general"],[322,"polars_ops::series::ops::clip"],[323,"polars_ops::series::ops::horizontal"],[324,"polars_ops::series::ops::index"],[325,"polars_ops::series::ops::negate"],[326,"polars_ops::series::ops::not"],[327,"polars_ops::series::ops::int_range"]],"i":[0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,0,8,4,4,4,4,0,0,0,16,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,26,0,0,0,27,0,0,35,36,0,0,36,36,0,0,0,0,35,0,0,35,36,0,37,37,37,37,36,0,32,35,36,37,0,31,31,0,31,31,0,32,35,36,37,32,35,36,37,32,35,36,37,32,35,36,37,32,35,35,36,37,37,35,32,38,38,38,38,32,35,37,0,32,35,36,37,32,35,36,37,32,35,36,37,32,35,36,37,32,32,32,35,35,35,36,36,36,37,37,37,32,35,36,36,37,37,32,32,35,36,37,43,32,35,36,37,46,46,46,46,32,32,35,36,37,43,32,35,36,37,36,37,43,32,43,37,32,0,32,32,32,32,32,35,36,37,36,37,32,35,36,37,32,35,36,37,32,35,36,37,32,32,32,0,0,54,0,54,54,0,0,0,54,52,52,53,54,54,0,0,0,54,54,54,54,0,0,54,54,54,54,55,55,54,54,54,54,54,54,54,54,54,0,55,55,0,0,0,0,0,0,0,54,54,54,54,55,55],"f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}2211```{{{d{B`}}}{{d{Bb}}}}{{{d{Bd}}{d{Bf}}Bh}{{Af{Bj}}}}0{{{d{Bd}}{d{Bj}}Bh}{{Af{Bj}}}}0{{{d{Bd}}}Bl}000{{{d{Bd}}{d{{l{Ad}}}}}{{Af{Bb}}}}0{{{d{Bd}}BnBh}{{Af{Ad}}}}03322{{{d{Bd}}}{{Af{Ad}}}}0{{{d{Bd}}}Ad}00011{{{d{Bd}}}{{Af{Bl}}}}0{{{d{Bd}}}Bb}0{{{d{Bd}}{d{Ad}}}{{Af{Bb}}}}0{{{d{Bd}}BnC`}Bb}0{{{d{Bd}}Cb}{{Af{Bb}}}}0{{{d{Bd}}j}Ad}077{{{d{Bd}}}{{Af{Bb}}}}00011{{{d{Bd}}Bb}Bb}0`{{{d{Cd}}}{{d{Bj}}}}```{{{d{Cf}}}{{d{Ch}}}}````````````````````````{{{d{c}}Cj}Cl{}}000{{Ch{d{{l{{d{Bf}}}}}}{d{{l{{d{Bf}}}}}}{Al{{d{Bf}}}}{d{Ch}}}Ch}{{{d{Cn}}{d{{l{Ab}}}}BhBh}Ch}0`{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}D`}{{Af{Ch}}}}0{{{d{Bf}}{d{Bf}}}Db}{{{d{c}}}{{d{e}}}{}{}}000{{{d{Ddc}}}{{d{Dde}}}{}{}}000{{{d{D`}}}D`}{{{d{Df}}}Df}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{c}}{d{Dde}}}Cl{}{}}000{{{d{c}}}Cl{}}00000{{{d{Df}}{d{Dh}}}Bh}`{{{d{Dl}}{d{Ch}}{Al{{d{Bf}}}}{Al{{Dn{BnC`}}}}}{{Af{Ch}}}}0{{{d{Dl}}{d{Ch}}{Al{{Dn{BnC`}}}}Bh}{{Af{{Dn{ChCh}}}}}}0{{}D`}{{}Df}{{}Dj}{{}E`}{C`{{d{c}}}{}}000{C`{{d{Ddc}}}{}}000{C`Cl}000{{{d{D`}}{d{D`}}}Bh}{{{d{Df}}{d{Df}}}Bh}{{{d{Dh}}{d{Dh}}}Bh}{{{d{Dj}}{d{Dj}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00000000000{{{d{D`}}{d{DdEb}}}Ed}{{{d{Df}}{d{DdEb}}}Ed}{{{d{Dh}}{d{DdEb}}}Ed}0{{{d{Dj}}{d{DdEb}}}Ed}0{cc{}}{DhD`}111{{{d{Ef}}{d{Ch}}ee}{{Af{Ch}}}{{Eh{Bf}}}{{An{}{{Aj{c}}}}}}{{{d{D`}}{d{Ddc}}}ClEj}{{{d{Df}}{d{Ddc}}}ClEj}{{{d{Dh}}{d{Ddc}}}ClEj}{{{d{Dj}}{d{Ddc}}}ClEj}{{{d{El}}{d{Ad}}DjBh}{{Af{{Dn{EnBh}}}}}}0{{{d{El}}{d{Ad}}DjBh}{{Af{{Dn{{F`{Ab}}{F`{Ab}}}}}}}}0`{{}C`}0007{ce{}{}}000{{{d{Dh}}}Bh}{{{d{Dj}}{d{Dh}}}{{Af{Cl}}}}{{{d{Ef}}{d{Ch}}eeD`}{{Af{Ch}}}{{Eh{Bf}}}{{An{}{{Aj{c}}}}}}`;{{{d{Dj}}}Bh}={{{d{Ch}}{d{Ch}}Bh}{{Af{Fb}}}}{{{d{D`}}}Bh}`{{{d{D`}}}{{d{Bf}}}}`{{{d{c}}}e{}{}}000{{{d{c}}}Db{}}0{c{{Fd{e}}}{}{}}0000000{{{d{c}}}Ff{}}000`{{D`Df}D`}{{D`{Al{Db}}}D`}`````````{{{d{c}}Cj}Cl{}}{{{d{Fh}}}{{Al{C`}}}}0{{{d{Fj}}}{{d{Ad}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Ddc}}}{{d{Dde}}}{}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Fl}}}Fl}{{{d{c}}{d{Dde}}}Cl{}{}}{{{d{c}}}Cl{}}0{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}C`}{{Af{Bl}}}}{{}Fl}{C`{{d{c}}}{}}{C`{{d{Ddc}}}{}}{C`Cl}{{{d{Fn}}{d{Bf}}}{{Af{Cl}}}}0{{{d{Fl}}{d{Fl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00{{{d{Fl}}{d{DdEb}}}{{Fd{ClG`}}}}{cc{}}{{{d{Fl}}{d{Ddc}}}ClEj}{{}C`}{ce{}{}}{{{d{Ad}}}Bh}{{{d{Fn}}Cb}{{Af{Bh}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{Bn{d{Bf}}}{{Af{Ad}}}}2{{{d{c}}}e{}{}}{c{{Fd{e}}}{}{}}0{{{d{c}}}Ff{}}{{{d{Fn}}BhBhDbBh}{{Af{Ch}}}}0","D":"Eh","p":[[10,"AsBinary",4,291],[1,"reference"],[8,"BinaryChunked",292],[10,"BinaryNameSpaceImpl",4,293],[1,"u8"],[1,"slice"],[8,"BooleanChunked",292],[10,"ChunkedSet",4,294],[8,"IdxSize",295],[5,"Series",296],[8,"PolarsResult",297],[10,"Copy",298],[17,"Item"],[6,"Option",299],[10,"IntoIterator",300],[10,"AsList",23],[8,"ListChunked",292],[10,"ListNameSpaceImpl",23,301],[1,"str"],[1,"bool"],[8,"StringChunked",292],[8,"IdxCa",302],[1,"i64"],[1,"usize"],[5,"SortOptions",303],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",304],[5,"Private",305],[1,"unit"],[10,"JoinDispatch",78,306],[5,"JoinArgs",78,307],[5,"String",308],[0,"mut"],[6,"JoinCoalesce",78,307],[6,"JoinType",78,307],[6,"JoinValidation",78,307],[10,"CrossJoin",78,309],[1,"tuple"],[8,"ChunkJoinOptIds",78,307],[5,"Formatter",310],[8,"Result",310],[10,"DataFrameJoinOps",78],[10,"AsRef",311],[10,"Hasher",312],[10,"SeriesJoin",78,313],[8,"InnerJoinIds",78,307],[5,"PrimitiveArray",314],[8,"LeftJoinIds",78,307],[6,"Result",315],[5,"TypeId",316],[10,"ArgAgg",238,317],[10,"SeriesSealed",238,318],[6,"SearchSortedSide",238,319],[10,"SeriesMethods",238,320],[5,"Error",310]],"r":[[4,291],[5,293],[6,294],[24,301],[78,307],[79,307],[82,309],[86,307],[87,307],[88,307],[89,306],[91,307],[92,307],[95,307],[101,313],[106,321],[109,321],[112,321],[144,306],[236,78],[237,74],[239,317],[242,319],[243,320],[244,318],[251,322],[252,322],[253,322],[258,323],[259,324],[275,324],[278,323],[279,323],[280,323],[281,325],[282,326],[283,327],[284,323]],"b":[[175,"impl-Display-for-JoinType"],[176,"impl-Debug-for-JoinType"],[177,"impl-Display-for-JoinValidation"],[178,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPcAEgAAAAgACwABAA8AAgAVAA8AKQA3AGUABgBuABsAjAAnALUAAAC6AAwAzAABAM8AAADRAB4A8QAFAPkAAgD/ABAAEQEBABcBCgA="}],\
["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNOONNNNNNOONONNNNNNNNOMNNNNNNNNNNNNNNNNNONNNMNNNNNONNNNOMNONNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","allow_group_aware","allow_rename","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","changes_length","check_lengths","check_lengths","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","input_wildcard_expansion","into","into","into","is_groups_sensitive","pass_name_to_apply","register","register","returns_scalar","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[112,"polars_sql::keywords"],[114,"dyn_clone::sealed"],[115,"polars_sql::context"],[116,"polars_lazy::frame"],[117,"polars_error"],[118,"alloc::string"],[119,"polars_utils::aliases"],[120,"alloc::vec"],[121,"alloc::sync"],[122,"polars_plan::dsl::expr"],[123,"core::convert"],[124,"core::result"],[125,"core::any"],[126,"polars_plan::plans::options"],[127,"polars_plan::plans"],[128,"core::fmt"],[129,"polars_plan::dsl::udf"],[130,"core::option"],[131,"core::hash"],[132,"polars_sql::sql_expr"]],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,0,5,5,5,5,5,5,5,21,0,21,0,0,0,19,21,19,19,22,19,21,22,19,21,19,19,19,19,19,21,19,21,19,19,21,21,19,13,22,19,22,19,21,22,19,21,22,19,21,19,19,19,19,19,21,19,22,19,21,13,22,19,22,19,21,19,22,19,21,19,19,13,22,19,19,21,22,19,21,22,19,21,22,19,21,22,19,21,0,0],"f":"`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{j}}}j}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{ce{}{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{{{b{c}}}e{}{}}{c{{Bb{e}}}{}{}}0{{{b{c}}}Bd{}}{{{b{hj}}{b{n}}}f}9{{j{Al{Aj}}}j}``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00``{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}000`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{{b{c}}{b{e}}}Bh{}{}}00{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00`{ce{}{}}00{{{b{Bf}}}Bh}`{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}`{{{b{c}}}e{}{}}0{c{{Bb{e}}}{}{}}00000{{{b{c}}}Bd{}}00666{{}{{Ah{{b{n}}}}}}0","D":"Dh","p":[[1,"reference"],[5,"Private",114],[1,"unit"],[0,"mut"],[5,"SQLContext",0,115],[1,"usize"],[1,"str"],[5,"LazyFrame",116],[8,"PolarsResult",117],[5,"String",118],[8,"PlHashMap",119],[5,"Vec",120],[10,"FunctionRegistry",32],[5,"Arc",121],[6,"Expr",122],[10,"AsRef",123],[6,"Result",124],[5,"TypeId",125],[5,"FunctionOptions",32,126],[1,"bool"],[6,"Context",32,127],[5,"DefaultFunctionRegistry",32],[5,"Formatter",128],[5,"Error",128],[5,"UserDefinedFunction",129],[6,"Option",130],[10,"Hasher",131]],"r":[[0,115],[24,132],[33,127],[36,126]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAE4ADAACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABUAPwARAFUABABfAAAAYQAAAGMADQA="}],\
["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[58,"polars_time::chunkedarray::string::infer"],[84,"polars_time::prelude"],[294,"polars_time::series"],[315,"chrono::naive::datetime"],[316,"polars_time::windows::duration"],[317,"polars_time::windows::group_by"],[318,"polars_core::datatypes::time_unit"],[319,"polars_arrow::legacy::time_zone"],[320,"core::option"],[321,"polars_core::chunked_array::logical::datetime"],[322,"polars_error"],[323,"polars_time::round"],[324,"polars_core::datatypes"],[325,"chrono::naive::time"],[326,"polars_core::chunked_array::logical::time"],[327,"polars_time::truncate"],[328,"polars_time::upsample"],[329,"polars_core::frame"],[330,"alloc::string"],[331,"polars_core::utils"],[332,"dyn_clone::sealed"],[333,"polars_time::chunkedarray::string::patterns"],[334,"core::fmt"],[335,"core::hash"],[336,"core::result"],[337,"core::any"],[338,"core::clone"],[339,"polars_time::windows::bounds"],[340,"polars_time::windows::window"],[341,"core::cmp"],[342,"polars_core::datatypes::dtype"],[343,"polars_core::frame::group_by::proxy"],[344,"alloc::vec"],[345,"core::ops::function"],[346,"polars_core::series"],[347,"polars_time::date_range"]],"i":[5,0,0,5,5,0,0,0,5,0,0,0,0,44,4,0,12,0,0,16,17,17,0,0,0,25,25,25,25,25,0,0,25,23,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,0,39,0,0,32,32,32,32,32,32,32,32,32,32,0,32,32,32,32,35,32,32,32,39,32,32,5,0,0,0,42,43,0,43,0,5,42,43,5,5,42,43,0,43,0,43,43,43,0,43,41,4,5,42,43,44,4,4,4,47,41,4,5,42,43,44,47,41,4,5,42,43,44,41,4,5,42,43,44,41,4,5,42,43,44,41,41,4,4,5,5,42,42,43,43,44,44,4,4,4,4,43,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,0,0,4,5,42,43,4,4,4,5,5,5,42,42,42,43,43,43,41,4,4,5,42,43,47,41,4,5,42,43,44,44,44,44,44,0,0,4,5,42,43,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,4,4,4,4,4,4,4,4,4,4,44,47,44,4,4,4,44,44,44,41,4,5,42,43,44,4,4,4,44,4,44,4,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,43,4,4,0,0,55,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57],"f":"```````````{{{d{b}}ffhjl{A`{{d{n}}}}}{{Ad{Ab}}}}{{{d{f}}}Af}```{{{d{Ah}}{d{Aj}}{A`{{d{n}}}}}{{Ad{Ah}}}}`{{{d{b}}AlAlhj}{{Ad{An}}}}{{{d{B`}}{A`{{d{n}}}}{d{Aj}}}{{Ad{B`}}}}{{{d{Bb}}c{d{b}}h}{{Ad{Bd}}}{{Bh{Bf}}}}0``````````{{{d{c}}Bj}Bl{}}{{{d{Bn}}}{{d{Aj}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{C`c}}}{{d{C`e}}}{}{}}{{{d{Cb}}}Cb}{{{d{c}}{d{C`e}}}Bl{}{}}{{{d{c}}}Bl{}}0{Cd{{d{c}}}{}}{Cd{{d{C`c}}}{}}{CdBl}{{{d{Cb}}{d{Cb}}}Af}{{{d{c}}{d{e}}}Af{}{}}00{{{d{Cb}}{d{C`Cf}}}Ch}{cc{}}{{{d{Cb}}{d{C`c}}}BlCj}`{{}Cd}{ce{}{}}{{{d{Cb}}{d{b}}}Af}{{{d{c}}}e{}{}}{c{{Cl{e}}}{}{}}0{{{d{c}}}Cn{}}````{{{d{c}}Bj}Bl{}}{{{d{c}}}{{d{e}}}{}{}}{{{d{C`c}}}{{d{C`e}}}{}{}}{{{d{{D`{c}}}}}{{D`{c}}}{DbDd}}{{{d{c}}{d{C`e}}}Bl{}{}}{{{d{c}}}Bl{}}{Cd{{d{c}}}{}}{Cd{{d{C`c}}}{}}{CdBl}{cc{}}{{{d{b}}}{{A`{Cb}}}}{{}Cd}{ce{}{}}`{{{d{C`{D`{c}}}}{d{b}}}A`Dd}{{{d{C`Df}}{d{{Dj{Dh}}}}{A`{l}}}{{A`{c}}}{}}`{{{d{c}}}e{}{}}{c{{Cl{e}}}{}{}}{{c{A`{l}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}1{{{d{c}}}Cn{}}````````````````````````{{{d{c}}Bj}Bl{}}00000{{{d{h}}E`{A`{{d{n}}}}}{{Ad{E`}}}}00{{{d{c}}}{{d{e}}}{}{}}000000{{{d{C`c}}}{{d{C`e}}}{}{}}000000{{{d{Eb}}}Eb}{{{d{h}}}h}{{{d{j}}}j}{{{d{Ed}}}Ed}{{{d{Ef}}}Ef}{{{d{Eh}}}Eh}{{{d{c}}{d{C`e}}}Bl{}{}}00000{{{d{c}}}Bl{}}00000000000{{{d{h}}{d{h}}}Ej}{{{d{c}}{d{e}}}Ej{}{}}{{{d{h}}}E`}{{{d{h}}}Af}{{}Ef}{Cd{{d{c}}}{}}000000{Cd{{d{C`c}}}{}}000000{CdBl}000000{{h{d{El}}{d{b}}}{{Ad{Bl}}}}{{h{A`{{d{b}}}}{d{b}}}{{Ad{Bl}}}}{{{d{h}}{d{h}}}Af}{{{d{j}}{d{j}}}Af}{{{d{Ed}}{d{Ed}}}Af}{{{d{Ef}}{d{Ef}}}Af}{{{d{c}}{d{e}}}Af{}{}}00000000000{{{d{Eb}}{d{C`Cf}}}Ch}{{{d{h}}{d{C`Cf}}}Ch}0{{{d{j}}{d{C`Cf}}}Ch}{{{d{Ed}}{d{C`Cf}}}Ch}{{{d{Ef}}{d{C`Cf}}}Ch}{cc{}}000000{{{d{Eh}}E`j{A`{{d{n}}}}}{{Ad{Eb}}}}00{{{d{Eh}}Ebjl{A`{{d{n}}}}Ef}{{Ad{En}}}}{{hh{d{{Dj{E`}}}}jl{A`{n}}}{{Ad{F`}}}}{{Eh{d{{Dj{E`}}}}jl{d{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{d{h}}{d{C`c}}}BlCj}{{{d{j}}{d{C`c}}}BlCj}{{{d{Ed}}{d{C`c}}}BlCj}{{{d{Ef}}{d{C`c}}}BlCj}{{}Cd}000000{ce{}{}}0000000{{{d{h}}{A`{{d{b}}}}}Af}{{{d{h}}}Af}0{{{d{h}}}E`}1{{hE`}h}1{hc{}}3{E`h}{{hhh}Eh}{{{d{C`En}}}{{A`{c}}}{}}`{{{d{b}}}h}`{{{d{h}}{d{h}}}{{A`{Ej}}}}{{{d{Eh}}E`{A`{{d{n}}}}}{{Ad{E`}}}}00{{{d{c}}}e{}{}}00000{{{d{c}}}Bf{}}{{{d{h}}E`{A`{{d{n}}}}ceg}{{Ad{E`}}}{{Fj{E`}{{Fh{E`}}}}}{{Fj{E`}{{Fh{f}}}}}{{Fj{f}{{Fh{E`}}}}}}{{{d{h}}E`{A`{{d{n}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}0000000000000{{{d{c}}}Cn{}}000000{{{d{Ef}}}{{A`{Fl}}}}?{{{d{h}}}Af}``{{{d{Fn}}}{{d{G`}}}}{{{d{Gb}}}{{Ad{Gd}}}}{{{d{Gb}}}{{Ad{Gf}}}}0{{{d{Gb}}}{{Ad{Gh}}}}22112{{{d{Gb}}}{{Ad{Gj}}}}322{{{d{Gb}}{d{b}}}{{Ad{G`}}}}0334","D":"Gd","p":[[1,"str"],[1,"reference"],[5,"NaiveDateTime",315],[5,"Duration",84,316],[6,"ClosedWindow",84,317],[6,"TimeUnit",318],[6,"Tz",319],[6,"Option",320],[8,"DatetimeChunked",321],[8,"PolarsResult",322],[1,"bool"],[10,"PolarsRound",0,323],[8,"StringChunked",324],[5,"NaiveTime",325],[8,"TimeChunked",326],[10,"PolarsTruncate",0,327],[10,"PolarsUpsample",0,328],[5,"DataFrame",329],[5,"String",330],[10,"IntoVec",331],[5,"Private",332],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,333],[1,"usize"],[5,"Formatter",334],[8,"Result",334],[10,"Hasher",335],[6,"Result",336],[5,"TypeId",337],[5,"DatetimeInfer",58],[10,"Clone",338],[10,"PolarsNumericType",324],[10,"StrpTimeParser",58],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",58],[1,"i64"],[5,"Bounds",84,339],[6,"Label",84,317],[6,"StartBy",84,317],[5,"Window",84,340],[6,"Ordering",341],[6,"DataType",342],[5,"BoundsIter",84,340],[8,"GroupsSlice",343],[8,"TimeZone",342],[5,"Vec",344],[1,"tuple"],[17,"Output"],[10,"Fn",345],[1,"u32"],[10,"AsSeries",294],[5,"Series",346],[10,"TemporalMethods",294],[8,"Int32Chunked",324],[8,"Int8Chunked",324],[8,"BooleanChunked",324],[8,"Int16Chunked",324]],"r":[[1,317],[2,316],[5,323],[6,327],[7,328],[9,340],[11,347],[12,347],[18,347],[22,24],[30,333],[85,339],[86,340],[87,317],[90,316],[92,317],[100,317],[102,294],[106,340],[181,316],[182,316],[216,317],[217,317]],"b":[[200,"impl-Display-for-Duration"],[201,"impl-Debug-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAEBFwAAAAkADQAFABQAAAAXABkAMgACADYAEQBJAAEATAATAGEACQBsAGEA1QAAANcAAQDbAAoA7QABAPEAAgD1AAAA+AACAPwAAQABAQgACwEAAA0BAAAPARoALgEAAA=="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCCQQQQCCCCCCCQCCQCCCCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNKMHHHHFKNNNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHKKKRKRNNNNMMMHKNNNNMMTRKMMHHFNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","fixedringbuffer","float","floor_divmod","fmt","format_list","format_list_container","format_smartstring","format_tuple","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","no_call_const","nulls","ord","partitioned","priority","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","duplicate","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","drop","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","create_file","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","fmt","from","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[44,"polars_utils::abs_diff"],[48,"polars_utils::aliases"],[64,"polars_utils::arena"],[128,"polars_utils::atomic"],[149,"polars_utils::binary_search"],[151,"polars_utils::cache"],[188,"polars_utils::cell"],[208,"polars_utils::clmul"],[212,"polars_utils::contention_pool"],[227,"polars_utils::cpuid"],[229,"polars_utils::fixedringbuffer"],[252,"polars_utils::float"],[258,"polars_utils::floor_divmod"],[260,"polars_utils::functions"],[264,"polars_utils::hashing"],[298,"polars_utils::idx_vec"],[343,"polars_utils::index"],[409,"polars_utils::io"],[411,"polars_utils::iter"],[424,"polars_utils::mem"],[425,"polars_utils::min_max"],[432,"polars_utils::nulls"],[437,"polars_utils::ord"],[439,"polars_utils::partitioned"],[458,"polars_utils::priority"],[483,"polars_utils::slice"],[497,"polars_utils::sort"],[499,"polars_utils::sync"],[524,"polars_utils::sys"],[538,"polars_utils::total_ord"],[590,"polars_utils::unwrap"],[592,"polars_utils::vec"],[605,"num_traits"],[606,"core::cmp"],[607,"core::marker"],[608,"core::fmt"],[609,"core::clone"],[610,"core::option"],[611,"core::hash"],[612,"core::default"],[613,"core::ops::function"],[614,"core::result"],[615,"core::any"],[616,"core::borrow"],[617,"alloc::sync"],[618,"alloc::vec"],[619,"core::convert"],[620,"core::ops::range"],[621,"core::iter::traits::collect"],[622,"polars_utils::iter::fallible"],[623,"core::slice::iter"],[624,"polars_error"],[625,"std::fs"],[626,"std::path"],[627,"polars_utils::iter::enumerate_idx"],[628,"core::error"],[629,"core::iter::traits::iterator"],[630,"hashbrown::map"],[631,"core::mem::maybe_uninit"],[632,"core::slice::index"],[633,"num_traits::cast"],[634,"rayon_core::thread_pool"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,115,0,0,0,0,0,115,10,11,116,117,115,10,11,116,117,0,0,13,15,13,15,13,13,15,13,15,13,15,15,13,15,15,15,13,15,13,15,13,15,13,13,15,15,15,15,15,13,15,13,13,13,13,13,13,15,15,13,15,13,13,13,13,15,13,13,13,13,13,15,13,15,13,15,13,13,15,13,13,13,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,38,35,38,35,35,35,35,35,38,35,38,35,38,35,38,38,35,35,35,35,38,35,35,38,35,38,35,35,38,35,35,38,35,38,35,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,47,47,47,47,47,0,48,0,0,0,0,0,0,53,53,53,53,53,53,53,53,54,53,53,53,53,53,53,53,53,53,0,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,0,67,0,0,0,0,65,66,65,66,0,65,66,65,66,65,65,66,66,65,66,65,66,65,66,65,65,65,65,66,65,66,65,65,66,67,67,65,65,66,65,66,65,66,69,66,65,65,69,65,66,70,66,71,65,65,66,65,66,65,66,65,66,0,0,0,0,0,79,0,79,74,74,74,74,75,60,79,0,0,81,81,81,81,81,81,68,68,0,68,68,0,0,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,0,0,0,0,88,90,90,92,0,93,93,94,94,0,0,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,0,0,99,99,99,99,99,99,99,99,99,99,99,99,107,0,0,0,0,107,0,102,102,0,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,107,102,107,95,103,95,95,104,104,95,95,103,102,102,102,102,0,108,0,0,0,110,0,0,110,110,111,112,113,112,114],"f":"``````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{c}}}B`{}}00{{{Al{An}}{Al{An}}}Bd}{{{Al{c}}{Al{e}}}Bd{}{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{An}}{Al{AhBh}}}Bj}{{{Al{{Aj{c}}}}{Al{AhBh}}}Bjl}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Bl{An}}}{{Bl{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Bn{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`C`}{{}Ab}0{ce{}{}}0{{{Al{{Aj{c}}}}}Bf{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Bn{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Cb{{Cf{c}{{Cd{c}}}}}}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCb}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{Ah{Aj{c}}}}Ane}{{Ch{B``}}}Cb{{Cj{c}{{Cd{{Ch{c`}}}}}}}}{{{Al{c}}}Cl{}}0{{{Al{{Aj{c}}}}}Cn{}}{Ab{{Aj{c}}}{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{D`}}}D`}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}D`}{{{Al{D`}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{AhD`}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{ce{}{}}{{{Al{AhD`}}}B`}{AbD`}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Al{{Db{c}}}}c}AbDd}0``{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Df{ce}}}}}{{Df{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}{{Df{ce}}}{DhDj}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Dl{ceg}}}}cBf}e{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{cc{}}0{{{Al{{Df{eg}}}}{Al{c}}}{{Bn{{Al{g}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}}{{Bn{{Al{Ahg}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{E`{c}}DhDj}{}{{Cf{{Al{e}}}{{Cd{g}}}}}}{{}Ab}0{{{Al{Ah{Df{ce}}}}ce}{{Al{Ahe}}}{DhDj}{}}{ce{}{}}0{{gAb}{{Dl{ceg}}}{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{Ab{{Df{ce}}}{DhDj}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{Ah{Df{eg}}}}{Al{c}}k}{{Ch{{Al{Ahg}}i}}}{}{{E`{c}}DhDj}{}{}{{Cf{{Al{e}}}{{Cd{{Ch{gi}}}}}}}}11{{{Al{c}}}Cl{}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{}{{Eb{c}}}Cb}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{c{{Eb{c}}}{}}{cc{}}{Edc{}}{{{Al{{Eb{c}}}}}{}Dn}{{{Al{Ah{Eb{c}}}}}{{Al{Ahc}}}Dn}{{}Ab}{ce{}{}}{{{Eb{c}}}c{}}7{{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{EfEf}Ef}0{EfEf}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Eh{c}}}}}cCb}>={Ab{{Eh{c}}}Cb}{{{Al{{Eh{c}}}}c}B`Cb}<<;{{}Bf}0`{{{Al{{Ej{c}}}}}{{El{{Al{{Db{c}}}}{Al{{Db{c}}}}}}}{}}:9{{{Al{{Ej{c}}}}}Ab{}}98{{{Al{Ah{Ej{c}}}}}B`{}}8{{{Al{Ah{Ej{c}}}}cAb}Abj}8{{}Ab}{ce{}{}}{{{Al{{Ej{c}}}}}Bf{}}05{Ab{{Ej{c}}}{}}{{{Al{Ah{Ej{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Ej{c}}}}c}{{Bn{B`}}}{}}8{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`<<{{{Al{En}}}Bf}=0`{{F`F`}{{El{F`F`}}}}{{{Fb{c}}e}{{Fb{c}}}Bb{{Cj{c}{{Cd{c}}}}}}{{{Al{{Db{e}}}}{Bn{Ab}}}{{Fd{c}}}Bb{{Ff{{Db{c}}}}}}{{AbAb{Fh{Ab}}}{{Fh{Ab}}}}{{{Fb{c}}g}{{Ch{{Fb{c}}e}}}Bb{}{{Cj{c}{{Cd{{Ch{ce}}}}}}}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{Fj}}}Fj}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Fl}}}Ef}{{{Al{Fj}}}Ef}{AbB`}{{{Al{Fj}}{Al{Fj}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Fj}}{Al{AhBh}}}Bj}{cc{}}{{{Al{Fj}}{Al{Ahc}}}B`C`}{{EfAb}Ab}{{}Ab}{ce{}{}}{{{Al{Fj}}}Bf}{{{Bn{{Al{{Db{Fn}}}}}}Ef}Fj}2{{{Al{c}}}e{}{}}{{{Al{Fj}}}c{}};7{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Fjc{}}``{{{Al{Ah{G`{c}}}}}{{Al{Ah{Db{c}}}}}{}}0{{{Al{{G`{c}}}}}{{Al{{Db{c}}}}}{}}0{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{G`{c}}}}}Ab{}}{{{Al{{G`{c}}}}}{{G`{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}{{G`{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{{G`{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Ah{G`{c}}}}}B`{}}{AbB`}{{{Al{{G`{c}}}}{Al{{G`{c}}}}}BfGb}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ah{G`{c}}}}e}B`{}{{Gf{}{{Gd{c}}}}}}{{{Al{{G`{c}}}}{Al{AhBh}}}Bjl}{{{Fd{c}}}{{G`{c}}}{}}{cc{}}{{{Al{{Db{c}}}}}{{G`{c}}}Bb}{g{{Ch{ic}}}{}{}{{Gh{c}{{Gd{e}}}}}{}}{e{{G`{c}}}{}{{Gf{}{{Gd{c}}}}}}{{}Ab}{ce{}{}}{{{Al{{G`{c}}}}}Bf{}}{{{Al{{G`{c}}}}}{{Gj{c}}}{}}{{{Al{Ah{G`{c}}}}}{{Gl{c}}}{}}{{{Al{{G`{c}}}}}Ab{}}{{}{{G`{c}}}{}}{{{Al{Ah{G`{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{G`{c}}}}c}B`{}}0{{{Al{Ah{G`{c}}}}Ab}B`{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Ab{{G`{c}}}{}}`````````{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Db{Gn}}}}Gn}{{H`{B`}}}}{{{Al{Hb}}}Hb}{{{Al{Hd}}}Hd}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{c}}}B`{}}000{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Hb}}{Al{Hb}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{Hd{{El{GnGn}}}}{{{Al{Hb}}{Al{AhBh}}}Bj}{{{Al{Hd}}{Al{AhBh}}}Bj}{cc{}}{GnHb}1{{{Al{{Hf{}{{Gd{c}}}}}}Ab}cHh}0{{{Al{Hb}}}Gn}{{}Ab}0`{{{Al{AhHd}}}{{Al{AhEf}}}}{ce{}{}}0{{{Al{Hj}}}Bf}{{{Al{Hd}}}Bf}{{{Al{Hb}}}Bf}{{{Al{c}}}Bf{}}{{{Al{Hj}}}Ab}{{}Hb}{{}Hd}{{{Al{Hl}}}Ab}{{GnGn}Hd}{{HnEf}Gn}{{{Al{Hb}}}{{Bn{Gn}}}}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{c}}}Cl{}}0{c{{H`{I`}}}{{Ff{Ib}}}}0``````{Id{{`{IdGn}}}}0{Id{{`{IdCn}}}}0{g{{Ch{Ifc}}}Ih{}{{Gh{c}{{Gd{e}}}}}}{{{Al{AhGh}}}{{Ch{B`c}}}Ih}{{{In{}{{Ij{c}}{Il{e}}}}}e{}{{J`{}{{Gd{c}}}}}}{{{Al{{Db{c}}}}}{{Al{Ah{Db{c}}}}}j}`{{JbJb}Jb}000{{{Al{Jb}}{Al{Jb}}}Bf}0```{{{Al{{Hh{}{{Jd{c}}}}}}}Bf{}}{{{Hh{}{{Jd{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hEn}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Jf{ceg}}}}}{{Al{{Db{{Jh{ceg}}}}}}}{}{}{}}{{{Al{Ah{Jf{ceg}}}}}{{Al{Ah{Fd{{Jh{ceg}}}}}}}{}{}{}}{ce{}{}}{{{Fd{{Jh{ceg}}}}}{{Jf{ceg}}}{}{}{}}{{{Al{{Jf{ceg}}}}Ef}{{Jj{ceg}}}{}{}{}}{{{Al{{Jf{ceg}}}}Ef}{{El{{Jj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jf{ceg}}}}Ef}{{El{{Jl{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jf{ceg}}}}Ef}{{Jl{ceg}}}{}{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Jn{ce}}}}}{{Jn{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{{{Al{{Jn{ce}}}}{Al{{Jn{ce}}}}}Bd{DdDj}{}}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{Jn{ce}}}}{Al{{Jn{ce}}}}}BfDj{}}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{{Jn{ce}}}}{Al{AhBh}}}Bjll}{cc{}}{{}Ab}{ce{}{}}{{{Al{{Jn{ce}}}}{Al{{Jn{ce}}}}}{{Bn{Bd}}}{DdDj}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`````{{{Al{K`}}}{{Al{{Db{{Kb{c}}}}}}}{}}{{{Al{Kd}}e}Al{}{{Kf{{Db{c}}}}}}{{{Al{AhKd}}e}{{Al{Ah}}}{}{{Kf{{Db{c}}}}}}{{{Al{Kh}}}Bf}{{{Al{{Db{Fn}}}}}Ef}{{{Al{Kj}}}{{Bn{{Al{c}}}}}{}}0{{{Al{Kl}}{Fh{Ab}}}Kl}0{{e{Al{Ah{Fd{Fn}}}}Ab}{{Al{Ah{Db{g}}}}}{Knj}{{Gf{}{{Gd{c}}}}}{L`j}}{{{Al{Lb}}{Al{{Db{{El{GnGn}}}}}}{Al{Ah{Fd{Gn}}}}}B`}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Ld{c}}}}}{{Ld{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Ld{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{Ld{c}}}}{Al{AhBh}}}Bjl}{{}{{Ld{c}}}{}}{cc{}}1{{{Al{{Ld{c}}}}}{}{}}{{}Ab}{ce{}{}}{{{Al{{Ld{c}}}}}Bf{}}55{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}?><{{{Al{Lf}}}Ef}:87443```````21{LhLh}{LjLj}{{{Al{{Ll{c}}}}}{{Ll{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{{{Al{{Ll{c}}}}{Al{{Ll{c}}}}}BdKn}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Ll{c}}}}}EfFl}{AbB`}{{{Al{{Ll{c}}}}{Al{{Ll{c}}}}}BfLn}{{{Al{c}}{Al{e}}}Bf{}{}}00{cc{}}{{{Al{{Ll{c}}}}{Al{{Ll{c}}}}}BfKn}0{{{Al{{Ll{c}}}}{Al{Ahe}}}B`M`C`}{{}Ab}{ce{}{}}{{{Al{{Ll{c}}}}}BfHh}447{{{Al{{Ll{c}}}}{Al{{Ll{c}}}}}{{Bn{Bd}}}Kn}2{{{Al{c}}}e{}{}}{{{Al{{Mf{}{{Mb{c}}{Md{e}}}}}}}c{}{}}{{{Al{Kn}}{Al{Kn}}}Bd}{{{Al{Ln}}{Al{Ln}}}Bf}{{{Al{Kn}}{Al{Kn}}}Bf}0{{{Al{M`}}{Al{Ahc}}}B`C`}{{{Al{{Db{M`}}}}{Al{Ahc}}}B`C`}223{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Ll{c}}}eHh{}}`{Mhc{}}``````{{{Al{{Ml{}{{Mj{c}}}}}}g}{{Fd{e}}}{}{}{{Cj{{Al{c}}}{{Cd{e}}}}}}{{{Ml{}{{Mj{c}}}}g}{{Fd{e}}}{}{}{{Cj{c}{{Cd{e}}}}}}{{{Al{AhMn}}Abc}B`j}{N`{{El{AbAb}}}}{{{Al{AhNb}}c}B`{}}{{{Al{N`}}}{{El{AbAb}}}}{{AbLj}Nd}","D":"Jh","p":[[17,"Abs"],[10,"AbsDiff",44],[10,"Num",605],[10,"PartialOrd",606],[10,"Copy",607],[10,"Debug",608],[10,"Send",607],[10,"Sync",607],[1,"usize"],[8,"PlHashMap",48],[8,"PlHashSet",48],[0,"mut"],[5,"Arena",64],[1,"reference"],[5,"Node",64],[1,"unit"],[10,"Clone",609],[6,"Ordering",606],[1,"bool"],[5,"Formatter",608],[8,"Result",608],[1,"array"],[6,"Option",610],[10,"Hasher",611],[10,"Default",612],[17,"Output"],[10,"FnOnce",613],[6,"Result",614],[10,"FnMut",613],[5,"TypeId",615],[1,"u32"],[5,"SyncCounter",128],[1,"slice"],[10,"Ord",606],[5,"FastFixedCache",151],[10,"Hash",611],[10,"Eq",606],[5,"FastCachedFunc",151],[10,"Sized",607],[10,"Borrow",616],[5,"SyncUnsafeCell",188],[1,"never"],[1,"u64"],[5,"LowContentionPool",212],[5,"FixedRingBuffer",229],[1,"tuple"],[10,"IsFloat",252],[10,"FloorDivMod",258],[5,"Arc",617],[5,"Vec",618],[10,"AsRef",619],[5,"Range",620],[5,"BytesHash",264],[10,"DirtyHash",264],[1,"u8"],[5,"UnitVec",298],[10,"PartialEq",606],[17,"Item"],[10,"IntoIterator",621],[10,"FallibleIterator",411,622],[5,"Iter",623],[5,"IterMut",623],[8,"IdxSize",343],[8,"PolarsResult",624],[5,"NullableIdxSize",343],[5,"ChunkId",343],[10,"Indexable",343],[10,"IsNull",432],[10,"Bounded",343],[10,"NullCount",343],[10,"ToIdx",343],[5,"File",625],[5,"Path",626],[10,"EnumerateIdxTrait",411,627],[10,"FromFallibleIterator",411,622],[10,"Error",628],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",411],[10,"Iterator",629],[10,"MinMax",425],[17,"Inner"],[5,"PartitionedHashMap",439],[5,"HashMap",630],[5,"RawEntryBuilder",630],[5,"RawEntryBuilderMut",630],[5,"Priority",458],[10,"Slice2Uninit",483],[20,"MaybeUninit",631],[10,"GetSaferUnchecked",483],[10,"SliceIndex",632],[10,"SortedSlice",483],[10,"Extrema",483],[10,"SliceAble",483],[10,"TotalOrd",538],[10,"FromPrimitive",633],[5,"ThreadPool",634],[5,"SyncPtr",499],[5,"MemInfo",524],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",538],[10,"TotalEq",538],[10,"TotalHash",538],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",538],[10,"UnwrapUncheckedRelease",590],[17,"ItemIn"],[10,"ConvertVec",592],[10,"ResizeFaster",592],[10,"IntoRawParts",592],[10,"PushUnchecked",592],[10,"CapacityByFactor",592],[10,"InitHashMaps",48],[8,"PlIndexMap",48],[8,"PlIndexSet",48]],"r":[[0,343],[1,343],[411,627],[412,622],[413,622]],"b":[[322,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[324,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAkCPQAAAAgACgBWAGMAAABlAAEAaAACAG0AEwCCAAoAjgAAAJEABACZAA8AqwAFALMACQC+AAEAwQACAMYAAADJAAAAzgAMANwAAQDfAAYA6AAGAPEAAADzAAMA+QADAP4ACgAKARAAHAECACABCwAtARYARQEDAEoBBgBSASgAfAEAAH4BAACAAQQAhwEXAKABAACiAQYAqgELALgBBQC/AQIAwwEHAMwBDwDdAQAA3wEKAOwBBADyAQAA9QEHAP4BAgACAgIABgIAAAgCBQAPAgQAFgIAABgCAwAgAgMAJgINADUCAwA6AhUAUQIEAFcCAwBcAgEA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
